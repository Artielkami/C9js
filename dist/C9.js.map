<<<<<<< HEAD
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4a721c1558251fc940d8","webpack:///./src/index.js","webpack:///./src/charts/C9.BarChart.js","webpack:///./src/charts/C9.Chart.js","webpack:///./src/helper/C9.Helper.js","webpack:///./src/charts/utils/C9.Axis.js","webpack:///./src/charts/utils/C9.Title.js","webpack:///./src/charts/utils/C9.Legend.js","webpack:///./src/charts/utils/C9.Tooltip.js","webpack:///./src/helper/C9.DataAdapter.js","webpack:///./src/charts/C9.DonutChart.js","webpack:///./src/charts/C9.LineChart.js","webpack:///./src/charts/C9.PieChart.js","webpack:///./src/charts/utils/C9.Table.js","webpack:///./src/charts/C9.TimeLine.js","webpack:///./src/map/C9.Map.js"],"names":["module","exports","BarChart","DonutChart","LineChart","PieChart","TimeLine","Map","DataAdapter","options","self","config","barWidth","undefined","width","margin","left","right","height","top","bottom","body","type","dataOption","colorRange","da","dataTarget","getDataTarget","barChartType","getDataTypeForBarChart","_groupNames","groups","stacks","_isGroup","x","d3","scale","ordinal","rangeRoundBands","y","linear","range","domain","map","d","stack","name","max","_xGroup","rangeBand","_barWidth","_x","_y","updateConfig","color","xGroup","bar","selectAll","data","enter","append","attr","bars","style","i","isGroup","group","y1","y0","groupNames","groupNamesOld","newLabel","groupType","xGroupOld","midGroup","length","indexOf","exit","remove","transition","duration","updateInteraction","axis","title","legend","draw","updateInteractionForBarChart","lower","upper","d1","Math","floor","toString","split","d2","toFixed","hoverEnable","hover","enable","hoverOptions","selector","selectAllBar","onMouseOverCallback","onMouseOver","callback","onMouseOutCallback","onMouseOut","div","text_1","text_2","on","fadeIn","retrieveValue","text","fadeOut","newBarWidth","_colorRange","err","newBarColor","_groupType","newGroupType","newX","newY","newXGroup","newGroupNames","_body","Chart","id","template","legendShow","legendPosition","legendInsetAnchor","legendPadding","tooltipShow","tooltipPosition","table","container","show","headings","serial","click","plain","file","url","keys","value","time","_id","_width","_height","_hover","_dataOption","merge","_dataTarget","_margin","_svg","_options","initConfig","select","svg","_container","newContainer","newId","newWidth","newHeight","newColorRange","newMargin","arg","newSvg","newBody","newOptions","newHover","Helper","each","loopable","reverse","len","isArray","call","Object","setValue","key","setPrefix","constPrefix","isEmpty","Util","isObject","object","array","Array","prototype","isFunction","func","obj1","obj2","obj3","attrname","get","_key","_data","_keys","_current","_fun","filter","arr","sum","reduce","a","b","guid","replace","c","r","random","v","Axis","xAxe","yAxe","xAxisShow","xAxisPadding","xAxisText","yAxisShow","yAxisPadding","yAxisText","numOfTickY","tickFormat","isLogaric","y2AxisShow","y2AxisPadding","y2AxisText","gridXShow","gridYShow","_xAxisShow","_xAxisPadding","_xAxisText","_yAxisShow","_yAxisPadding","_yAxisText","_isLogaricVariant","_tickFormat","_numOfTickY","_y2AxisShow","_y2AxisPadding","_y2AxisText","_gridXShow","_gridYShow","log","min","xScale","starting","ending","_xAxis","orient","format","tickSize","ticks","hours","tickTime","tickInterval","_yAxis","innerTickSize","outerTickSize","newXAxis","newYAxis","newXAxisShow","newXAxisPadding","newYAxisShow","newYAxisPadding","newIsLogaricVariant","newY2AxisShow","newY2AxisPadding","Title","titleShow","titleText","titlePosition","titleSize","_titleShow","_titleText","_titlePosition","_titleSize","parentNode","node","getComputedTextLength","setYLocation","newTitleShow","newTitleText","newTitlePosition","newTitleSize","newtitleSize","Legend","legendBox","legendSize","legendTextSize","legendMargin","legendSpace","_legendShow","_legendTextSize","_legendPosition","_legendSize","_legendBox","_legendMargin","_legendSpace","legendDomain","p","nest","entries","forEach","values","legendContainer","legendItem","chart","path","pie","currentData","arc","chartType","chartInnerBefore","innerRadius","chartOuterBefore","radius","outerRadius","chartInnerAfter","chartOuterAfter","legendItemEventFactory","item","dataSet","totalEnable","attrTween","interpolate","t","legendSelector","ease","dataBackup","enableSet","enableSetOld","push","element","s","j","e","updateLegendInteraction","_color","newlegendShow","_legendText","newlegendText","newlegendPosition","newlegendSize","_legendItem","newLegendItem","_legendDomain","newLegendDomain","_legendItemEventFactory","newLegendItemEventFactory","Tooltip","position","offset","class","_show","_position","_offset","_class","newShow","_groups","_stacks","_dataSource","initDataSource","hasPlainData","executePlainData","hasFile","executeFile","_file","getCsv","getTsv","getText","getJson","getXml","getDataTargetForBarChart","getDataTargetForLineChart","getDataTargetForPieChart","getDataTargetForDonutChart","getDataTargetForTimelineChart","dataSource","index","_stack","_group","_dsArray","_stackItem","_tempY0","icon","_valueArray","_valueItem","start","end","csv","tsv","JSON","parse","json","xml","querySelectorAll","querySelector","textContent","R","showText","_outerRadius","_innerRadius","_showText","pathAnim","dir","eventFactory","tooltip","mouseover","mouseout","divOnHover","mouse","tooltipEventFactory","layout","sort","arcs","_currentData","updateInteractionForDonutPieChart","selectAllPath","_eventFactory","newOuterRadius","newInnerRadius","newShowText","newEventFactory","_pathAnim","newPathAnim","_tooltip","newTooltip","_pie","newPie","_arc","newArc","newCurrentData","pointShow","pointFill","pointStroke","pointOpacity","pointRadius","pointHoverEnable","_pointShow","_pointRadius","_pointFill","_pointStroke","_pointOpacity","_pointHoverEnable","_interpolate","_dataGroup","dataGroup","xAxis","yAxis","lineGen","line","_d","selectAllCircle","newPointShow","newPointFill","newPointStroke","newPointOpacity","newPointRadius","newPointHoverEnable","newInterpolate","newDataGroup","_radius","newradius","Table","_headings","_style","_serial","_click","thead","tbody","rows","rowSeparator","backgroundColor","itemHeight","itemMargin","labelMargin","striped","_starting","_ending","_rowSeparator","_backgroundColor","_itemHeight","_itemMargin","_labelMargin","_maxStack","_striped","initTimelineConfig","stackList","maxStack","minTime","maxTime","datum","barYAxis","insert","document","createElementNS","ns","prefix","getXPos","getStackPosition","lineYAxis","rowsDown","getStackTextPosition","getXTextPos","newStack","_stacked","newBackgroundColor","newRowSeparator","newStarting","newEnding","newItemHeight","newItemMargin","newLabelMargin","newMaxStack","newStriped","layers","source","view","lat","lon","zoom","_view","_markers","markers","_layers","initMapConfig","c9Layers","c9Markers","ol","Vector","c9Objs","initLayer","initMarker","initObj","c9View","View","center","proj","fromLonLat","minZoom","c9Map","target","interactions","interaction","defaults","doubleClickZoom","layer","setSource","setupSource","l","createLayer","imgSrc","marker","Feature","geometry","geom","Point","createMarkerStyle","Style","image","Icon","anchor","src","setStyle","addFeature","m","createMarker","img","BingMaps","imagerySet","Stamen","TileJSON","crossOrigin","TileArcGISRest","extractStyles","Cluster","distance","ImageVector","OSM","feature","Date","getTime","listenerKey","animate","event","vectorContext","frameState","flashGeom","getGeometry","clone","elapsed","elapsedRatio","easing","easeOut","opacity","Circle","snapToPixel","stroke","Stroke","drawGeometry","Observable","unByKey","render","LEFT_KEY","RIGHT_KEY","DURATION","LOAD_MAP_DELAY","getCoordinatesLonLat","f","transform","getCoordinates","transformCoordinates","panAnimation","pan","animation","getCenter","beforeRender","setCenter","distanceAndDirection","fCoordinates","sqrt","pow","evt","getTargetElement","cursor","hasFeatureAtPixel","pixel","once","setTimeout","getFeatures","createMarkerEffect","forEachFeatureAtPixel","$","keydown","keydownAnimate","k","selectedFeature","minDistance","Infinity","checkAnimate","keyCode","strokeWidth","strokeColor","fillColor","obj","Polygon","LineString","createObjStyle","fill","Fill","newView","newMarkers","newLayers","newData"],"mappings":"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","file":"C9.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"C9\"] = factory();\n\telse\n\t\troot[\"C9\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4a721c1558251fc940d8\n **/","// Chart Importer\r\nimport BarChart from './charts/C9.BarChart';\r\nimport DonutChart from './charts/C9.DonutChart';\r\nimport LineChart from './charts/C9.LineChart';\r\nimport PieChart from './charts/C9.PieChart';\r\nimport TimeLine from './charts/C9.TimeLine';\r\n\r\n// Map Importer\r\nimport Map from './map/C9.Map';\r\n\r\n// Helper Importer\r\nimport Helper from './helper/C9.Helper';\r\nimport DataAdapter from './helper/C9.DataAdapter';\r\n\r\nmodule.exports = {\r\n\tBarChart,\r\n\tDonutChart,\r\n\tLineChart,\r\n\tPieChart,\r\n\tTimeLine,\r\n\r\n\tMap,\r\n\t\r\n\tDataAdapter,\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Tooltip from './utils/C9.Tooltip';\r\nimport Helper from '../helper/C9.Helper';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class BarChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self = this;\r\n        var config = {\r\n            barWidth: undefined,\r\n            // groupType: \"stack\"\r\n        };\r\n\r\n        var width        = self.width - self.margin.left - self.margin.right;\r\n        var height       = self.height - self.margin.top - self.margin.bottom;\r\n        // var groupCount   = 0; // use to count how many element in group\r\n        // var groupStart   = 0; // calculate the number of those first element that just have only 1 value\r\n\r\n        self.body.type      = \"bar\";\r\n        // self._groupType     = options.groupType     ||  config.groupType;\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget = da.getDataTarget(\"bar\");\r\n        var barChartType = da.getDataTypeForBarChart()\r\n        if (barChartType != \"single\") {\r\n            self._groupNames    = da.groups || da.stacks;  //define group names use for showing legend\r\n            self._isGroup       = barChartType == \"group\"\r\n        }\r\n            \r\n        \r\n        // self.data.forEach(function(d, i) {\r\n        //     var y0 = 0; // calculate stacked data (top of each bar)\r\n        //     var count = 0; // count number of group\r\n        //     groupStart = i; \r\n        //     if (typeof d.value === \"object\") {\r\n        //         if (self.groupType == \"stack\") {\r\n        //             d.stack = d.value.map(function(v) {\r\n        //                 count++;\r\n        //                 return {name: d.name, y0: y0, y1: y0 += v, group: self._groupNames.length > 0 ? self._groupNames[count - 1] : \"Group \" + count};\r\n        //             });\r\n        //             d.total = d.stack[d.stack.length - 1].y1;\r\n        //         }\r\n        //         else if (self.groupType == \"group\") {\r\n        //             var total = -Infinity;\r\n        //             d.stack = d.value.map(function(v) {\r\n        //                 count++;\r\n        //                 total = v > total ? v : total;\r\n        //                 return {name: d.name, y0: y0, y1: v, group: self._groupNames.length > 0 ? self._groupNames[count - 1] : \"Group \" + count};\r\n        //             });\r\n        //             d.total = total;\r\n        //         }\r\n        //     }\r\n        //     else {\r\n        //         d.stack = [{name: d.name, y0: y0, y1: d.value, group: count > 0 ? self._groupNames.length > 0 ? self._groupNames[count] : \"Group \" + ++count : undefined}];\r\n        //         d.total = d.stack[d.stack.length - 1].y1;\r\n        //     }\r\n        //     if (count > groupCount)\r\n        //         groupCount = count;\r\n        // });\r\n\r\n        // // assign group to those first elements in data if they don't have\r\n        // for (var i = 0; i < groupStart - 1; i++) {\r\n        //     self.data[i].stack[0].group = self._groupNames.length > 0 ? self._groupNames[0] : \"Group 1\";\r\n        // };\r\n\r\n        // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\r\n        var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\r\n        var y = d3.scale.linear().range([height, 0]);\r\n\r\n\r\n        x.domain(self.dataTarget.map(function(d) {\r\n            return d.stack[0].name;\r\n        }));\r\n\r\n        y.domain([0, d3.max(self.dataTarget, function(d) {\r\n            return d.max;\r\n        })]);\r\n\r\n        /******** Handle for grouped, stacked bar chart ********/\r\n        if (self._groupNames) {\r\n            self._xGroup = d3.scale.ordinal();\r\n            self._xGroup.domain(self._groupNames).rangeRoundBands([0, x.rangeBand()]);\r\n        }\r\n        \r\n        //self-define group names if user do not define\r\n        // if (self._groupNames.length == 0)\r\n        //     for (var i = 1; i <= groupCount; i++) {\r\n        //         self._groupNames.push(\"Group \" + i);\r\n        //     };\r\n        \r\n        /**********************************************/\r\n\r\n        // Make flexible width according to barWidth\r\n        config.barWidth      = x.rangeBand();\r\n        self._barWidth       = options.barWidth  ||  config.barWidth;\r\n        self._x              = x;\r\n        self._y              = y;\r\n        self.updateConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get barWidth() {\r\n        return this._barWidth;\r\n    }\r\n\r\n    get colorRange() {\r\n        var color = this._colorRange;\r\n        if (typeof color == 'string') {\r\n            try {\r\n                return d3.scale[color]();    \r\n            }\r\n            catch(err) {\r\n                return function(i) {\r\n                    return color;\r\n                };\r\n            }\r\n        } else if (typeof color == 'object') {\r\n            return d3.scale.ordinal().range(color);\r\n        }\r\n    }\r\n\r\n    get groupType() {\r\n        return this._groupType;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    \r\n    get xGroup() {\r\n        return this._xGroup;\r\n    }\r\n\r\n    get groupNames() {\r\n        return this._groupNames;\r\n    }\r\n\r\n    get chartType() {\r\n        return this._body.type;\r\n    }\r\n\r\n    get isGroup() {\r\n        return this._isGroup;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set barWidth(newBarWidth) {\r\n        if (newBarWidth) {\r\n            this._barWidth = newBarWidth;\r\n        }\r\n    }\r\n    \r\n    set colorRange(newBarColor) {\r\n        if (newBarColor) {\r\n            this._colorRange = newBarColor;\r\n        }\r\n    }\r\n\r\n    set groupType(newGroupType) {\r\n        if (newGroupType) {\r\n            this._groupType = newGroupType;\r\n        }\r\n    }\r\n\r\n    set x(newX) {\r\n        if (newX) {\r\n            this._x = newX;\r\n        }\r\n    }\r\n\r\n    set y(newY) {\r\n        if (newY) {\r\n            this._y = newY;\r\n        }\r\n    }\r\n\r\n    set xGroup(newXGroup) {\r\n        if (newXGroup) {\r\n            this._xGroup = newXGroup;\r\n        }\r\n    }\r\n\r\n    set groupNames(newGroupNames) {\r\n        if (newGroupNames) {\r\n            this._groupNames = newGroupNames;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n\r\n\r\n    /**\r\n     * Init Bar Chart Config\r\n     */\r\n    updateConfig(){\r\n        var self  = this,\r\n            color = self.colorRange,\r\n            x     = self._x,\r\n            y     = self._y,\r\n            xGroup= self._xGroup;\r\n\r\n        var bar = self.body\r\n                    .selectAll(\".bar\")\r\n                    .data(self.dataTarget)\r\n                    .enter()\r\n                        .append(\"g\")\r\n                        .attr(\"class\", \"c9-chart-bar c9-custom-bar\")\r\n                        .attr(\"transform\", function(d) { return \"translate(\" + x(d.stack[0].name) + \",0)\"; });\r\n\r\n        var bars = bar.selectAll(\".c9-custom-rect\")\r\n            .data(function(d) { return d.stack; });\r\n\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"c9-custom-rect\")\r\n            .style(\"fill\", function (d, i) { return d.color || color(i); })\r\n            .attr(\"x\", function(d) { return self.isGroup ? xGroup(d.group) : undefined; })\r\n            .attr(\"y\", function(d) { return y(d.y1); })\r\n            .attr(\"width\", function(d) { return self.isGroup ? xGroup.rangeBand() : x.rangeBand(); })\r\n            .attr(\"height\", function(d) { return y(d.y0) - y(d.y1); });\r\n    }\r\n\r\n    /**\r\n     * [updateLegendInteraction description]\r\n     * @param  {[type]} data          [description]\r\n     * @param  {[type]} groupNames    [description]\r\n     * @param  {[type]} groupNamesOld [description]\r\n     * @param  {[type]} newLabel      [description]\r\n     * @return {[type]}               [description]\r\n     */\r\n    updateLegendInteraction(data, groupNames, groupNamesOld, newLabel){\r\n        var self = this;\r\n        var type = self.groupType;\r\n\r\n        var xGroup = d3.scale.ordinal();\r\n        xGroup.domain(groupNames).rangeRoundBands([0, self.x.rangeBand()]);\r\n\r\n        var xGroupOld = d3.scale.ordinal();\r\n        xGroupOld.domain(groupNamesOld).rangeRoundBands([0, self.x.rangeBand()]);\r\n\r\n        var midGroup = undefined;\r\n        //check add new label in the middle\r\n        if (groupNames.length > groupNamesOld.length && 0 < groupNames.indexOf(newLabel) && groupNames.indexOf(newLabel) < groupNames.length - 1 )\r\n            midGroup = groupNamesOld[groupNames.indexOf(newLabel)];\r\n\r\n        // self.body.selectAll(\".c9-custom-rect\").transition().duration(750).attr(\"height\", 0).remove();\r\n        self.body.selectAll(\".c9-custom-rect\").data([]).exit().remove();\r\n\r\n        var bar = self.body\r\n                    .selectAll(\".bar\")\r\n                    .data(data)\r\n                    .enter()\r\n                    .append(\"g\")\r\n                    .attr(\"class\", \"c9-chart-bar c9-custom-bar\")\r\n                    .attr(\"transform\", function (d, i) { return \"translate(\" + self.x(self.dataTarget[i].stack[0].name) + \",0)\"; });\r\n\r\n        var bars = bar.selectAll(\".c9-custom-rect\")\r\n            .data(function(d) { return d.stack; });\r\n\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"c9-custom-rect\")\r\n            .style(\"fill\", function(d) { return d.color; })\r\n            .attr(\"x\", function(d) {\r\n                // use for stack\r\n                if (!self.isGroup) return undefined;\r\n                // use for group\r\n                // group member positioning at the end of groups, so its x is the position of right edge of bar\r\n                if (groupNames.length > groupNamesOld.length && d.group == newLabel && groupNames.indexOf(newLabel) == groupNames.length - 1)\r\n                    return self.x.rangeBand();\r\n                return midGroup ? d.group == newLabel ? xGroupOld(midGroup) : xGroupOld(d.group) : xGroupOld(d.group);\r\n            })\r\n            .attr(\"y\", function(d) { return self.y(d.y1); })\r\n            .attr(\"width\", function(d) {\r\n                return !self.isGroup ? self.x.rangeBand() : d.group == newLabel ? 0 : xGroupOld.rangeBand();\r\n            })\r\n            .attr(\"height\", function(d) { return self.y(d.y0) - self.y(d.y1); });\r\n\r\n        bars.transition().duration(750)\r\n            .attr(\"x\", function(d) { return !self.isGroup ? undefined : xGroup(d.group); })\r\n            .attr(\"width\", function(d) { return !self.isGroup ? self.x.rangeBand() : xGroup.rangeBand(); })\r\n\r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * [Main draw function of Bar Chart]\r\n     * @return {[type]} [description]\r\n     */\r\n    draw() {\r\n        var self = this;\r\n        var axis    = new Axis(self.options, self.body, self.dataTarget, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom, null, null);\r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.dataTarget);\r\n        \r\n        legend.draw();\r\n        legend.updateInteractionForBarChart(self);\r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * Retrieve value from upper and lower bounds of each stack\r\n     * @param  {String} lower Lower bound of value\r\n     * @param  {String} upper Upper bound of value\r\n     * @return {String}       Value to return\r\n     */\r\n    retrieveValue(lower, upper) {\r\n        var d1 = Math.floor(lower) === lower ? 0 : lower.toString().split(\".\")[1].length;\r\n        var d2 = Math.floor(upper) === upper ? 0 : upper.toString().split(\".\")[1].length;\r\n        return d1 > d2 ? (upper - lower).toFixed(d1) : (upper - lower).toFixed(d2);\r\n    }\r\n    \r\n    /**\r\n     * Select all bars as type RECT in Bar Chart via its CLASS\r\n     */\r\n    selectAllBar() {\r\n        var self = this;\r\n\r\n        return self.body.selectAll('.c9-custom-rect');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllBar(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            // Define the div for the tooltip\r\n            // TODO: Allow user to add custom DIV, CLASS\r\n            // Make sure that: \r\n            // - Rect not overflow the bar, if not, hover effect will be messed\r\n            // -> So, just align the rect to right/left (x: 25) to avoid it\r\n            // -> And, the text will be align also\r\n            var div = self.body\r\n                        .append('g')   \r\n                        .style('display', 'none');\r\n                // Rect Container\r\n                div.append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .style('fill', '#FEE5E2')\r\n                    .style('stroke', '#FDCCC6')\r\n                    .style('stroke-width', 2);\r\n                // First line\r\n                var text_1 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 10)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n                // Second line\r\n                var text_2 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 20)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n\r\n            selector\r\n                .on(\"mouseover\", function(d) {\r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block')\r\n                        .attr(\"transform\", \"translate(\" + self.x(d.name) + \",\" + self.y(self.retrieveValue(d.y0, d.y1)) + \")\");\r\n\r\n                    text_1.text('Name: ' + d.name);\r\n                    text_2.text('Value: ' + self.retrieveValue(d.y0, d.y1));\r\n                })\r\n                .on(\"mouseout\", function(d) { \r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style('display', 'none');\r\n                });\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.BarChart.js\n **/","import Helper from '../helper/C9.Helper';\r\n\r\nexport default class Chart {\r\n    constructor(options) {\r\n        var self    = this;\r\n        var config  = {\r\n            // container\r\n            id: \"body\",\r\n            // size (width, height), margin, padding\r\n            width: 960,\r\n            height: 480,\r\n            margin: {\r\n                top: 20,\r\n                right: 20,\r\n                bottom: 70,\r\n                left: 40,\r\n            },\r\n            // interaction in chart\r\n            hover: {\r\n                enable: true,\r\n                options: {\r\n                    template: '',\r\n                    onMouseOver: {\r\n                        fadeIn: 200,\r\n                        // callback: function(data) {\r\n                        //     console.dir(data);\r\n                        // },\r\n                    },\r\n                    onMouseOut: {\r\n                        fadeOut: 500,\r\n                        // callback: function(data) {\r\n                        //     console.dir(data);\r\n                        // },\r\n                    }\r\n                }\r\n            },\r\n\r\n            // legend\r\n            legendShow: true,\r\n            legendPosition: \"bottom\",\r\n            legendInsetAnchor: \"top-left\",\r\n            legendPadding: 0,\r\n            // tooltip - show when mouseover on each data\r\n            tooltipShow: true,\r\n            tooltipPosition: undefined,\r\n\r\n            // table \r\n            table: {\r\n                container: \"body\",\r\n                show: true,\r\n                headings: [\"Name\", \"Value\"],\r\n                style: \"default\", // \"strip\", \"border\"\r\n                serial: true,\r\n                hover: {\r\n                    enable: true,\r\n                    callback: null\r\n                },\r\n                click: {\r\n                    enable: true,\r\n                    callback: null\r\n                }\r\n            },\r\n\r\n            // color range\r\n            colorRange: \"category20\",\r\n            // data\r\n            data: {\r\n                // ALL OPTIONS AVAILABLE IN DATA CONFIG\r\n                plain: [],\r\n                file: {\r\n                    type: null,\r\n                    url: null,\r\n                },\r\n                keys: {\r\n                    name: \"name\",\r\n                    value: \"value\",\r\n                    time: \"time\"\r\n                },\r\n                groups: [],\r\n                stacks: [],\r\n            }\r\n        };\r\n\r\n        self._id        = options.id        || config.id;\r\n        self._width     = options.width     || config.width;\r\n        self._height    = options.height    || config.height;\r\n        self._colorRange= options.colorRange|| config.colorRange;\r\n        self._hover     = options.hover     || config.hover;\r\n        \r\n        self._dataOption= Helper.merge(options.data, config.data);\r\n        self._dataTarget= null;\r\n        self._margin    = Helper.merge(options.margin, config.margin);\r\n\r\n        // Skeleton: \r\n        // SVG\r\n        // ---BODY (g)\r\n        // -------BlaBla\r\n        self._svg       = null;\r\n        self._body      = null;\r\n        self._options   = options;\r\n\r\n        self.initConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    \r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * If colorRange is Array of color then scale range according to it\r\n     * If colorRange is a String like \"category20\", \"category20b\", etc. then scale using d3.scale.category\r\n     */\r\n    get colorRange() {\r\n        if (typeof this._colorRange == 'string') {\r\n            return d3.scale[this._colorRange]();\r\n        } else if (typeof this._colorRange == 'object') {\r\n            return d3.scale.ordinal().range(this._colorRange);\r\n        }\r\n    }\r\n\r\n    get margin() {\r\n        return this._margin;\r\n    }\r\n\r\n    get dataOption() {\r\n        return this._dataOption;\r\n    }\r\n\r\n    get svg() {\r\n        return this._svg;\r\n    }\r\n\r\n    get body() {\r\n        return this._body;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    get hover() {\r\n        return this._hover;\r\n    }\r\n\r\n    get dataTarget() {\r\n        return this._dataTarget;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n    \r\n    \r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set container(newContainer) {\r\n        if (newContainer) {\r\n            this._container = newContainer;\r\n        }\r\n    }\r\n    \r\n    set id(newId) {\r\n        if (newId) {\r\n            this._id = newId;\r\n        }\r\n    }\r\n\r\n    set width(newWidth) {\r\n        if (newWidth) {\r\n            this._width = newWidth;\r\n        }\r\n    }\r\n\r\n    set height(newHeight) {\r\n        if (newHeight) {\r\n            this._height = newHeight;\r\n        }\r\n    }\r\n\r\n    set colorRange(newColorRange) {\r\n        if (newColorRange) {\r\n            this._colorRange = newColorRange;\r\n        }\r\n    }\r\n\r\n    set margin(newMargin) {\r\n        if (newMargin) {\r\n            this._margin = newMargin;\r\n        }\r\n    }\r\n\r\n    set dataOption(arg) {\r\n        if (arg) {\r\n            this._dataOption = arg;\r\n        }\r\n    }\r\n\r\n    set svg(newSvg) {\r\n        if (newSvg) {\r\n            this._svg = newSvg;\r\n        }\r\n    }\r\n\r\n    set body(newBody) {\r\n        if (newBody) {\r\n            this._body = newBody;\r\n        }\r\n    }\r\n\r\n    set options(newOptions) {\r\n        if (newOptions) {\r\n            this._options = newOptions;\r\n        }\r\n    }\r\n\r\n    set hover(newHover) {\r\n        if (newHover) {\r\n            this._hover = newHover;\r\n        }\r\n    }\r\n\r\n    set dataTarget(arg) {\r\n        if (arg) {\r\n            this._dataTarget = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Init & Update Parent Chart Config\r\n     */\r\n    initConfig() {\r\n        var margin  = this.margin,\r\n            id      = this.id,\r\n            width   = this.width - margin.left - margin.right,\r\n            height  = this.height - margin.top - margin.bottom;\r\n\r\n        this.container = d3.select(id);\r\n\r\n        this.svg = d3.select(id)\r\n            .append(\"svg\")\r\n            .style('overflow', 'visible') // to overwrite overflow: hidden by Boostrap as default\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom);\r\n\r\n        this.body = this.svg\r\n                    .append(\"g\")\r\n                    .attr('class', 'c9-chart c9-custom-container')\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n                  \r\n    }\r\n\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.Chart.js\n **/","var Helper = {\r\n    \r\n    each: function(loopable, callback, self, reverse) {\r\n        // Check to see if null or undefined firstly.\r\n        var i, len;\r\n        if (self.isArray(loopable)) {\r\n            len = loopable.length;\r\n            if (reverse) {\r\n                for (i = len - 1; i >= 0; i--) {\r\n                    callback.call(self, loopable[i], i);\r\n                }\r\n            } else {\r\n                for (i = 0; i < len; i++) {\r\n                    callback.call(self, loopable[i], i);\r\n                }\r\n            }\r\n        } else if (typeof loopable === 'object') {\r\n            var keys = Object.keys(loopable);\r\n            len = keys.length;\r\n            for (i = 0; i < len; i++) {\r\n                callback.call(self, loopable[keys[i]], keys[i]);\r\n            }\r\n        }\r\n    },\r\n\r\n    // setDefaultConfig: function() {\r\n    //     var self = this;\r\n\r\n    //     if (self.defaultConfig == null || self.defaultConfig === undefined) {\r\n    //         return;\r\n    //     } else {\r\n    //         self.lastConfig = self.merge(Chart._options, Chart);\r\n    //         self.each(self.lastConfig, function(value, index) {\r\n    //             // var prefixCfg = self.setPrefix(index);\r\n    //             self.setValue(self.lastConfig[index], index);\r\n    //         }, self);\r\n    //     }\r\n    // }\r\n\r\n    setValue: function(value, key) {\r\n        var self = this;\r\n        self[key] = value;\r\n    },\r\n\r\n    setPrefix: function(config) {\r\n        var constPrefix = '_';\r\n        if (config) {\r\n            return constPrefix + config;\r\n        }\r\n    },\r\n\r\n    isEmpty: function(value) {\r\n        return value === null || value === undefined || (Util.isArray(value) && value.length === 0);\r\n    },\r\n\r\n    isObject: function(object) {\r\n        return !Util.isEmpty(object) && typeof(object) === 'object';\r\n    },\r\n\r\n    isArray: function(array) {\r\n        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\r\n    },\r\n\r\n    isFunction: function(func) {\r\n        return !Util.isEmpty(func) && typeof(func) === 'function';\r\n    },\r\n\r\n    merge: function(obj1,obj2){\r\n        var obj3 = {};\r\n        for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }\r\n        for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }\r\n        return obj3;\r\n    },\r\n\r\n    get: function(_key, _data){\r\n        var _keys = _key.split(\".\");\r\n        var _current = _data;\r\n        var self = this;\r\n        \r\n        for(var i=0, len=_keys.length; i<len; i++){\r\n            var _fun = _keys[i].split(\"|\");\r\n            \r\n            if(_fun && _fun.length == 2){\r\n                _keys[i] = _fun[0];\r\n                _fun = _fun[1];\r\n            }\r\n            else{\r\n                _fun = null;\r\n            }\r\n            \r\n            if('undefined' == typeof(_current[_keys[i]])){\r\n                return '';\r\n            }\r\n            else{\r\n                _current = _current[_keys[i]];\r\n            }\r\n            \r\n            if(null !== _fun){\r\n                _current = self.filter[_fun].call(this, _current);\r\n            }\r\n        }\r\n        \r\n        return _current;\r\n    },\r\n\r\n    max: function(arr) {\r\n        return Math.max(...arr);\r\n    }, \r\n\r\n    sum: function(arr) {\r\n        return arr.reduce(function(a, b) { return a + b; }, 0);\r\n    },\r\n\r\n    guid: function() {\r\n        return 'c9-xxxxxx-4xxx-yxxx'.replace(/[xy]/g, function(c) {\r\n            let r = Math.random()*16|0, \r\n                v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    },\r\n\r\n};\r\n\r\nvar Util = {\r\n    isEmpty: function(value) {\r\n        return value === null || value === undefined;\r\n    },\r\n\r\n    isArray: function(array) {\r\n        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\r\n    },\r\n};\r\n\r\nmodule.exports = Helper;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/C9.Helper.js\n **/","'use strict';\r\n\r\nexport default class Axis {\r\n    constructor(options, body, data, width, height, xAxe, yAxe) {\r\n        var config = {\r\n            xAxisShow     : true,\r\n            xAxisPadding  : {},   // TODO\r\n            xAxisText     : 'Name',\r\n            yAxisShow     : true,\r\n            yAxisPadding  : {},   // TODO\r\n            yAxisText     : 'Value',\r\n            numOfTickY   : 5,\r\n            tickFormat     : \"s\",   // refer: https://github.com/d3/d3-format\r\n            isLogaric: false, // TODO: Add isPower, isNormal(default), isLogaric\r\n            y2AxisShow    : true,\r\n            y2AxisPadding : {},   // TODO\r\n            y2AxisText    : 'Value',\r\n            gridXShow: false,\r\n            gridYShow: false\r\n        };\r\n\r\n        this._xAxisShow     = options.xAxisShow      || config.xAxisShow;\r\n        this._xAxisPadding  = options.xAxisPadding   || config.xAxisPadding;\r\n        this._xAxisText     = options.xAxisText      || config.xAxisText;\r\n        this._yAxisShow     = options.yAxisShow      || (body.type == \"timeline\" ? false : config.yAxisShow);\r\n        this._yAxisPadding  = options.yAxisPadding   || config.yAxisPadding;\r\n        this._yAxisText     = options.yAxisText      || config.yAxisText;\r\n        this._isLogaricVariant     = options.isLogaric      || config.isLogaric;\r\n        this._tickFormat    = options.tickFormat      || config.tickFormat;\r\n        this._numOfTickY    = options.numOfTickY    || config.numOfTickY;\r\n        this._y2AxisShow    = options.y2AxisShow     || config.y2AxisShow;\r\n        this._y2AxisPadding = options.y2AxisPadding  || config.y2AxisPadding;\r\n        this._y2AxisText    = options.y2AxisText     || config.y2AxisText;\r\n        this._gridXShow     = options.gridXShow      || config.gridXShow;\r\n        this._gridYShow     = options.gridYShow      || config.gridYShow;\r\n\r\n\r\n        var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\r\n        var y;\r\n\r\n        if (this._isLogaricVariant) {\r\n            y = d3.scale.log().range([height, 0]);\r\n        } else {\r\n            y = d3.scale.linear().range([height, 0]);\r\n        }\r\n        \r\n        x.domain(data.map(function(d) {\r\n            return d.name || d.stack[0].name;\r\n        }));\r\n\r\n        if (body.type == \"bar\") {\r\n            y.domain([\r\n                d3.min(data, function(d) {\r\n                    return d.max;\r\n                }), \r\n                d3.max(data, function(d) {\r\n                    return d.max;\r\n                })\r\n            ]);\r\n        }\r\n        else\r\n            y.domain([\r\n                d3.min(data, function(d) {\r\n                    return d.value;\r\n                }), \r\n                d3.max(data, function(d) {\r\n                    return d.value;\r\n                })\r\n            ]);\r\n\r\n        if (body.type == \"timeline\") {\r\n\r\n            var xScale = d3.time.scale()\r\n                .domain([options.starting, options.ending])\r\n                .range([0, width]);\r\n            this._xAxis = d3.svg.axis()\r\n                .scale(xScale)\r\n                .orient(\"bottom\")\r\n                .tickFormat(options.tickFormat === undefined ? d3.time.format(\"%I %p\") : options.tickFormat.format)\r\n                .tickSize(options.tickFormat === undefined ? 6 : options.tickFormat.tickSize)\r\n                .ticks(options.tickFormat === undefined ? d3.time.hours : options.tickFormat.tickTime, options.tickFormat === undefined ? 1 : options.tickFormat.tickInterval);\r\n            delete options.starting;\r\n            delete options.ending;\r\n\r\n        } else if (body.type == \"line\") {\r\n\r\n            this._xAxis = xAxe;\r\n            this._yAxis = yAxe;\r\n\r\n        } else {\r\n            // Currently, support logaric axis only for y-axis on bar-chart\r\n            // TODO: add for line-chart too\r\n            var _tickFormat = d3.format(this._tickFormat);\r\n            var _numOfTickY = this._numOfTickY;\r\n\r\n            this._xAxis = d3.svg.axis()\r\n                .scale(x)\r\n                .orient(\"bottom\")\r\n                .ticks(10);\r\n\r\n            // In LOG scale, can't specify default number of ticks\r\n            // must be filter with tickFormat instead\r\n            // refer: https://github.com/d3/d3/wiki/Quantitative-Scales#log_ticks\r\n            if (this._isLogaricVariant) {\r\n                this._yAxis = d3.svg.axis()\r\n                    .scale(y)\r\n                    .orient(\"left\")\r\n                    .ticks(_numOfTickY, _tickFormat)\r\n                    .tickSize(10, 0);\r\n            } else {\r\n                this._yAxis = d3.svg.axis()\r\n                    .scale(y)\r\n                    .orient(\"left\")\r\n                    .ticks(_numOfTickY)\r\n                    .tickSize(10, 0)\r\n                    .tickFormat(_tickFormat);\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        // Grid\r\n        if (this._gridXShow) {\r\n            // Select CURRENT svg container, to make this axis outside\r\n            // as a SEPARATED component, just like AXIS, of CHART\r\n            // d3.select(this._svg[0][0].parentNode)\r\n            this._xAxis.innerTickSize(-height)\r\n                .outerTickSize(0);\r\n        }\r\n\r\n        if (this._gridYShow) {\r\n            // Select CURRENT svg container, to make this axis outside\r\n            // as a SEPARATED component, just like AXIS, of CHART\r\n            // d3.select(this._svg[0][0].parentNode)\r\n            this._yAxis.innerTickSize(-width)\r\n                .outerTickSize(0);\r\n        }\r\n\r\n        this._body    = body;\r\n        this._data   = data;\r\n        this._width  = width;   // TODO : ADD Getter/setter\r\n        this._height  = height;\r\n\r\n        if (this._xAxisShow) {\r\n            this._body.append(\"g\")\r\n                .attr(\"class\", \"x axis\")\r\n                .attr(\"transform\", \"translate(0,\" + (height) + \")\")\r\n                .call(this._xAxis)\r\n                .append(\"text\")\r\n                .attr(\"dx\", \"-.8em\")\r\n                .attr(\"dy\", \"-.55em\")\r\n                .attr(\"x\", width)\r\n                .attr(\"y\", \"20\")\r\n                .style(\"text-anchor\", \"start\")\r\n                .text(this._xAxisText);\r\n                // .attr(\"transform\", \"rotate(-90)\" );\r\n        }\r\n\r\n        if (this._yAxisShow) {\r\n            this._body.append(\"g\")\r\n                .attr(\"class\", \"y axis\")\r\n                .call(this._yAxis)\r\n                .append(\"text\")\r\n                // .attr(\"transform\", \"rotate(-90)\")\r\n                .attr(\"y\", -10)\r\n                .attr(\"dy\", \".10\")\r\n                .style(\"text-anchor\", \"end\")\r\n                .text(this._yAxisText);\r\n        }\r\n\r\n\r\n        /**\r\n            TODO:\r\n            - Add y2-axis\r\n        **/\r\n            \r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    \r\n    get xAxis() {\r\n        return this._xAxis;\r\n    }\r\n\r\n    get yAxis() {\r\n        return this._yAxis;\r\n    }\r\n\r\n    get xAxisShow() {\r\n        return this._xAxisShow;\r\n    }\r\n\r\n    get xAxisPadding() {\r\n        return this._xAxisPadding;\r\n    }\r\n\r\n    get yAxisShow() {\r\n        return this._yAxisShow;\r\n    }\r\n\r\n    get yAxisPadding() {\r\n        return this._yAxisPadding;\r\n    }\r\n\r\n    get isLogaricVariant() {\r\n        return this._isLogaricVariant;\r\n    }\r\n\r\n    get y2AxisShow() {\r\n        return this._y2AxisShow;\r\n    }\r\n\r\n    get y2AxisPadding() {\r\n        return this._y2AxisPadding;\r\n    }\r\n    \r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    \r\n    set xAxis(newXAxis) {\r\n        if (newXAxis) {\r\n            this._xAxis = newXAxis;\r\n        }\r\n    }\r\n\r\n    set yAxis(newYAxis) {\r\n        if (newYAxis) {\r\n            this._yAxis = newYAxis;\r\n        }\r\n    }\r\n\r\n    set xAxisShow(newXAxisShow) {\r\n        if (newXAxisShow) {\r\n            this._xAxisShow = newXAxisShow;\r\n        }\r\n    }\r\n\r\n    set xAxisPadding(newXAxisPadding) {\r\n        if (newXAxisPadding) {\r\n            this._xAxisPadding = newXAxisPadding;\r\n        }\r\n    }\r\n\r\n    set yAxisShow(newYAxisShow) {\r\n        if (newYAxisShow) {\r\n            this._yAxisShow = newYAxisShow;\r\n        }\r\n    }\r\n\r\n    set yAxisPadding(newYAxisPadding) {\r\n        if (newYAxisPadding) {\r\n            this._yAxisPadding = newYAxisPadding;\r\n        }\r\n    }\r\n\r\n    set isLogaricVariant(newIsLogaricVariant) {\r\n        if (newIsLogaricVariant) {\r\n            this._isLogaricVariant = newIsLogaricVariant;\r\n        }\r\n    }\r\n\r\n    set y2AxisShow(newY2AxisShow) {\r\n        if (newY2AxisShow) {\r\n            this._y2AxisShow = newY2AxisShow;\r\n        }\r\n    }\r\n\r\n    set y2AxisPadding(newY2AxisPadding) {\r\n        if (newY2AxisPadding) {\r\n            this._y2AxisPadding = newY2AxisPadding;\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Axis.js\n **/","'use strict';\r\n\r\nexport default class Title {\r\n    constructor(options, body, width, height, margin) {\r\n        var config = {\r\n            titleShow      : true,\r\n            titleText      : \"Sample Chart\",\r\n            titlePosition  : 'top',\r\n            titleSize      : \"14px\"\r\n        };\r\n\r\n        this._titleShow     = options.titleShow       || config.titleShow;\r\n        this._titleText     = options.titleText       || config.titleText;\r\n        this._titlePosition = options.titlePosition   || config.titlePosition;\r\n        this._titleSize     = options.titleSize       || config.titleSize;\r\n\r\n        this._body    = body;\r\n\r\n        if (this._titleShow) {\r\n            var self = this;\r\n            // Select CURRENT body container, to make this axis outside\r\n            // as a SEPARATED component, just like AXIS, of CHART\r\n            var text = d3.select(self._body[0][0].parentNode)\r\n                .append(\"g\")\r\n                    .attr('class', 'c9-custom-title c9-custom-title-container')\r\n                    .append(\"text\")\r\n                        .attr(\"class\", \"c9-custom-title c9-custom-title-text\");\r\n\r\n                // Get title width: text.node().getComputedTextLength()           \r\n                text.attr(\"x\", (((width - text.node().getComputedTextLength()) / 2)))           \r\n                    .attr(\"y\", this.setYLocation(height, margin))\r\n                    .attr(\"text-anchor\", \"middle\")  \r\n                    .style(\"font-size\", this._titleSize)  \r\n                    .text(this._titleText);\r\n        }\r\n            \r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    \r\n    get titleShow() {\r\n        return this._titleShow;\r\n    }\r\n\r\n    get titleText() {\r\n        return this._titleText ;\r\n    }\r\n\r\n    get titlePosition() {\r\n        return this._titlePosition;\r\n    }\r\n\r\n    get titleSize() {\r\n        return this._titleSize;\r\n    }\r\n    \r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    \r\n    set titleShow(newTitleShow) {\r\n        if (newTitleShow) {\r\n            this._titleShow = newTitleShow;\r\n        }\r\n    }\r\n\r\n    set titleText(newTitleText) {\r\n        if (newTitleText) {\r\n            this._titleText = newTitleText;\r\n        }\r\n    }\r\n\r\n    set titlePosition(newTitlePosition) {\r\n        if (newTitlePosition) {\r\n            this._titlePosition = newTitlePosition;\r\n        }\r\n    }\r\n\r\n    set titleSize(newTitleSize) {\r\n        if (newTitleSize) {\r\n            this._titleSize = newtitleSize;\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    setYLocation(height, margin) {\r\n        if (this.titlePosition === 'top') {\r\n            return (margin.top / 2);\r\n        } else if (this.titlePosition === 'bottom') {\r\n            return (height - margin.bottom / 2);\r\n        }\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Title.js\n **/","'use strict';\r\n\r\nexport default class Legend {\r\n    constructor(options, body, data) {\r\n        var config = {\r\n            legendShow      : false,\r\n            legendPosition  : [0, 0],\r\n            legendBox       : false,\r\n            legendSize      : 18,\r\n            legendTextSize : \"14px\",\r\n            legendMargin   : [50, 5, 5, 5],\r\n            legendSpace     : 150,\r\n            // legendStyle     : \"rect\" // TODO: Allow user to choose type of legend (circle, rect, etc.)\r\n        };\r\n\r\n        var self = this;\r\n\r\n        self._legendShow         = options.legendShow       || config.legendShow;\r\n        self._legendTextSize     = options.legendTextSize   || config.legendTextSize;\r\n        self._legendPosition     = options.legendPosition   || config.legendPosition;\r\n        self._legendSize         = options.legendSize       || config.legendSize;\r\n        self._legendBox          = options.legendBox        || config.legendBox;\r\n        self._legendMargin       = options.legendMargin     || config.legendMargin;\r\n        self._legendSpace        = options.legendSpace      || config.legendSpace;\r\n        // self._legendStyle        = options.legendStyle      || config.legendStyle;\r\n\r\n        self._options   = options;\r\n        self._body      = body;\r\n        // self._color     = color;\r\n        self._data      = data;\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get body() {\r\n        return this._body;\r\n    }\r\n\r\n    get color() {\r\n        return this._color;\r\n    }\r\n    \r\n    get legendShow() {\r\n        return this._legendShow;\r\n    }\r\n\r\n    get legendText() {\r\n        return this._legendText ;\r\n    }\r\n\r\n    get legendPosition() {\r\n        return this._legendPosition;\r\n    }\r\n\r\n    get legendSize() {\r\n        return this._legendSize;\r\n    }\r\n\r\n    get legendMargin() {\r\n        return this._legendMargin;\r\n    }\r\n\r\n    get legendSpace() {\r\n        return this._legendSpace;\r\n    }\r\n\r\n    get legendItem() {\r\n        return this._legendItem;\r\n    }\r\n\r\n    get legendDomain() {\r\n        return this._legendDomain;\r\n    }\r\n\r\n    get legendItemEventFactory() {\r\n        return this._legendItemEventFactory;\r\n    }\r\n    \r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set data(arg) {\r\n        if (arg) {\r\n            this._data = arg;\r\n        }\r\n    }\r\n\r\n    set legendShow(newlegendShow) {\r\n        if (newlegendShow) {\r\n            this._legendShow = newlegendShow;\r\n        }\r\n    }\r\n\r\n    set legendText(newlegendText) {\r\n        if (newlegendText) {\r\n            this._legendText = newlegendText;\r\n        }\r\n    }\r\n\r\n    set legendPosition(newlegendPosition) {\r\n        if (newlegendPosition) {\r\n            this._legendPosition = newlegendPosition;\r\n        }\r\n    }\r\n\r\n    set legendSize(newlegendSize) {\r\n        if (newlegendSize) {\r\n            this._legendSize = newlegendSize;\r\n        }\r\n    }\r\n\r\n    set legendMargin(arg) {\r\n        if (arg) {\r\n            this._legendMargin = arg;\r\n        }\r\n    }\r\n\r\n    set legendSpace(arg) {\r\n        if (arg) {\r\n            this._legendSpace = arg;\r\n        }\r\n    }\r\n\r\n    set legendItem(newLegendItem) {\r\n        if (newLegendItem) {\r\n            this._legendItem = newLegendItem;\r\n        }\r\n    }\r\n\r\n    set legendDomain(newLegendDomain) {\r\n        if (newLegendDomain) {\r\n            this._legendDomain = newLegendDomain;\r\n        }\r\n    }\r\n\r\n    set legendItemEventFactory(newLegendItemEventFactory) {\r\n        if (newLegendItemEventFactory) {\r\n            this._legendItemEventFactory = newLegendItemEventFactory;\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    draw () {\r\n        var self = this;\r\n\r\n        // var color = self.color;\r\n\r\n        if (self._legendShow) {\r\n            // TODO: Remove these conditional checks by getData for general purposes\r\n            var legendDomain = [];\r\n\r\n            // var setEnableData = function(_data, _flag) {\r\n            //     return {\r\n            //         'data': _data,\r\n            //         'enable': _flag\r\n            //     };\r\n            // };\r\n\r\n            // if (self._body.type == \"line\") {\r\n\r\n            //     var dataGroup = d3.nest()\r\n            //         .key(function(d) { return d.Client; })\r\n            //         .entries(self._data);\r\n\r\n            //     dataGroup.forEach(function(d, i) {\r\n            //         legendDomain.push(d.key);\r\n            //     });\r\n\r\n            // } else if (self._body.type == \"bar\") {\r\n\r\n            //     legendDomain = self._data;\r\n\r\n\r\n\r\n            // } else if (self._body.type == \"pie\" || self._body.type == \"donut\" || self._body.type == \"timeline\") {\r\n\r\n            //     self._data.forEach(function(d) {\r\n            //         d.name ? legendDomain.push(d.name) : legendDomain.push(\"\");\r\n            //     });\r\n\r\n            // }\r\n\r\n\r\n\r\n            // Store for backup, and add enable flag to each data\r\n            // self.legendDomain = [];\r\n            // self._data.forEach(function(d) {\r\n            //     if (d) {\r\n            //         self.legendDomain.push(setEnableData(d, true));\r\n            //     }\r\n            // });\r\n\r\n            // var i;\r\n            // for (i = 0; i < legendDomain.length; i++) {\r\n            //     if (legendDomain[i] != \"\")\r\n            //         break;\r\n            // };\r\n\r\n            // if (i == legendDomain.length)\r\n            //     legendDomain = [];\r\n\r\n            // Calculate domain for color to draw\r\n            // color.domain(legendDomain);\r\n\r\n            if (self._body.type == \"bar\") {\r\n                self.data = self.data[self.data.reduce((p, c, i, a) => a[p].stack.length > c.stack.length ? p : i, 0)].stack;\r\n            }\r\n            else if (self._body.type == \"line\") {\r\n                self.data = d3.nest()\r\n                    .key(function(d) { return d.name; })\r\n                    .entries(self.data);\r\n                self.data.forEach(function(d) {\r\n                    d.color = d.values[0].color;\r\n                })\r\n            }\r\n\r\n            // Legend will be appended in main SVG container\r\n            var legendContainer = d3.select(self._body[0][0].parentNode)\r\n                .append(\"g\")\r\n                .attr(\"class\", \"c9-custom-legend c9-custom-legend-container\")\r\n                .attr(\"transform\", \"translate(\" + self._legendPosition[0] + \",\" + self._legendPosition[1] + \")\");\r\n            \r\n            // var legendBox = legendContainer.selectAll(\".c9-custom-legend.c9-custom-legend-box\").data([true]).enter();\r\n\r\n            self.legendItem = legendContainer.selectAll(\"g.c9-custom-legend.c9-custom-legend-item\")\r\n                // .data(color.domain())\r\n                .data(self.data)\r\n                .enter().append(\"g\")\r\n                .attr(\"class\", \"c9-custom-legend c9-custom-legend-item\")\r\n                .attr('data-ref', function(d) { return d['data-ref']; })\r\n                .attr(\"transform\", function(d, i) {\r\n                    return \"translate(\" + (i * (self.legendSize + self.legendSpace) + self.legendMargin[0]) + \",\" + self.legendMargin[3] + \")\"\r\n                });\r\n\r\n            self.legendItem.append('rect')\r\n                .attr('class', 'c9-custom-legend c9-custom-legend-rect')\r\n                .attr('width', self.legendSize * 2)\r\n                .attr('height', self.legendSize)\r\n                .attr('r', self.legendSize)\r\n                .attr('fill', function(d){ return d.color; })\r\n                .attr('stroke', function(d){ return d.color; });\r\n\r\n            self.legendItem.append('text')\r\n                .attr('class', 'c9-custom-legend c9-custom-legend-text')\r\n                .attr('x', self._legendSize * 2 + 20)\r\n                .attr('y', 15)\r\n                // .attr('text-anchor', 'middle')\r\n                .text(function(d) { return self._body.type == \"bar\" ? d.group : d.name || d.key; });\r\n\r\n\r\n            // if (self._legendBox && legendDomain.length > 0) {\r\n            //     var box = legendContainer[0][0].getBBox();\r\n            //     legendBox.attr(\"class\", \".c9-custom-legend.c9-custom-legend-box\")\r\n            //         .attr(\"x\", 0)\r\n            //         .attr(\"y\", 0)\r\n            //         .attr(\"width\", box.width + self._legendMargin[1] + self._legendMargin[3])\r\n            //         .attr(\"height\", box.height + self._legendMargin[2] + self._legendMargin[0])\r\n            //         .style(\"fill\", \"none\")\r\n            //         .style(\"stroke\", color);\r\n            // }\r\n        \r\n        }\r\n    \r\n    }\r\n\r\n    /**\r\n     * Update interaction event dispatchers for legend\r\n     * For: Donut Chart, Pie Chart\r\n     */\r\n    updateInteractionForDonutPieChart(chart, path, pie, currentData, arc) {\r\n\r\n        var self = this;\r\n\r\n        var chartType = chart.chartType;\r\n\r\n        var chartInnerBefore    = chartType == 'pie' ?  0 : chart.innerRadius,\r\n            chartOuterBefore    = chartType == 'pie' ?  chart.radius : chart.outerRadius,\r\n            chartInnerAfter     = chartType == 'pie' ?  0 : chart.innerRadius,\r\n            chartOuterAfter     = chartType == 'pie' ?  chart.radius * 1.2 : chart.outerRadius * 1.2;\r\n\r\n        self.legendItemEventFactory = {\r\n\r\n            'click': function(item) {\r\n\r\n                var selector = d3.select(this);\r\n                var enable = true,\r\n                    dataSet = self.data;\r\n                var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                    return (d.enable) ? 1 : 0;\r\n                }));\r\n\r\n                // Add pointer to cursor\r\n                selector.style('cursor', 'pointer');\r\n\r\n                // If current selector is disabled, then turn it on back\r\n                // Else, set enable to false\r\n                if (selector.style('opacity') == '0.1') {\r\n                    selector.style('opacity', '1.0');\r\n                } else {\r\n                    if (totalEnable < 2) return;\r\n                    selector.style('opacity', '0.1');\r\n                    enable = false;\r\n                }\r\n\r\n                chart.pie.value(function(d) {\r\n                    if (d.name == item.name) d.enable = enable;\r\n                    return (d.enable) ? d.value : 0;\r\n                });\r\n\r\n                path = path.data(chart.pie(dataSet));\r\n\r\n                path.transition()\r\n                    .duration(500)\r\n                    .attrTween('d', function(d) {\r\n                        var interpolate = d3.interpolate(chart.currentData, d);\r\n                        // Returns an interpolator between the two arbitrary values a and b. \r\n                        // The interpolator implementation is based on the type of the end value b.\r\n                        chart.currentData = interpolate(0);\r\n                        return function(t) {\r\n                            return arc(interpolate(t));\r\n                        };\r\n                    })\r\n                    // Remove stroke when re-draw arcs to avoid duplicate strokes\r\n                    .attr('stroke', 'none');;\r\n                \r\n            },\r\n\r\n            'mouseover': function(item) {\r\n                var legendSelector = d3.select(this);\r\n                // Add pointer to cursor\r\n                legendSelector.style('cursor', 'pointer');\r\n\r\n                var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\r\n\r\n                selector\r\n                    .transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerAfter)\r\n                            .outerRadius(chartOuterAfter)\r\n                        )\r\n                        .attr('fill-opacity', '1.0');\r\n                // var enable = true,\r\n                //     dataSet = self.legendDomain,\r\n                //     isCurrentEnable = true;\r\n\r\n                // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n                //     return (d.enable) ? 1 : 0;\r\n                // }));\r\n\r\n                // // Add pointer to cursor\r\n                // selector.style('cursor', 'pointer');\r\n\r\n                // // If current selector is disabled, then remains it\r\n                // // Else, turn enabled to disabled\r\n                // if (!isCurrentEnable) {\r\n                //     return false;\r\n                // } else {\r\n                //     if (totalEnable < 2) return;\r\n                //     selector.style('opacity', '0.5');\r\n                //     enable = false;\r\n                // }\r\n\r\n                // chart.pie.value(function(d) {\r\n                //     if (d.data.name == item) d.tempEnable = enable;\r\n                //     else d.tempEnable = d.enable;\r\n\r\n                //     return (d.tempEnable) ? d.data.value : 0;\r\n                // });\r\n\r\n                // path = path.data(chart.pie(dataSet));\r\n\r\n                // path.transition()\r\n                //     .duration(200)\r\n                //     .attrTween('d', function(d) {\r\n                //         var interpolate = d3.interpolate(chart.currentData, d);\r\n                //         // Returns an interpolator between the two arbitrary values a and b. \r\n                //         // The interpolator implementation is based on the type of the end value b.\r\n                //         chart.currentData = interpolate(0);\r\n                //         return function(t) {\r\n                //             return arc(interpolate(t));\r\n                //         };\r\n                //     });\r\n\r\n            },\r\n\r\n            'mouseout': function(item) {\r\n\r\n                var legendSelector = d3.select(this);\r\n                // Add pointer to cursor\r\n                legendSelector.style('cursor', 'pointer');\r\n\r\n                var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\r\n\r\n                selector\r\n                    .transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        )\r\n                        .attr('fill-opacity', '0.5');\r\n                // var dataSet = self.legendDomain,\r\n                //     isCurrentEnable = true;\r\n\r\n                // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n                //     return (d.enable) ? 1 : 0;\r\n                // }));\r\n\r\n                // // Add pointer to cursor\r\n                // selector.style('cursor', 'pointer');\r\n\r\n                // chart.pie.value(function(d) {\r\n                //     if (d.data.name == item && !d.enable) d.enable = enable;\r\n                //     return (d.enable) ? d.data.value : 0;\r\n                // });\r\n\r\n                // if (!isCurrentEnable) {\r\n                //     return;\r\n                // } else {\r\n                //     if (totalEnable < 2 || selector.style('opacity') == '1') return;\r\n                //     selector.style('opacity', '1.0');\r\n                // }\r\n\r\n                // path = path.data(chart.pie(dataSet));\r\n\r\n                // path.transition()\r\n                //     .duration(200)\r\n                //     .attrTween('d', function(d) {\r\n                //         var interpolate = d3.interpolate(chart.currentData, d);\r\n                //         // Returns an interpolator between the two arbitrary values a and b. \r\n                //         // The interpolator implementation is based on the type of the end value b.\r\n                //         chart.currentData = interpolate(0);\r\n                //         return function(t) {\r\n                //             return arc(interpolate(t));\r\n                //         };\r\n                //     });\r\n\r\n            }\r\n        \r\n        };\r\n\r\n        if (self.legendShow) {\r\n            \r\n            self.legendItem.on(self.legendItemEventFactory);\r\n\r\n        }\r\n    \r\n    }\r\n\r\n    /**\r\n     * Update interaction for barchart\r\n     * @param  {[type]} chart       [description]\r\n     * @param  {[type]} path        [description]\r\n     * @param  {[type]} pie         [description]\r\n     * @param  {[type]} currentData [description]\r\n     * @param  {[type]} arc         [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    updateInteractionForBarChart(chart) {\r\n\r\n        var self = this;\r\n\r\n        self.legendItemEventFactory = {\r\n\r\n            'click': function(item) {\r\n                var selector = d3.select(this);\r\n                var enable = true,\r\n                    dataBackup = chart.dataTarget,\r\n                    dataSet = self.data;\r\n                var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                    return (d.enable) ? 1 : 0;\r\n                }));\r\n\r\n                var enableSet = [];\r\n                var enableSetOld = [];\r\n                var data = [];\r\n                // Add pointer to cursor\r\n                selector.style('cursor', 'pointer');\r\n\r\n                // If current selector is disabled, then turn it on back\r\n                // Else, set enable to false\r\n                if (selector.style('opacity') == '0.1') {\r\n                    selector.style('opacity', '1.0');\r\n                } else {\r\n                    if (totalEnable < 2) return;\r\n                    selector.style('opacity', '0.1');\r\n                    enable = false;\r\n                }\r\n\r\n                //set current data for legend\r\n                self.data.forEach(function(d, i) {\r\n                    if (d.enable)\r\n                        enableSetOld.push(d.group);\r\n                    if (d.group == item.group)\r\n                        d.enable = enable;\r\n                    if (d.enable)\r\n                        enableSet.push(d.group);\r\n                });\r\n\r\n                //TODO - handle total - use for axis\r\n                dataBackup.forEach(function(d, i) {\r\n                    var element = {stack: [], max: d.max};\r\n                    d.stack.forEach(function(s, j) {\r\n                        enableSet.forEach(function(e) {\r\n                            if (e == s.group) {\r\n                                element.stack.push(s);\r\n                            }\r\n                        })\r\n                    })\r\n                    data.push(element);\r\n                });\r\n\r\n                chart.updateLegendInteraction(data, enableSet, enableSetOld, item.group);\r\n                \r\n            },\r\n\r\n            // 'mouseover': function(item) {\r\n            //     var legendSelector = d3.select(this);\r\n            //     // Add pointer to cursor\r\n            //     legendSelector.style('cursor', 'pointer');\r\n\r\n            //     var selector = d3.select('.c9-custom-path.' + item);\r\n\r\n            //     selector\r\n            //         .transition()\r\n            //             .duration(500)\r\n            //             .ease('bounce')\r\n            //             .attr('d', d3.svg.arc()\r\n            //                 .innerRadius(chartInnerAfter)\r\n            //                 .outerRadius(chartOuterAfter)\r\n            //             )\r\n            //             .style('stroke', '#FFFFF3')\r\n            //             .style('fill-opacity', '1.0');\r\n            //     // var enable = true,\r\n            //     //     dataSet = self.legendDomain,\r\n            //     //     isCurrentEnable = true;\r\n\r\n            //     // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n            //     //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n            //     //     return (d.enable) ? 1 : 0;\r\n            //     // }));\r\n\r\n            //     // // Add pointer to cursor\r\n            //     // selector.style('cursor', 'pointer');\r\n\r\n            //     // // If current selector is disabled, then remains it\r\n            //     // // Else, turn enabled to disabled\r\n            //     // if (!isCurrentEnable) {\r\n            //     //     return false;\r\n            //     // } else {\r\n            //     //     if (totalEnable < 2) return;\r\n            //     //     selector.style('opacity', '0.5');\r\n            //     //     enable = false;\r\n            //     // }\r\n\r\n            //     // chart.pie.value(function(d) {\r\n            //     //     if (d.data.name == item) d.tempEnable = enable;\r\n            //     //     else d.tempEnable = d.enable;\r\n\r\n            //     //     return (d.tempEnable) ? d.data.value : 0;\r\n            //     // });\r\n\r\n            //     // path = path.data(chart.pie(dataSet));\r\n\r\n            //     // path.transition()\r\n            //     //     .duration(200)\r\n            //     //     .attrTween('d', function(d) {\r\n            //     //         var interpolate = d3.interpolate(chart.currentData, d);\r\n            //     //         // Returns an interpolator between the two arbitrary values a and b. \r\n            //     //         // The interpolator implementation is based on the type of the end value b.\r\n            //     //         chart.currentData = interpolate(0);\r\n            //     //         return function(t) {\r\n            //     //             return arc(interpolate(t));\r\n            //     //         };\r\n            //     //     });\r\n\r\n            // },\r\n\r\n            // 'mouseout': function(item) {\r\n\r\n            //     var legendSelector = d3.select(this);\r\n            //     // Add pointer to cursor\r\n            //     legendSelector.style('cursor', 'pointer');\r\n\r\n            //     var selector = d3.select('.c9-custom-path.' + item);\r\n\r\n            //     selector\r\n            //         .transition()\r\n            //             .duration(500)\r\n            //             .ease('bounce')\r\n            //             .attr('d', d3.svg.arc()\r\n            //                 .innerRadius(chartInnerBefore)\r\n            //                 .outerRadius(chartOuterBefore)\r\n            //             )\r\n            //             .style('stroke', '#ffffff')\r\n            //             .style('fill-opacity', '0.5');\r\n            //     // var dataSet = self.legendDomain,\r\n            //     //     isCurrentEnable = true;\r\n\r\n            //     // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n            //     //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n            //     //     return (d.enable) ? 1 : 0;\r\n            //     // }));\r\n\r\n            //     // // Add pointer to cursor\r\n            //     // selector.style('cursor', 'pointer');\r\n\r\n            //     // chart.pie.value(function(d) {\r\n            //     //     if (d.data.name == item && !d.enable) d.enable = enable;\r\n            //     //     return (d.enable) ? d.data.value : 0;\r\n            //     // });\r\n\r\n            //     // if (!isCurrentEnable) {\r\n            //     //     return;\r\n            //     // } else {\r\n            //     //     if (totalEnable < 2 || selector.style('opacity') == '1') return;\r\n            //     //     selector.style('opacity', '1.0');\r\n            //     // }\r\n\r\n            //     // path = path.data(chart.pie(dataSet));\r\n\r\n            //     // path.transition()\r\n            //     //     .duration(200)\r\n            //     //     .attrTween('d', function(d) {\r\n            //     //         var interpolate = d3.interpolate(chart.currentData, d);\r\n            //     //         // Returns an interpolator between the two arbitrary values a and b. \r\n            //     //         // The interpolator implementation is based on the type of the end value b.\r\n            //     //         chart.currentData = interpolate(0);\r\n            //     //         return function(t) {\r\n            //     //             return arc(interpolate(t));\r\n            //     //         };\r\n            //     //     });\r\n\r\n            // }\r\n        \r\n        };\r\n\r\n        if (self.legendShow) {\r\n            \r\n            self.legendItem.on(self.legendItemEventFactory);\r\n\r\n        }\r\n    \r\n    }\r\n\r\n    setYLocation (height, margin) {\r\n        if (this.legendPosition === 'top') {\r\n            return (margin.top / 2);\r\n        } else if (this.legendPosition === 'bottom') {\r\n            return (height - margin.bottom / 2);\r\n        }\r\n    \r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Legend.js\n **/","'use strict';\r\n\r\nexport default class Tooltip {\r\n    constructor(options, body, data) {\r\n        var config = {\r\n            show: true,\r\n            position: top,\r\n            offset: [-10, 0],\r\n            class: 'd3-tip',\r\n        };\r\n\r\n        this._show      = options.show || config.show;\r\n        this._position  = options.position || config.position;\r\n        this._offset    = options.offset || config.offset;\r\n        this._class     = options.class || config.class;\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get show() {\r\n        return this._show;\r\n    }\r\n\r\n\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set show(newShow) {\r\n        if (newShow) {\r\n            this._show = newShow;\r\n        }\r\n    }\r\n\r\n\r\n    /*=====  End of Setter  ======*/\r\n\r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Tooltip.js\n **/","import Helper from './C9.Helper';\r\n\r\nexport default class DataAdapter {\r\n\r\n    constructor(options) {\r\n\r\n        var self = this;\r\n\r\n        var config = {\r\n            // ALL OPTIONS AVAILABLE IN DATA CONFIG\r\n            keys: {\r\n                name: \"name\",\r\n                value: \"value\",\r\n                time: \"time\"\r\n            },\r\n            groups: [],\r\n            stacks: [],\r\n\r\n            // NO NEED TO ADD TO DATA OPTIONS\r\n            // Just use to define default parameters\r\n            colorRange: null,\r\n        };\r\n\r\n        self._keys      = Helper.merge(options.keys, config.keys);\r\n        self._groups    = options.groups    || config.groups;\r\n        self._stacks    = options.stacks    || config.stacks;\r\n        self._colorRange= options.colorRange|| config.colorRange;\r\n\r\n        self._dataSource = null;\r\n        self._dataTarget = []; // Initialize new Array to use Array methods\r\n        self.initDataSource(options);\r\n\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get keys() {\r\n        return this._keys;\r\n    }\r\n\r\n    get dataSource() {\r\n        return this._dataSource;\r\n    }\r\n\r\n    get dataTarget() {\r\n        return this._dataTarget;\r\n    }\r\n\r\n    get groups() {\r\n        return this._groups;\r\n    }\r\n\r\n    get stacks() {\r\n        return this._stacks;\r\n    }\r\n\r\n    get colorRange() {\r\n        return this._colorRange;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set keys(arg) {\r\n        if (arg) {\r\n            this._keys = arg;\r\n        }\r\n    }\r\n\r\n    set dataSource(arg) {\r\n        if (arg) {\r\n            this._dataSource = arg;\r\n        }\r\n    }\r\n\r\n    set dataTarget(arg) {\r\n        if (arg) {\r\n            this._dataTarget = arg;\r\n        }\r\n    }\r\n\r\n    set groups(arg) {\r\n        if (arg) {\r\n            this._groups = arg;\r\n        }\r\n    }\r\n\r\n    set stacks(arg) {\r\n        if (arg) {\r\n            this._stacks = arg;\r\n        }\r\n    }\r\n\r\n    set colorRange(arg) {\r\n        if (arg) {\r\n            this._colorRange = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n\r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    initDataSource(options) {\r\n        var self = this;\r\n\r\n        if (self.hasPlainData(options)) {\r\n            self.executePlainData(options);\r\n        } else if (self.hasFile(options)) {\r\n            self.executeFile(options);\r\n        }\r\n    }\r\n\r\n    hasPlainData(options) {\r\n        return options.plain && Helper.isArray(options.plain);\r\n    }\r\n\r\n    hasFile(options) {\r\n        return options.file && Helper.isObject(options.file);\r\n    }\r\n\r\n    executePlainData(options) {\r\n        var self = this;\r\n\r\n        self._dataSource = options.plain;\r\n    }\r\n\r\n    executeFile(options) {\r\n        var self = this;\r\n\r\n        self._file  = Helper.merge(options.file, config.file);\r\n\r\n        if (self._file && self._file.type) {\r\n\r\n            switch(self._file.type) {\r\n                case \"csv\":\r\n                    self._dataSource = self.getCsv();\r\n                    break;\r\n                case \"tsv\":\r\n                    self._dataSource = self.getTsv();\r\n                    break;\r\n                case \"text\":\r\n                    self._dataSource = self.getText();\r\n                    break;\r\n                case \"json\":\r\n                    self._dataSource = self.getJson();\r\n                    break;\r\n                case \"xml\":\r\n                    self._dataSource = self.getXml();\r\n                    break;\r\n                case \"xhr\":\r\n                    self._dataSource = self.getJson();\r\n                    break;\r\n                default:\r\n                    self._dataSource = self.getJson();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDataTypeForBarChart() {\r\n        var self = this;\r\n\r\n        if (!Helper.isEmpty(self.groups) && Helper.isArray(self.groups)) {\r\n            return \"group\";\r\n        } else if (!Helper.isEmpty(self.stacks) && Helper.isArray(self.stacks)) {\r\n            return \"stack\";\r\n        }\r\n\r\n        return \"single\";\r\n    }\r\n\r\n    getDataTarget(chartType) {\r\n        var self = this;\r\n\r\n        switch(chartType) {\r\n            case \"bar\":\r\n                return self.getDataTargetForBarChart();\r\n                break;\r\n\r\n            case \"line\":\r\n                return self.getDataTargetForLineChart();\r\n                break;\r\n\r\n            case \"pie\":\r\n                return self.getDataTargetForPieChart();\r\n                break;\r\n\r\n            case \"donut\":\r\n                return self.getDataTargetForDonutChart();\r\n                break;\r\n\r\n            case \"timeline\":\r\n                return self.getDataTargetForTimelineChart();\r\n                break;\r\n            default:\r\n                return self.dataSource;\r\n                break;\r\n        }\r\n    }\r\n\r\n    getName(v) {\r\n        return v.name; \r\n    }\r\n\r\n    getValue(v) {\r\n        var self = this;\r\n\r\n        return Helper.get(self.keys, v);\r\n    }\r\n\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /*=================================================\r\n    =            Normalize Data For Charts            =\r\n    =================================================*/\r\n    getDataTargetForBarChart() {\r\n        var self = this;\r\n\r\n        switch(self.getDataTypeForBarChart()) {\r\n            case \"single\":\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _stack = [];\r\n                    let _data = {\r\n                        \"max\": Helper.get(self.keys.value, data),\r\n                        \"stack\": [{\r\n                            \"name\" : Helper.get(self.keys.name, data),\r\n                            \"y0\" : 0,\r\n                            \"y1\" : Helper.get(self.keys.value, data),\r\n                            \"enable\" : true,\r\n                        }]\r\n                    };\r\n                    self.dataTarget.push(_data);\r\n                });\r\n\r\n                return self.dataTarget;\r\n                break;\r\n\r\n            case \"group\":\r\n                var groups = self.groups;\r\n\r\n                // Iterate over each group\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _group      = {\r\n                            \"max\"   : null,\r\n                            \"stack\" : []\r\n                        },\r\n                        _dsArray    = Helper.get(self.keys.value, data);\r\n\r\n                    // If Group has only 1 value, so MAX = this.value\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        _group.max = Helper.max(_dsArray);\r\n                    } else {\r\n                        _group.max = _dsArray;\r\n                    }\r\n\r\n                    let _stack      = [],\r\n                        _stackItem = {\r\n                            \"color\": \"#ffffff\",\r\n                            \"y0\": 0,\r\n                            \"y1\": 1,\r\n                            \"group\": \"\",\r\n                            \"name\": \"\",\r\n                            \"data-ref\": \"\",\r\n                            \"enable\"    : true,\r\n                        },\r\n                        color = self.colorRange;\r\n\r\n                    // Iterate each single bar in a group\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        _dsArray.forEach(function(d, i) {\r\n                            _stackItem = {\r\n                                \"color\": color(i),\r\n                                \"y0\": 0,\r\n                                \"y1\": d,\r\n                                \"group\": groups[i] || i,\r\n                                \"name\": Helper.get(self.keys.name, data),\r\n                                \"data-ref\": Helper.guid(),\r\n                                \"enable\"    : true,\r\n                            };\r\n                            _stack.push(_stackItem);\r\n                        });\r\n                    } else {\r\n                        _stackItem = {\r\n                            \"color\": color(0),\r\n                            \"y0\": 0,\r\n                            \"y1\": _dsArray,\r\n                            \"group\": groups[0] || 0,\r\n                            \"name\": Helper.get(self.keys.name, data),\r\n                            \"data-ref\": Helper.guid(),\r\n                            \"enable\"    : true,\r\n                        };\r\n                        _stack.push(_stackItem);\r\n                    }\r\n                    _group.stack = _stack;\r\n\r\n                    self.dataTarget.push(_group);\r\n                });\r\n\r\n                return self.dataTarget;\r\n                break;\r\n\r\n            case \"stack\":\r\n                var stacks = self.stacks;\r\n\r\n                // Iterate over each group\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _group      = {\r\n                            \"max\"   : null,\r\n                            \"stack\" : []\r\n                        },\r\n                        _dsArray    = Helper.get(self.keys.value, data);\r\n\r\n                    // If Group has only 1 value, so MAX = this.value\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        _group.max = Helper.sum(_dsArray);\r\n                    } else {\r\n                        _group.max = _dsArray;\r\n                    }\r\n\r\n                    let _stack      = [],\r\n                        _stackItem = {\r\n                            \"color\": \"#ffffff\",\r\n                            \"y0\": 0,\r\n                            \"y1\": 1,\r\n                            \"group\": \"\",\r\n                            \"name\": \"\",\r\n                            \"data-ref\": \"\",\r\n                            \"enable\"    : true,\r\n                        },\r\n                        color = self.colorRange;\r\n\r\n                    // Iterate each single bar in a group\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        let _tempY0     = 0;\r\n                        _dsArray.forEach(function(d, i) {\r\n                            _stackItem = {\r\n                                \"color\": color(i),\r\n                                \"y0\": _tempY0,\r\n                                \"y1\": _tempY0 + d,\r\n                                \"group\": stacks[i] || i,\r\n                                \"name\": Helper.get(self.keys.name, data),\r\n                                \"data-ref\": Helper.guid(),\r\n                                \"enable\"    : true,\r\n                            };\r\n                            _stack.push(_stackItem);\r\n                            // Increase tempY0 by d to restore previous y0\r\n                            _tempY0 += d;\r\n                        });\r\n                    } else {\r\n                        _stackItem = {\r\n                            \"color\": color(0),\r\n                            \"y0\": 0,\r\n                            \"y1\": _dsArray,\r\n                            \"group\": stacks[0] || 0,\r\n                            \"name\": Helper.get(self.keys.name, data),\r\n                            \"data-ref\": Helper.guid(),\r\n                            \"enable\"    : true,\r\n                        };\r\n                        _stack.push(_stackItem);\r\n                    }\r\n                    _group.stack = _stack;\r\n\r\n                    self.dataTarget.push(_group);\r\n                });\r\n\r\n                return self.dataTarget;\r\n                break;\r\n\r\n            default:\r\n                return self.dataSource;\r\n                break;\r\n        }\r\n    \r\n    }\r\n\r\n    getDataTargetForPieChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n        self.dataSource.forEach(function(data, index) {\r\n            let _data = {\r\n                \"color\"     : color(index),\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : Helper.get(self.keys.value, data),\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n            self.dataTarget.push(_data);\r\n        });\r\n\r\n        return self.dataTarget;\r\n\r\n    }\r\n\r\n    getDataTargetForDonutChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n        self.dataSource.forEach(function(data, index) {\r\n            let _data = {\r\n                \"color\"     : color(index),\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : Helper.get(self.keys.value, data),\r\n            };\r\n\r\n            self.dataTarget.push(_data);\r\n        });\r\n\r\n        return self.dataTarget;\r\n\r\n    }\r\n\r\n    getDataTargetForTimelineChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n\r\n        self.dataSource.forEach(function(data, index) {\r\n\r\n            let _data = {\r\n                // \"color\"     : color(index),\r\n                \"icon\"      : data.icon,\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : [],\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n\r\n            let _dsArray    = Helper.get(self.keys.value, data),\r\n                _valueArray = [],\r\n                _valueItem  = {\r\n                    \"start\": null ,\r\n                    \"end\": null ,\r\n                    \"color\": \"#fff\",\r\n                    \"data-ref\": null,\r\n                    \"enable\": true\r\n                };\r\n\r\n            if (Helper.isArray(_dsArray)) {\r\n                _dsArray.forEach(function(d, i) {\r\n                    _valueItem = {\r\n                        \"start\": d.start,\r\n                        \"end\": d.end ,\r\n                        \"color\": color(index),\r\n                        \"data-ref\": Helper.guid(),\r\n                        \"enable\": true,\r\n                    };\r\n                    _valueArray.push(_valueItem);\r\n                });\r\n            } else {\r\n                _valueItem = {\r\n                    \"start\": d.start,\r\n                    \"end\": d.end ,\r\n                    \"color\": color(index),\r\n                    \"data-ref\": Helper.guid(),\r\n                    \"enable\": true,\r\n                };\r\n                _valueArray.push(_valueItem);\r\n            }\r\n            _data.value = _valueArray;\r\n\r\n            self.dataTarget.push(_data);\r\n        });\r\n        return self.dataTarget;\r\n\r\n    }\r\n    \r\n    getDataTargetForLineChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n        self.dataSource.forEach(function(data, index) {\r\n            let _data = {\r\n                \"color\"     : color(index),\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : Helper.get(self.keys.value, data),\r\n                \"time\"      : Helper.get(self.keys.time, data),\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n            self.dataTarget.push(_data);\r\n        });\r\n\r\n        return self.dataTarget;\r\n\r\n    }\r\n    /*=====  End of Normalize Data For Charts  ======*/\r\n    \r\n    /*=============================\r\n    =            Utils            =\r\n    =============================*/\r\n    // getBarColorForBarChart() {\r\n    //     var self = this;\r\n\r\n    //     var color = self.colorRange;\r\n    //     if (typeof color == 'string') {\r\n    //         try {\r\n    //             return d3.scale[color]();    \r\n    //         }\r\n    //         catch(err) {\r\n    //             return function(i) {\r\n    //                 return color;\r\n    //             };\r\n    //         }\r\n    //     } else if (typeof color == 'object') {\r\n    //         return d3.scale.ordinal().range(color);\r\n    //     }\r\n    // }\r\n    \r\n    \r\n    /*=====  End of Utils  ======*/\r\n    \r\n\r\n    /*=============================================\r\n    =            Data Input From Files            =\r\n    =============================================*/\r\n    \r\n    getCsv() {\r\n\r\n        var self = this;\r\n\r\n        d3.csv(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return data;\r\n        });\r\n\r\n    }\r\n\r\n    getTsv() {\r\n\r\n        var self = this;\r\n\r\n        d3.tsv(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return data;\r\n        });\r\n\r\n    }\r\n\r\n    getText() {\r\n\r\n        var self = this;\r\n\r\n        d3.text(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return JSON.parse(data);\r\n        });\r\n\r\n    }\r\n\r\n    getJson() {\r\n        var self = this;\r\n\r\n        d3.json(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return data;\r\n        });\r\n    }\r\n\r\n    getXml() {\r\n        var self = this;\r\n\r\n        d3.xml(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            // Convert the XML document to an array of objects.\r\n            // Note that querySelectorAll returns a NodeList, not a proper Array,\r\n            // so we must use map.call to invoke array methods.\r\n            data = [].map.call(data.querySelectorAll(\"data\"), function(d) {\r\n                return {\r\n                    name: d.querySelector(\"name\").textContent,\r\n                    value: d.querySelector(\"value\").textContent\r\n                };\r\n            });\r\n\r\n            return data;\r\n        });\r\n    }\r\n    \r\n    /*=====  End of Data Input From Files  ======*/\r\n    \r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/C9.DataAdapter.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class DonutChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self = this;\r\n        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\r\n        var config = {\r\n            outerRadius: R,\r\n            innerRadius: R > 80 ? R - 80 : R - 40,\r\n            showText: true // show/hide text on middle or each donut\r\n        };\r\n\r\n        self._outerRadius   = options.outerRadius || config.outerRadius;\r\n        self._innerRadius   = options.innerRadius || config.innerRadius;\r\n        self._showText      = options.showText || config.showText;\r\n        self.body.type      = 'donut';\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget     = da.getDataTarget(\"donut\");\r\n\r\n        self.updateConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get outerRadius() {\r\n        return this._outerRadius;\r\n    }\r\n\r\n    get innerRadius() {\r\n        return this._innerRadius;\r\n    }\r\n\r\n    get showText() {\r\n        return this._showText;\r\n    }\r\n\r\n    get eventFactory() {\r\n        return this._eventFactory;\r\n    }\r\n\r\n    get pathAnim() {\r\n        return this._pathAnim;\r\n    }\r\n\r\n    get tooltip() {\r\n        return this._tooltip;\r\n    }\r\n\r\n    get pie() {\r\n        return this._pie;\r\n    }\r\n\r\n    get arc() {\r\n        return this._arc;\r\n    }\r\n\r\n    get currentData() {\r\n        return this._currentData;\r\n    }\r\n\r\n    get chartType() {\r\n        return this._body.type;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set outerRadius(newOuterRadius) {\r\n        if (newOuterRadius) {\r\n            this._outerRadius = newOuterRadius;\r\n        }\r\n    }\r\n\r\n    set innerRadius(newInnerRadius) {\r\n        if (newInnerRadius) {\r\n            this._innerRadius = newInnerRadius;\r\n        }\r\n    }\r\n\r\n    set showText(newShowText) {\r\n        if (newShowText) {\r\n            this._showText = newShowText;\r\n        }\r\n    }\r\n\r\n    set eventFactory(newEventFactory) {\r\n        if (newEventFactory) {\r\n            this._eventFactory = newEventFactory;\r\n        }\r\n    }\r\n\r\n    set pathAnim(newPathAnim) {\r\n        if (newPathAnim) {\r\n            this._pathAnim = newPathAnim;\r\n        }\r\n    }\r\n\r\n    set tooltip(newTooltip) {\r\n        if (newTooltip) {\r\n            this._tooltip = newTooltip;\r\n        }\r\n    }\r\n\r\n    set pie(newPie) {\r\n        if (newPie) {\r\n            this._pie = newPie;\r\n        }\r\n    }\r\n\r\n    set arc(newArc) {\r\n        if (newArc) {\r\n            this._arc = newArc;\r\n        }\r\n    }\r\n\r\n    set currentData(newCurrentData) {\r\n        if (newCurrentData) {\r\n            this._currentData = newCurrentData;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Update Donut Chart Config\r\n     */\r\n    updateConfig() {\r\n        var self = this;\r\n\r\n        // chartInnerAfter, chartOuterAfter define easing radius of donut chart during animation\r\n        // TODO: Add configs allow users to define these radius\r\n        var width   = self.width - self.margin.left - self.margin.right,\r\n            height  = self.height - self.margin.top - self.margin.bottom,\r\n            color   = self.colorRange,\r\n            chartInnerBefore = self.innerRadius,\r\n            chartOuterBefore = self.outerRadius,\r\n            chartInnerAfter = self.innerRadius,\r\n            chartOuterAfter = self.outerRadius * 1.2;\r\n\r\n        var hoverOptions        = self.hover.options,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        // Define Animations for paths\r\n        self.pathAnim = function(path, dir) {\r\n            switch(dir) {\r\n                \r\n                case 'mouseover':\r\n                    path.transition()\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerAfter)\r\n                            .outerRadius(chartOuterAfter)\r\n                        )\r\n                        // .style('stroke', '#000')\r\n                        .attr('fill-opacity', '1.0');\r\n                    break;\r\n\r\n                case 'mouseout':\r\n                    path.transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        )\r\n                        // .style('stroke', '#000')\r\n                        .attr('fill-opacity', '0.5');\r\n                    break;\r\n                \r\n            }\r\n        \r\n        };\r\n\r\n        // Main Event Dispatch for paths in donut chart\r\n        self.eventFactory = {\r\n\r\n            'mouseover': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseover');\r\n                self.tooltip().mouseover(d);\r\n\r\n                // var thisDonut = self.body..select('.type' + j);\r\n                // thisDonut.select('.value').text(function(donut_d) {\r\n                //     return d.data.val.toFixed(1) + donut_d.unit;\r\n                // });\r\n                // thisDonut.select('.percentage').text(function(donut_d) {\r\n                //     return (d.data.val/donut_d.total*100).toFixed(2) + '%';\r\n                // });\r\n            },\r\n            \r\n            'mouseout': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseout');\r\n                self.tooltip().mouseout(d);\r\n\r\n                // var thisDonut = charts.select('.type' + j);\r\n                // setCenterText(thisDonut);\r\n            }\r\n\r\n        };\r\n\r\n        // Define the tooltip\r\n        // TODO: Define it as a individual CLASS, in C9.Tooltip\r\n        self.tooltip = function() {\r\n            // First, remove all before hover div\r\n            self.body.selectAll('g.c9-custom-tooltip-container').remove();\r\n\r\n            // TODO: Add margin to tooltip configs\r\n            // Default: (100, 100) relative to mouse coordinate and chart margin transformation\r\n            var divOnHover = self.body.append('g')\r\n                                .attr('class', 'c9-custom-tooltip-container')\r\n                                .attr(\"transform\", function() { return 'translate(' + (d3.mouse(this)[0] - 100) +\",\"+ (d3.mouse(this)[1]- 100) + ')'; })\r\n                                .style('display', 'none')\r\n\r\n            var arc = d3.svg.arc()\r\n                    .outerRadius(self.outerRadius)\r\n                    .innerRadius(self.innerRadius);\r\n\r\n            // Rect Container\r\n            divOnHover\r\n                .append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .attr('fill', '#FEE5E2')\r\n                    .attr('stroke', '#FDCCC6')\r\n                    .attr('stroke-width', 2);\r\n            // First line\r\n            var text_1 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 10)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n            // Second line\r\n            var text_2 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 20)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n\r\n            var tooltipEventFactory = {\r\n\r\n                'mouseover': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block');\r\n                        \r\n                   let name = d.data.name || d.data.data.name,\r\n                       value = d.data.value || d.data.data.value;\r\n\r\n                    text_1.text('Name: ' + name);\r\n                    text_2.text('Value: ' + value);\r\n                },\r\n\r\n                'mouseout': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style('display', 'none');\r\n\r\n                }\r\n\r\n            };\r\n\r\n            return tooltipEventFactory;\r\n\r\n        };\r\n\r\n        self.arc = d3.svg.arc()\r\n                    .outerRadius(self.outerRadius)\r\n                    .innerRadius(self.innerRadius);\r\n\r\n        //we can sort data here\r\n        self.pie = d3.layout.pie()\r\n                    .sort(null)\r\n                    .value(function(d) { return d.value; });\r\n\r\n        //draw chart\r\n        var arcs = self.body\r\n                    .append('g')\r\n                        .attr('class', 'c9-chart c9-custom-arc-container')\r\n                        .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\r\n                        .selectAll('.c9-chart-donut.c9-custom-arc')\r\n                        .data(self.pie(self.dataTarget)).enter()\r\n                        .append('g')\r\n                            .attr('class', 'c9-chart-donut c9-custom-arc');\r\n\r\n        // Append main path contains donut\r\n        // TODO: add a unique class to allow Legend could find selected donut/pie\r\n        arcs.append('path')\r\n                .attr('class', 'c9-chart-donut c9-custom-path')\r\n                .attr('data-ref', function(d) { return d.data['data-ref']; })\r\n                .attr('d', self.arc)\r\n                .attr('fill', function(d, i) { return color(i); })\r\n                .attr('stroke', '#ffffff')\r\n                .attr('fill-opacity', '0.5')\r\n                .each(function(d) { self._currentData = d; }); \r\n                // Current data used for calculate interpolation \r\n                // between current arc vs disabled arc\r\n\r\n\r\n        // Append middle text display name\r\n        // if (self.showText) {\r\n        //     arcs.append('text')\r\n        //             .attr('class', 'c9-chart-donut c9-custom-text')\r\n        //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\r\n        //             .attr('dy', '.35em')\r\n        //             .attr('text-anchor', 'middle')\r\n        //             .text(function(d) { return d.data.name; });\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Donut Chart\r\n     */\r\n    draw() {\r\n\r\n        var self = this;\r\n        \r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.dataTarget);\r\n\r\n        // Draw legend\r\n        legend.draw();\r\n        legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\r\n\r\n        // Update interaction of this own chart\r\n        self.updateInteraction();\r\n\r\n    }\r\n\r\n    /**\r\n     * Select all path as type PATH in Donut Chart via its CLASS\r\n     */\r\n    selectAllPath() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                // .selectAll('g')\r\n                    .selectAll('path.c9-chart-donut.c9-custom-path');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllPath(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            selector.on(self._eventFactory);\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.DonutChart.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class LineChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self    = this;\r\n        var config  = {\r\n            pointShow: false,\r\n            pointFill: \"#fb8072\",\r\n            pointStroke: \"#d26b5f\",\r\n            pointOpacity: 1.0,\r\n            pointRadius: 5,\r\n            pointHoverEnable: false,\r\n            interpolate: \"linear\" // refer: https://www.dashingd3js.com/svg-paths-and-d3js\r\n        };\r\n\r\n        self._pointShow         = options.pointShow            ||  config.pointShow;\r\n        self._pointRadius       = options.pointRadius          ||  config.pointRadius;\r\n        self._pointFill         = options.pointFill            ||  config.pointFill;\r\n        self._pointStroke       = options.pointStroke          ||  config.pointStroke;\r\n        self._pointOpacity      = options.pointOpacity         ||  config.pointOpacity;\r\n        self._pointHoverEnable  = options.pointHoverEnable    ||  config.pointHoverEnable;\r\n        self._interpolate       = options.interpolate           ||  config.interpolate;\r\n        self.body.type = \"line\";\r\n\r\n        var width   = self.width - self.margin.left - self.margin.right;\r\n        var height  = self.height - self.margin.top - self.margin.bottom;\r\n\r\n        var x = d3.scale.linear().range([0, width]);\r\n        var y = d3.scale.linear().range([height, 0]);\r\n\r\n        self._x = x;\r\n        self._y = y;\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget     = da.getDataTarget(\"line\");\r\n\r\n        self.updateConfig();\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n\r\n    get pointShow() {\r\n        return this._pointShow;\r\n    }\r\n\r\n    get pointFill() {\r\n        return this._pointFill;\r\n    }\r\n\r\n    get pointStroke() {\r\n        return this._pointStroke;\r\n    }\r\n\r\n    get pointOpacity() {\r\n        return this._pointOpacity;\r\n    }\r\n\r\n    get pointRadius() {\r\n        return this._pointRadius;\r\n    }\r\n\r\n    get pointHoverEnable() {\r\n        return this._pointHoverEnable;\r\n    }\r\n\r\n    get interpolate() {\r\n        return this._interpolate;\r\n    }\r\n    \r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    get dataGroup() {\r\n        return this._dataGroup;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n\r\n    set pointShow(newPointShow) {\r\n        if (newPointShow) {\r\n            this._pointShow = newPointShow;\r\n        }\r\n    }\r\n\r\n    set pointFill(newPointFill) {\r\n        if (newPointFill) {\r\n            this._pointFill = newPointFill;\r\n        }\r\n    }\r\n\r\n    set pointStroke(newPointStroke) {\r\n        if (newPointStroke) {\r\n            this._pointStroke = newPointStroke;\r\n        }\r\n    }\r\n\r\n    set pointOpacity(newPointOpacity) {\r\n        if (newPointOpacity) {\r\n            this._pointOpacity = newPointOpacity;\r\n        }\r\n    }\r\n\r\n    set pointRadius(newPointRadius) {\r\n        if (newPointRadius) {\r\n            this._pointRadius = newPointRadius;\r\n        }\r\n    }\r\n\r\n    set pointHoverEnable(newPointHoverEnable) {\r\n        if (newPointHoverEnable) {\r\n            this._pointHoverEnable = newPointHoverEnable;\r\n        }\r\n    }\r\n\r\n    set interpolate(newInterpolate) {\r\n        if (newInterpolate) {\r\n            this._interpolate = newInterpolate;\r\n        }\r\n    }\r\n\r\n    set x(newX) {\r\n        if (newX) {\r\n            this._x = newX;\r\n        }\r\n    }\r\n\r\n    set y(newY) {\r\n        if (newY) {\r\n            this._y = newY;\r\n        }\r\n    }\r\n\r\n    set dataGroup(newDataGroup) {\r\n        if (newDataGroup) {\r\n            this._dataGroup = newDataGroup;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n    /**\r\n     * First init Line Chart\r\n     */\r\n    updateConfig() {\r\n        var self = this,\r\n            x = self._x,\r\n            y = self._y;\r\n\r\n        self._dataGroup = d3.nest()\r\n                        .key(function(d) { return d.name; })\r\n                        .entries(self.dataTarget);\r\n\r\n        var dataGroup = self._dataGroup;\r\n\r\n        x.domain([d3.min(self.dataTarget, function(d) {\r\n                    return d.time;\r\n                }), d3.max(self.dataTarget, function(d) {\r\n                    return d.time;\r\n                })]);\r\n        y.domain([d3.min(self.dataTarget, function(d) {\r\n                    return d.value;\r\n                }), d3.max(self.dataTarget, function(d) {\r\n                    return d.value;\r\n                })]);\r\n\r\n        self.xAxis = d3.svg.axis()\r\n                        .scale(x);\r\n        self.yAxis = d3.svg.axis()\r\n                        .scale(y)\r\n                        .orient(\"left\");\r\n\r\n        var lineGen = d3.svg.line()\r\n                        .x(function(d) { return x(d.time); })\r\n                        .y(function(d) { return y(d.value); })\r\n                        .interpolate(self.interpolate);\r\n\r\n        var _body        = self.body,\r\n            _pointShow  = self.pointShow,\r\n            _pointRadius= self.pointRadius,\r\n            _pointFill  = self.pointFill,\r\n            _pointStroke= self.pointStroke,\r\n            _pointOpacity= self.pointOpacity;\r\n\r\n        dataGroup.forEach(function(d,i) {\r\n            _body.append('path')\r\n                .attr('d', lineGen(d.values))\r\n                .attr('stroke', d.values[0].color)\r\n                .attr('stroke-width', 2)\r\n                .attr('data-ref', 'c9-'+d.key)\r\n                .attr('fill', 'none');\r\n\r\n            if (_pointShow) {\r\n                _body.selectAll(\"dot\")\r\n                    .data(d.values)\r\n                    .enter()\r\n                    .append(\"circle\")\r\n                    .attr('class', 'c9-chart-line c9-circle-custom')\r\n                    .attr(\"r\", _pointRadius)\r\n                    .attr(\"cx\", function(_d) { return x(_d.time); })\r\n                    .attr(\"cy\", function(_d) { return y(_d.value); })\r\n                    .attr(\"data-ref\", function (d) { return d[\"data-ref\"]; })\r\n                    .style(\"fill\", _pointFill) \r\n                    .style(\"stroke\", _pointStroke)\r\n                    .style(\"opacity\", _pointOpacity);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Line Chart\r\n     */\r\n    draw() {\r\n        var self = this;\r\n\r\n        // var axis    = new Axis(self.options, self.body, self.data, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom, self.xAxis, self.yAxis);\r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.dataTarget);\r\n\r\n        // Draw legend\r\n        legend.draw();\r\n\r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * Select all circle as type CIRCLE in Line Chart via its CLASS\r\n     */\r\n    selectAllCircle() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                .selectAll('circle.c9-chart-line.c9-circle-custom');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllCircle(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            // Define the div for the tooltip\r\n            // TODO: Allow user to add custom DIV, CLASS\r\n            // Make sure that: \r\n            // - Rect not overflow the bar, if not, hover effect will be messed\r\n            // -> So, just align the rect to right/left (x: 25) to avoid it\r\n            // -> And, the text will be align also\r\n            var div = self.body\r\n                        .append('g')\r\n                        .style('display', 'none');\r\n                        // .style('opacity', 0);\r\n                // Rect Container\r\n                div.append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .style('fill', '#FEE5E2')\r\n                    .style('stroke', '#FDCCC6')\r\n                    .style('stroke-width', 2);\r\n                // First line\r\n                var text_1 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 10)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n                // Second line\r\n                var text_2 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 20)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n\r\n            selector\r\n                .on(\"mouseover\", function(d) {\r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block')\r\n                        .attr(\"transform\", \"translate(\" + self.x(d.time) + \",\" + self.y(d.value) + \")\");\r\n\r\n                    text_1.text('Name: ' + d.time);\r\n                    text_2.text('Value: ' + d.value);\r\n                })\r\n                .on(\"mouseout\", function(d) { \r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style(\"display\", 'none');\r\n                });\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\r\n// Backup - LOL\r\n// var _currentDataY = this.data;\r\n//         _currentDataY.forEach(function(_currentValue,_index,_arr) {\r\n//                                     _currentDataY[_index].coordinate.sort(function(a,b) {\r\n//                                         return (a.y > b.y) ? 1 : ((b.y > a.y) ? -1 : 0);\r\n//                                     });\r\n//                                 });\r\n//         this.sortedDataY         = _currentDataY;\r\n\r\n//         // Get maximum value of coordinate {x, y}\r\n//         var tempMaxY = [];\r\n\r\n//         for (var i=0; i<this.sortedDataY.length; i++) {\r\n//             tempMaxY[i] = this.sortedDataY[i].coordinate[this.sortedDataY[i].coordinate.length - 1].y;\r\n//         }\r\n\r\n//         var _maxY = Math.max(...tempMaxY);\r\n\r\n\r\n//         var _currentDataX = this.data;\r\n//         _currentDataX.forEach(function(currentValue,index,arr) {\r\n//                                     _currentDataX[index].coordinate.sort(function(a,b) {\r\n//                                         return (a.x > b.x) ? 1 : ((b.x > a.x) ? -1 : 0);\r\n//                                     });\r\n//                                 });\r\n//         this.sortedDataX         = _currentDataX;\r\n//         var tempMaxX = [];\r\n//         for (var i=0; i<this.sortedDataX.length; i++) {\r\n//             tempMaxX[i] = this.sortedDataX[i].coordinate[this.sortedDataX[i].coordinate.length - 1].x;\r\n//         }\r\n//         var _maxX = Math.max(...tempMaxX);\r\n\r\n//         // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\r\n//         var width   = this.width - this.margin.left - this.margin.right;\r\n//         var height  = this.height - this.margin.top - this.margin.bottom;\r\n\r\n//         var x = d3.scale.linear().range([0, width]);\r\n//         var y = d3.scale.linear().range([height, 0]);\r\n\r\n//         x.domain([_maxX, 0]);\r\n//         y.domain([_maxY, 0]);\r\n\r\n//         var lineFunc = d3.svg.line()\r\n//             .x(function(d, i) { return x(d.x); })\r\n//             .y(function(d, i) { return y(d.y); })\r\n//             .interpolate(\"linear\");\r\n\r\n//         // this.body.selectAll('g')\r\n//         //         .data(this.sortedDataX)\r\n//         //         .enter()\r\n//         //         .append('path')\r\n//         //         .attr('class', 'line')\r\n//         //         .attr('d', function(d){\r\n//         //             return lineFunc(d.coordinate);\r\n//         //         });\r\n//         this.body.selectAll('dot')\r\n//                 .data(this.sortedDataX)\r\n//                 .selectAll('dot')\r\n//                 .data(function(d,i) {return d;})\r\n//                 .enter()\r\n//                 .append(\"circle\")\r\n//                 .attr(\"r\", 3.5)\r\n//                 .attr(\"cx\", function(d, i) { console.log(d, i); return x(d.coordinate[i].x); })\r\n//                 .attr(\"cy\", function(d, i) { console.log(d, i); return y(d.coordinate[i].y); });\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.LineChart.js\n **/","import Chart from './C9.Chart';\r\n\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Table from './utils/C9.Table';\r\n\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class PieChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        var self = this;\r\n\r\n        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\r\n        var config = {\r\n            radius: R,\r\n            showText: true\r\n        };\r\n\r\n        self._radius    = options.radius || config.radius;\r\n        self._showText  = options.showText || config.showText;\r\n\r\n        self.body.type  = 'pie';\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget     = da.getDataTarget(\"pie\");\r\n\r\n        self.updateConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    get showText() {\r\n        return this._showText;\r\n    }\r\n\r\n    get eventFactory() {\r\n        return this._eventFactory;\r\n    }\r\n\r\n    get pathAnim() {\r\n        return this._pathAnim;\r\n    }\r\n\r\n    get tooltip() {\r\n        return this._tooltip;\r\n    }\r\n\r\n    get pie() {\r\n        return this._pie;\r\n    }\r\n\r\n    get arc() {\r\n        return this._arc;\r\n    }\r\n\r\n    get currentData() {\r\n        return this._currentData;\r\n    }\r\n\r\n    get chartType() {\r\n        return this._body.type;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set radius(newradius) {\r\n        if (newradius) {\r\n            this._radius = newradius;\r\n        }\r\n    }\r\n\r\n    set showText(newShowText) {\r\n        if (newShowText) {\r\n            this._showText = newShowText;\r\n        }\r\n    }\r\n\r\n    set eventFactory(newEventFactory) {\r\n        if (newEventFactory) {\r\n            this._eventFactory = newEventFactory;\r\n        }\r\n    }\r\n\r\n    set pathAnim(newPathAnim) {\r\n        if (newPathAnim) {\r\n            this._pathAnim = newPathAnim;\r\n        }\r\n    }\r\n\r\n    set tooltip(newTooltip) {\r\n        if (newTooltip) {\r\n            this._tooltip = newTooltip;\r\n        }\r\n    }\r\n\r\n    set pie(newPie) {\r\n        if (newPie) {\r\n            this._pie = newPie;\r\n        }\r\n    }\r\n\r\n    set arc(newArc) {\r\n        if (newArc) {\r\n            this._arc = newArc;\r\n        }\r\n    }\r\n\r\n    set currentData(newCurrentData) {\r\n        if (newCurrentData) {\r\n            this._currentData = newCurrentData;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Update Donut Chart Config\r\n     */\r\n    updateConfig() {\r\n        var self = this;\r\n\r\n        // chartInnerAfter, chartOuterAfter define easing radius of pie chart during animation\r\n        // TODO: Add configs allow users to define these radius\r\n        var width   = self.width - self.margin.left - self.margin.right,\r\n            height  = self.height - self.margin.top - self.margin.bottom,\r\n            color   = self.colorRange,\r\n            chartInnerBefore = 0,\r\n            chartOuterBefore = self.radius,\r\n            chartInnerAfter = 0,\r\n            chartOuterAfter = self.radius * 1.2;\r\n\r\n        var hoverOptions        = self.hover.options,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        // Define Animations for paths\r\n        self.pathAnim = function(path, dir) {\r\n            switch(dir) {\r\n\r\n                case 'mouseover':\r\n                    path.transition()\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerAfter)\r\n                            .outerRadius(chartOuterAfter)\r\n                        )\r\n                        // .style('stroke', '#FFFFF3')\r\n                        .attr('fill-opacity', '1.0');\r\n                    break;\r\n                    \r\n                case 'mouseout':\r\n                    path.transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        )\r\n                        // .style('stroke', '#ffffff')\r\n                        .attr('fill-opacity', '0.5');\r\n                    break;\r\n            }\r\n        };\r\n\r\n        // Main Event Dispatch for paths in pie chart\r\n        self.eventFactory = {\r\n\r\n            'mouseover': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseover');\r\n                self.tooltip().mouseover(d);\r\n\r\n                // var thisDonut = self.body..select('.type' + j);\r\n                // thisDonut.select('.value').text(function(pie_d) {\r\n                //     return d.data.val.toFixed(1) + pie_d.unit;\r\n                // });\r\n                // thisDonut.select('.percentage').text(function(pie_d) {\r\n                //     return (d.data.val/pie_d.total*100).toFixed(2) + '%';\r\n                // });\r\n            },\r\n            \r\n            'mouseout': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseout');\r\n                self.tooltip().mouseout(d);\r\n\r\n                // var thisDonut = charts.select('.type' + j);\r\n                // setCenterText(thisDonut);\r\n            }\r\n\r\n        };\r\n\r\n        // Define the tooltip\r\n        // TODO: Define it as a individual CLASS, in C9.Tooltip\r\n        self.tooltip = function() {\r\n            // First, remove all before hover div\r\n            self.body.selectAll('g.c9-custom-tooltip-container').remove();\r\n\r\n            // TODO: Add margin to tooltip configs\r\n            // Default: (100, 100) relative to mouse coordinate and chart margin transformation\r\n            var divOnHover = self.body.append('g')\r\n                                .attr('class', 'c9-custom-tooltip-container')\r\n                                .attr(\"transform\", function() { return 'translate(' + (d3.mouse(this)[0] - 100) +\",\"+ (d3.mouse(this)[1]- 100) + ')'; })\r\n                                .style('display', 'none')\r\n\r\n            var arc = d3.svg.arc()\r\n                    .innerRadius(0)\r\n                    .outerRadius(self.radius);\r\n\r\n            // Rect Container\r\n            divOnHover\r\n                .append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .style('fill', '#FEE5E2')\r\n                    .style('stroke', '#FDCCC6')\r\n                    .style('stroke-width', 2);\r\n            // First line\r\n            var text_1 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 10)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n            // Second line\r\n            var text_2 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 20)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n\r\n            var tooltipEventFactory = {\r\n\r\n                'mouseover': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block');\r\n\r\n                    let name = d.data.name || d.data.data.name,\r\n                        value = d.data.value || d.data.data.value;\r\n                        \r\n                    text_1.text('Name: ' + name);\r\n                    text_2.text('Value: ' + value);\r\n                },\r\n\r\n                'mouseout': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style('display', 'none');\r\n\r\n                }\r\n\r\n            };\r\n\r\n            return tooltipEventFactory;\r\n\r\n        };\r\n\r\n        self.arc = d3.svg.arc()\r\n                    .innerRadius(0)\r\n                    .outerRadius(self.radius);\r\n\r\n        //we can sort data here\r\n        self.pie = d3.layout.pie()\r\n                    .sort(null)\r\n                    .value(function(d) { return d.value; });\r\n\r\n        //draw chart\r\n        var arcs = self.body\r\n                    .append('g')\r\n                        .attr('class', 'c9-chart c9-custom-arc-container')\r\n                        .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\r\n                        .selectAll('.c9-chart-pie.c9-custom-arc')\r\n                        .data(self.pie(self.dataTarget)).enter()\r\n                        .append('g')\r\n                            .attr('class', 'c9-chart-pie c9-custom-arc');\r\n\r\n        // Append main path contains pie\r\n        arcs.append('path')\r\n                .attr('class', 'c9-chart-pie c9-custom-path')\r\n                .attr('data-ref', function(d) { return d.data['data-ref']; })\r\n                .attr('d', self.arc)\r\n                .attr('fill', function(d, i) { return color(i); })\r\n                .attr('stroke', '#ffffff')\r\n                .attr('fill-opacity', '0.5')\r\n                .each(function(d) { self._currentData = d; }); \r\n                // Current data used for calculate interpolation \r\n                // between current arc vs disabled arc\r\n\r\n\r\n        // Append middle text display name\r\n        // if (self.showText) {\r\n        //     arcs.append('text')\r\n        //             .attr('class', 'c9-chart-pie c9-custom-text')\r\n        //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\r\n        //             .attr('dy', '.35em')\r\n        //             .attr('text-anchor', 'middle')\r\n        //             .text(function(d) { return d.data.name; });\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Donut Chart\r\n     */\r\n    draw() {\r\n\r\n        var self = this;\r\n        \r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.dataTarget);\r\n        var table   = new Table(self.options.table, self.body, self.dataTarget);\r\n\r\n        // Draw legend\r\n        legend.draw();\r\n        legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\r\n\r\n        // Draw table\r\n        table.draw();\r\n\r\n        // Update interaction of this own chart\r\n        self.updateInteraction();\r\n\r\n    }\r\n\r\n    /**\r\n     * Select all path as type PATH in Donut Chart via its CLASS\r\n     */\r\n    selectAllPath() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                // .selectAll('g')\r\n                    .selectAll('path.c9-chart-pie.c9-custom-path');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllPath(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            selector.on(self.eventFactory);\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.PieChart.js\n **/","'use strict';\r\n\r\nimport Helper from '../../helper/C9.Helper';\r\n\r\nexport\r\ndefault class Table {\r\n    constructor(options, body, data) {\r\n        var config = {\r\n            container: \"body\",\r\n            show: true,\r\n            headings: [\"Name\", \"Value\"],\r\n            style: \"default\", // \"strip\", \"border\"\r\n            serial: true,\r\n            hover: {\r\n                enable: true,\r\n                callback: null\r\n            },\r\n            click: {\r\n                enable: true,\r\n                callback: null\r\n            }\r\n        };\r\n\r\n        var self = this;\r\n\r\n        self._container = options.container || config.container;\r\n        self._show = options.show ? options.show : config.show;\r\n        self._headings = options.headings || config.headings;\r\n        self._style = options.style || config.style;\r\n        self._serial = options.serial || config.serial;\r\n        self._hover = Helper.merge(options.hover, config.hover);\r\n        self._click = Helper.merge(options.click, config.click);\r\n\r\n        self._data = data;\r\n        self._body = body;\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get body() {\r\n        return this._body;\r\n    }\r\n\r\n    get container() {\r\n        return this._container;\r\n    }\r\n\r\n    get show() {\r\n        return this._show;\r\n    }\r\n\r\n    get headings() {\r\n        return this._headings;\r\n    }\r\n\r\n    get style() {\r\n        return this._style;\r\n    }\r\n\r\n    get serial() {\r\n        return this._serial;\r\n    }\r\n\r\n    get hover() {\r\n        return this._hover;\r\n    }\r\n\r\n    get click() {\r\n        return this._click;\r\n    }\r\n\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set data(arg) {\r\n        if (arg) {\r\n            this._data = arg;\r\n        }\r\n    }\r\n\r\n    set body(arg) {\r\n        if (arg) {\r\n            this._body = arg;\r\n        }\r\n    }\r\n\r\n    set container(arg) {\r\n        if (arg) {\r\n            this._container = arg;\r\n        }\r\n    }\r\n\r\n    set show(arg) {\r\n        if (arg) {\r\n            this._show = arg;\r\n        }\r\n    }\r\n\r\n    set headings(arg) {\r\n        if (arg) {\r\n            this._headings = arg;\r\n        }\r\n    }\r\n\r\n    set style(arg) {\r\n        if (arg) {\r\n            this._style = arg;\r\n        }\r\n    }\r\n\r\n    set serial(arg) {\r\n        if (arg) {\r\n            this._serial = arg;\r\n        }\r\n    }\r\n\r\n    set hover(arg) {\r\n        if (arg) {\r\n            this._hover = arg;\r\n        }\r\n    }\r\n\r\n    set click(arg) {\r\n        if (arg) {\r\n            this._click = arg;\r\n        }\r\n    }\r\n\r\n    /*=====  End of Setter  ======*/\r\n\r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    draw() {\r\n        var self = this;\r\n\r\n        if (self.show) {\r\n\r\n            var table = d3.select(self.container).append(\"table\");\r\n            var thead = table.append(\"thead\");\r\n            var tbody = table.append(\"tbody\");\r\n\r\n            // Append the headers\r\n            thead.append(\"tr\")\r\n                .selectAll(\"th\")\r\n                .append(\"th\")\r\n                    .text(\"No\")\r\n                .data(self.headings)\r\n                .enter()\r\n                    .append(\"th\")\r\n                        .text(function(d) {\r\n                            return d;\r\n                        });\r\n\r\n\r\n            // Bind each statistic to a line of the table\r\n            // Show serial no.\r\n            var rows = tbody\r\n                .selectAll(\"tr\")\r\n                .data(self.data)\r\n                    .enter()\r\n                        .append(\"tr\");\r\n\r\n            rows.append(\"td\")\r\n                    .text(function(d, i) {\r\n                        return i + 1;\r\n                    });\r\n\r\n\r\n            // Add statistic names to each row\r\n            rows.append(\"td\")\r\n                    .text(function(d) {\r\n                        return d.name;\r\n                    });\r\n\r\n\r\n            // Add values to each row\r\n            rows.append(\"td\")\r\n                    .text(function(d) {\r\n                        return d.value;\r\n                    });\r\n\r\n        }\r\n\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Table.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Helper from '../helper/C9.Helper';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class TimeLine extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self = this;\r\n\r\n        var config = {\r\n            rowSeparator: \"rgb(154, 154, 154)\",\r\n            backgroundColor: null,\r\n            starting: 0,\r\n            ending: 0,\r\n            stack: false, //test\r\n            // rotateTicks: false,\r\n            itemHeight: 25,\r\n            itemMargin: 20,\r\n            labelMargin: 20,\r\n            striped: null\r\n        };\r\n\r\n        self.body.type        = \"timeline\";\r\n        self._stack             = options.stack || config.stack;\r\n        self._starting          = options.starting || config.starting;\r\n        self._ending            = options.ending || config.ending;\r\n        self._rowSeparator      = options.rowSeparator || config.rowSeparator;\r\n        self._backgroundColor   = options.backgroundColor || config.backgroundColor;\r\n        self._itemHeight        = options.itemHeight || config.itemHeight;\r\n        self._itemMargin        = options.itemMargin || config.itemMargin;\r\n        self._labelMargin       = options.labelMargin || config.labelMargin;\r\n        self._maxStack          = 1;\r\n        self._striped           = options.striped || config.striped;\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget = da.getDataTarget(\"timeline\");\r\n\r\n        self.initTimelineConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get stack() {\r\n        return this._stack;\r\n    }\r\n\r\n    get backgroundColor() {\r\n        return this._backgroundColor;\r\n    }\r\n\r\n    get rowSeparator() {\r\n        return this._rowSeparator;\r\n    }\r\n\r\n    get starting() {\r\n        return this._starting;\r\n    }\r\n\r\n    get ending() {\r\n        return this._ending;\r\n    }\r\n\r\n    get itemHeight() {\r\n        return this._itemHeight;\r\n    }\r\n\r\n    get itemMargin() {\r\n        return this._itemMargin;\r\n    }\r\n\r\n    get labelMargin() {\r\n        return this._labelMargin;\r\n    }\r\n\r\n    get maxStack() {\r\n        return this._maxStack;\r\n    }\r\n\r\n    get striped() {\r\n        return this._striped;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set stack(newStack) {\r\n        if (newStack) {\r\n            this._stacked = newStack;\r\n        }\r\n    }\r\n\r\n    set backgroundColor(newBackgroundColor) {\r\n        if (newBackgroundColor) {\r\n            this._backgroundColor = newBackgroundColor;\r\n        }\r\n    }\r\n\r\n    set rowSeparator(newRowSeparator) {\r\n        if (newRowSeparator) {\r\n            this._rowSeparator = newRowSeparator;\r\n        }\r\n    }\r\n\r\n    set starting(newStarting) {\r\n        if (newStarting) {\r\n            this._starting = newStarting;\r\n        }\r\n    }\r\n\r\n    set ending(newEnding) {\r\n        if (newEnding) {\r\n            this._ending = newEnding;\r\n        }\r\n    }\r\n\r\n    set itemHeight(newItemHeight) {\r\n        if (newItemHeight) {\r\n            this._itemHeight = newItemHeight;\r\n        }\r\n    }\r\n\r\n    set itemMargin(newItemMargin) {\r\n        if (newItemMargin) {\r\n            this._itemMargin = newItemMargin;\r\n        }\r\n    }\r\n\r\n    set labelMargin(newLabelMargin) {\r\n        if (newLabelMargin) {\r\n            this._labelMargin = newLabelMargin;\r\n        }\r\n    }\r\n\r\n    set maxStack(newMaxStack) {\r\n        if (newMaxStack) {\r\n            this._maxStack = newMaxStack;\r\n        }\r\n    }\r\n\r\n    set striped(newStriped) {\r\n        if (newStriped) {\r\n            this._striped = newStriped;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n    initTimelineConfig() {\r\n        var self = this;\r\n        var color = self.colorRange;\r\n        var stackList = {},\r\n            maxStack = 0,\r\n            minTime = 0,\r\n            maxTime = 0,\r\n            width = self.width - self.margin.left - self.margin.right,\r\n            height = self.height - self.margin.top - self.margin.bottom;\r\n\r\n        // count number of stack and calculate min time, max time from data\r\n        if (self.stack || self.ending === 0 || self.starting === 0) {\r\n            \r\n            self.dataTarget.forEach(function (datum, index) {\r\n\r\n                if (self.stack && Object.keys(stackList).indexOf(index) == -1) {\r\n                    stackList[index] = maxStack;\r\n                    maxStack++;\r\n                }\r\n\r\n                datum.value.forEach(function (time, i) {\r\n                    if(self.starting === 0)\r\n                        if (time.start < minTime || minTime === 0)\r\n                            minTime = time.start;\r\n                    if(self.ending === 0) {\r\n                        if (time.start > maxTime)\r\n                            maxTime = time.start;\r\n                        if (time.end > maxTime)\r\n                            maxTime = time.end;\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (self.ending === 0) {\r\n              self.ending = maxTime;\r\n            }\r\n            if (self.starting === 0) {\r\n              self.starting = minTime;\r\n            }\r\n        }\r\n\r\n        self.maxStack = maxStack;\r\n        var scale = width / (self.ending - self.starting);\r\n\r\n        //draw border\r\n        self.body.append(\"rect\")\r\n            .attr(\"class\", \"timeline-border-bar\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"width\", width)\r\n            .attr(\"y\", 0 - self.itemMargin / 2)\r\n            .attr(\"height\", (self.itemHeight + self.itemMargin) * self.dataTarget.length)\r\n            .attr(\"stroke\", \"rgb(154, 154, 154)\")\r\n            .attr(\"stroke-width\", 2)\r\n            .attr(\"fill\", \"none\");\r\n\r\n        self.dataTarget.forEach( function(datum, index){\r\n            var data = datum.value;\r\n\r\n            //draw background\r\n            if (self.backgroundColor) { \r\n                var barYAxis = ((self.itemHeight + self.itemMargin) * stackList[index]);\r\n                self.body.selectAll(\"g\")\r\n                    .data(data).enter()\r\n                    .insert(\"rect\")\r\n                    .attr(\"class\", \"timeline-background-bar\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"width\", width)\r\n                    .attr(\"y\", barYAxis - self.itemMargin / 2)\r\n                    .attr(\"height\", self.itemHeight + self.itemMargin)\r\n                    .attr(\"fill\", Helper.isArray(self.backgroundColor) ? self.backgroundColor[index % (self.maxStack - 1)] : self.backgroundColor);\r\n            }\r\n\r\n            if (self.striped) { \r\n                var barYAxis = ((self.itemHeight + self.itemMargin) * stackList[index]);\r\n                self.body.selectAll(\"g\")\r\n                    .data(data).enter()\r\n                    .insert(\"rect\")\r\n                    .attr(\"class\", \"timeline-background-bar\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"width\", width)\r\n                    .attr(\"y\", barYAxis - self.itemMargin / 2)\r\n                    .attr(\"height\", self.itemHeight + self.itemMargin)\r\n                    .attr(\"fill\", index % 2 ? \"rgb(255, 255, 255)\" : \"rgb(230, 230, 230)\");\r\n            }\r\n\r\n            //draw item\r\n            self.body.selectAll(\"g\")\r\n                .data(data).enter()\r\n                .append(function (d, i) {\r\n                    return document.createElementNS(d3.ns.prefix.svg, d.end ? \"rect\" : \"circle\");\r\n                })\r\n                .attr(\"x\", getXPos)\r\n                .attr(\"y\", getStackPosition)\r\n                .attr(\"width\", function (d, i) {\r\n                    return (d.end - d.start) * scale;\r\n                })\r\n                .attr(\"cy\", function (d, i) {\r\n                    return getStackPosition(d, i) + self.itemHeight / 2;\r\n                })\r\n                .attr(\"cx\", getXPos)\r\n                .attr(\"r\", self.itemHeight / 2)\r\n                .attr(\"height\", self.itemHeight)\r\n                .style(\"fill\", color(index));\r\n\r\n            //draw label inside item\r\n            // self.body.selectAll(\"g\")\r\n            //     .data(data).enter()\r\n            //     .append(\"text\")\r\n            //     .attr(\"x\", getXTextPos)\r\n            //     .attr(\"y\", getStackTextPosition)\r\n            //     .text(function(d) {\r\n            //       return d.name;\r\n            //     });\r\n\r\n            if (self.rowSeparator && index < self.maxStack - 1) {\r\n                var lineYAxis = ( self.itemHeight + self.itemMargin / 2 + (self.itemHeight + self.itemMargin) * stackList[index]);\r\n                self.body.append(\"svg:line\")\r\n                  .attr(\"class\", \"timeline-row-separator\")\r\n                  .attr(\"x1\", 0)\r\n                  .attr(\"x2\", width)\r\n                  .attr(\"y1\", lineYAxis)\r\n                  .attr(\"y2\", lineYAxis)\r\n                  .attr(\"stroke-width\", 3)\r\n                  .attr(\"stroke\", Helper.isArray(self.rowSeparator) ? self.rowSeparator[index % (self.maxStack - 1)] : self.rowSeparator);\r\n            }\r\n\r\n            //draw the label left side item\r\n            if (!Helper.isEmpty(datum.name) && datum.name != \"\") { \r\n                var rowsDown = self.margin.top + (self.itemHeight + self.itemMargin) * (stackList[index] === undefined ? 0 : stackList[index]) + self.itemHeight * 0.75;\r\n\r\n                d3.select(self.body[0][0].parentNode).append(\"text\")\r\n                    .attr(\"class\", \"timeline-label\")\r\n                    .attr(\"transform\", \"translate(\" + self.labelMargin + \",\" + rowsDown + \")\")\r\n                    .text(datum.name);\r\n            }\r\n            //draw icon\r\n            else if (!Helper.isEmpty(datum.icon) && datum.icon != \"\") {\r\n                d3.select(self.body[0][0].parentNode).append(\"image\")\r\n                    .attr(\"class\", \"timeline-label\")\r\n                    .attr(\"transform\", \"translate(\"+ self.labelMargin +\",\"+ (self.margin.top + (self.itemHeight + self.itemMargin) * stackList[index])+\")\")\r\n                    .attr(\"xlink:href\", datum.icon)\r\n                    .attr(\"width\", self.itemHeight)\r\n                    .attr(\"height\", self.itemHeight);\r\n            }\r\n\r\n            function getStackPosition(d, i) {\r\n                if (self.stack) {\r\n                    return (self.itemHeight + self.itemMargin) * stackList[index];\r\n                }\r\n                return 0;\r\n            }\r\n            function getStackTextPosition(d, i) {\r\n                if (self.stack) {\r\n                    return (self.itemHeight + self.itemMargin) * stackList[index] + self.itemHeight * 0.75;\r\n                }\r\n                return self.itemHeight * 0.75;\r\n            }\r\n        });\r\n\r\n        function getXPos(d, i) {\r\n            return (d.start - self.starting) * scale;\r\n        }\r\n\r\n        function getXTextPos(d, i) {\r\n            return (d.start - self.starting) * scale + 5;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.options.starting = this.starting;\r\n        this.options.ending = this.ending;\r\n        // var axis    = new Axis(this.options, this.body, this.dataTarget, this.width - this.margin.left - this.margin.right, (this.itemHeight + this.itemMargin) * this.maxStack, null, null);\r\n        var title   = new Title(this.options, this.body, this.width, this.height, this.margin);    \r\n        var legend  = new Legend(this.options, this.body, this.colorRange, this.dataTarget);\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.TimeLine.js\n **/","export default class Map {\r\n    constructor(options) {\r\n        var self    = this;\r\n        var config  = {\r\n            // container\r\n            id: \"body\",\r\n            \r\n            // Layers:\r\n            // BingMaps, OSM, Raster, Tile, TileImage, Vector, VectorTile,...\r\n            // REF: http://openlayers.org/en/latest/apidoc/ol.source.html?stableonly=true\r\n            layers: {\r\n                type: \"Tile\",\r\n                source: {\r\n                    name: \"OSM\"\r\n                }\r\n            }, \r\n            view: {\r\n                lat: 0,\r\n                lon: 0,\r\n                zoom: 2\r\n            }\r\n        };\r\n\r\n        self._id        = options.id        || config.id;\r\n        self._data      = options.data      || config.data;\r\n        self._view      = options.view      || config.view;\r\n        self._markers   = options.markers   || [];\r\n        self._options   = options;\r\n        self._layers    = options.layers    || config.layers;\r\n        self.initMapConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get view() {\r\n        return this._view;\r\n    }\r\n\r\n    get markers() {\r\n        return this._markers;\r\n    }\r\n\r\n    get layers() {\r\n        return this._layers;\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n    \r\n    \r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n\r\n    set id(newId) {\r\n        if (newId) {\r\n            this._id = newId;\r\n        }\r\n    }\r\n\r\n    set height(newHeight) {\r\n        if (newHeight) {\r\n            this._height = newHeight;    \r\n        }\r\n    }\r\n\r\n    set width(newWidth) {\r\n        if (newWidth) {\r\n            this._width = newWidth;\r\n        }\r\n    }\r\n\r\n    set view(newView) {\r\n        if (newView) {\r\n            this._view = newView;\r\n        }\r\n    }\r\n\r\n    set markers(newMarkers) {\r\n        if (newMarkers) {\r\n            this._markers = newMarkers;\r\n        }\r\n    }\r\n\r\n    set layers(newLayers) {\r\n        if (newLayers) {\r\n            this._layers = newLayers;\r\n        }\r\n    }\r\n\r\n    set data(newData) {\r\n        if (newData) {\r\n            this._data = newData;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    \r\n    initMapConfig() {\r\n        var self = this;\r\n\r\n        //c9Layers contain all layers\r\n        self.c9Layers = [];\r\n        //c9Markers contain all markers\r\n        self.c9Markers = new ol.source.Vector({});\r\n        //c9Objects contain all polygons, lines\r\n        self.c9Objs = new ol.source.Vector({});\r\n        //init all thing relating to user's data\r\n\r\n        //layer\r\n        self.initLayer();\r\n        \r\n        //quick markers\r\n        self.initMarker();\r\n\r\n        //object\r\n        self.initObj();\r\n    }\r\n\r\n    draw() {\r\n        var self = this;\r\n        self.c9View = new ol.View({\r\n            center: ol.proj.fromLonLat([self.view.lon, self.view.lat]),\r\n            zoom: self.view.zoom > 2 ? self.view.zoom : 2,\r\n            minZoom: 2,\r\n        });\r\n        self.c9Map = new ol.Map({\r\n            target: self.id,\r\n            layers: self.c9Layers,\r\n            view: self.c9View,\r\n            interactions : ol.interaction.defaults({doubleClickZoom :false})\r\n        });\r\n\r\n        //TODO - Create a function to gather all these event function\r\n        self.updateInteraction();\r\n\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /**\r\n     * Create layer\r\n     * @param  {String} type of layer\r\n     * @param  {source} source data defined by C9\r\n     */\r\n    createLayer(type, source = undefined){\r\n        var self = this;\r\n        var layer = new ol.layer[type];\r\n        layer.setSource(self.setupSource(source));\r\n        self.c9Layers.push(layer);\r\n    }\r\n\r\n    /**\r\n     * Init Layer base on first user's data\r\n     */\r\n    initLayer() {\r\n        var self = this;\r\n        var layers = self.layers;\r\n\r\n        if (layers instanceof Array) {\r\n            layers.forEach(function(l, i) {\r\n                self.createLayer(l.type, l.source);\r\n            })\r\n        }\r\n        else {\r\n            self.createLayer(layers.type, layers.source);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n     * Create marker\r\n     * @param  {Number} latitude of marker\r\n     * @param  {Number} longitude of marker\r\n     * @param  {String} image source (support for both local and net)\r\n     * @param  {Number} scale image if its size is too large - default = 1\r\n     */\r\n    createMarker(lat, lon, imgSrc = 'http://s21.postimg.org/blklb8scn/marker_icon.png', scale = 1){\r\n        var self = this;\r\n\r\n        var marker = new ol.Feature({\r\n            type: 'c9GeoMarker',\r\n            geometry: new ol.geom.Point(ol.proj.fromLonLat([lon, lat]))\r\n        });\r\n\r\n        /**\r\n         * Create marker style\r\n         * @param  {String} image source\r\n         * @param  {Number} scale\r\n         * @return {ol.style.Style} return marker style\r\n         */\r\n        var createMarkerStyle = function(imgSrc, scale){\r\n            return new ol.style.Style({\r\n                image: new ol.style.Icon({\r\n                    anchor: [0.5, 1], //middle-width and bottom-height of image\r\n                    src: imgSrc,\r\n                    scale: scale\r\n                })\r\n            });\r\n        }\r\n\r\n        marker.setStyle(createMarkerStyle(imgSrc, scale));\r\n\r\n        //add this marker to marker list (c9Markers)\r\n        self.c9Markers.addFeature(marker);\r\n    }\r\n\r\n    /**\r\n     * marker first set up\r\n     */\r\n    initMarker() {\r\n        var self = this;\r\n        //data\r\n        var markers = self.markers;\r\n        //add marker layer to layer list (c9Layers)\r\n        self.c9Layers.push(new ol.layer.Vector({\r\n            source: self.c9Markers\r\n        }));\r\n\r\n        if (markers.length === 0) return;\r\n\r\n        if (markers instanceof Array) {\r\n            markers.forEach(function(m, i) {\r\n                self.createMarker(m.lat, m.lon, m.img, m.scale);\r\n            });\r\n        }\r\n        else {\r\n            self.createMarker(markers.lat, markers.lon, markers.img, markers.scale);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setup source for layer\r\n     * @param  {Object} source data style defined by c9\r\n     * @return {String} return source (ol.source)\r\n     */\r\n    setupSource(s){\r\n        var source = undefined;\r\n        switch (s.name) {\r\n            case 'BingMaps':\r\n                source = new ol.source.BingMaps({\r\n                    key: s.key,\r\n                    imagerySet: s.imagerySet || 'Road'\r\n                });\r\n                break;\r\n            case 'Stamen':\r\n                source = new ol.source.Stamen({\r\n                    layer: s.layer || 'watercolor'\r\n                });\r\n                break;\r\n            /********** TileJSON require ol >= v3.8.2 **********/\r\n            case 'TileJSON':\r\n                source = new ol.source.TileJSON({\r\n                    url: s.url,\r\n                    crossOrigin: s.crossOrigin || 'anonymous'\r\n                });\r\n                break;\r\n            case 'TileArcGISRest':\r\n                source = new ol.source.TileArcGISRest({\r\n                    url: s.url\r\n                });\r\n                break;\r\n            case 'Vector':\r\n                source = new ol.source.Vector({\r\n                    url: s.url,\r\n                    format: s.format === undefined ? null : new ol.format[s.format]({\r\n                        extractStyles: s.extractStyles || false\r\n                    })\r\n                });\r\n                break;\r\n            case 'Cluster':\r\n                source = new ol.source.Cluster({\r\n                    distance: s.distance || 20,\r\n                    source: this.setupSource(s.source)\r\n                });\r\n                break;\r\n            case 'ImageVector':\r\n                source = new ol.source.ImageVector({\r\n                    source: this.setupSource(s.source)\r\n                });\r\n                break;\r\n            default: \r\n                source = new ol.source.OSM();\r\n                break;\r\n\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Create marker's flash effect\r\n     * @param  {ol.Feature}\r\n     */\r\n    createMarkerEffect(feature){\r\n        var self = this;\r\n        var duration = 3000;\r\n        var start = new Date().getTime();\r\n        var listenerKey;\r\n\r\n        function animate(event) {\r\n            var vectorContext = event.vectorContext;\r\n            var frameState = event.frameState;\r\n            var flashGeom = feature.getGeometry().clone();\r\n            var elapsed = frameState.time - start;\r\n            var elapsedRatio = elapsed / duration;\r\n            // radius will be 5 at start and 30 at end.\r\n            var radius = ol.easing.easeOut(elapsedRatio) * 25 + 5;\r\n            var opacity = ol.easing.easeOut(1 - elapsedRatio);\r\n\r\n            var style = new ol.style.Style({\r\n                image: new ol.style.Circle({\r\n                    radius: radius,\r\n                    snapToPixel: false,\r\n                    stroke: new ol.style.Stroke({\r\n                        color: 'rgba(255, 0, 0, ' + opacity + ')',\r\n                        width: 0.25 + opacity\r\n                    })\r\n                })\r\n            });\r\n\r\n            vectorContext.setStyle(style);\r\n            vectorContext.drawGeometry(flashGeom);\r\n            if (elapsed > duration) {\r\n                ol.Observable.unByKey(listenerKey);\r\n                return;\r\n            }\r\n            // tell OL3 to continue postcompose animation\r\n            self.c9Map.render();\r\n        }\r\n        listenerKey = self.c9Map.on('postcompose', animate);\r\n    }\r\n\r\n    updateInteraction(){\r\n        var self = this;\r\n        const LEFT_KEY = 37, RIGHT_KEY = 39, DURATION = 1000, LOAD_MAP_DELAY = 500;\r\n\r\n        var getCoordinatesLonLat = function(f) {\r\n            return ol.proj.transform(f.getGeometry().getCoordinates(), 'EPSG:3857', 'EPSG:4326');\r\n        }\r\n        var getCoordinates = function(f) {\r\n            return f.getGeometry().getCoordinates();\r\n        }\r\n        var transformCoordinates = function(c) {\r\n            return ol.proj.transform(c, 'EPSG:3857', 'EPSG:4326');\r\n        }\r\n        var panAnimation = function(f){\r\n            var pan = ol.animation.pan({\r\n                duration: DURATION,\r\n                source: (self.c9View.getCenter())\r\n            });\r\n            self.c9Map.beforeRender(pan);\r\n            self.c9View.setCenter(getCoordinates(f));\r\n        }\r\n        /**\r\n         * Caculate distance between marker and center view, plus direction compare with center\r\n         * @param  {ol.Feature}\r\n         * @return {[Number, Boolean]} Array of distance value and direction value (left if true, right if false)\r\n         */\r\n        var distanceAndDirection = function(f) {\r\n            var center = transformCoordinates(self.c9View.getCenter());\r\n            var fCoordinates = getCoordinatesLonLat(f);\r\n            return [Math.sqrt(Math.pow(fCoordinates[0] - center[0], 2) + Math.pow(fCoordinates[1] - center[1], 2)), (fCoordinates[0] - center[0]) <= 0];\r\n        }\r\n        //register pointer move event to show cursor as pointer if user hover on markers\r\n        self.c9Map.on('pointermove', function(evt) {\r\n            self.c9Map.getTargetElement().style.cursor = self.c9Map.hasFeatureAtPixel(evt.pixel) ? 'pointer' : '';\r\n        });\r\n\r\n        //register map first render's event to show marker's effect\r\n        self.c9Map.once('postrender', function(evt) {\r\n            setTimeout(function(){\r\n                self.c9Markers.getFeatures().forEach(function(f, i){\r\n                    self.createMarkerEffect(f);\r\n                })\r\n            }, LOAD_MAP_DELAY);\r\n        });\r\n\r\n        //register click event to show effect on markers\r\n        self.c9Map.on('click', function(evt){\r\n            var f = self.c9Map.forEachFeatureAtPixel(evt.pixel, function(feature, layer){\r\n                return feature;\r\n            });\r\n            if (f && f.get('type') == 'c9GeoMarker') {\r\n                // self.createMarkerEffect(f);\r\n                //test\r\n                panAnimation(f)\r\n            }\r\n        });\r\n\r\n        //register keydown event to change center view\r\n        $(document).keydown(function(e) {\r\n            var keydownAnimate = function(k) {\r\n                var selectedFeature = undefined;\r\n                var minDistance = Infinity;\r\n                self.c9Markers.getFeatures().forEach(function(f, i) {\r\n                    var checkAnimate = distanceAndDirection(f);\r\n\r\n                    if (((checkAnimate[1] && k == LEFT_KEY) || (!checkAnimate[1] && k == RIGHT_KEY)) && checkAnimate[0] < minDistance && checkAnimate[0] != 0) {\r\n                        minDistance = checkAnimate[0];\r\n                        selectedFeature = f;\r\n                    }\r\n                });\r\n                if (selectedFeature) {\r\n                    setTimeout(self.createMarkerEffect(selectedFeature), LOAD_MAP_DELAY);\r\n                    panAnimation(selectedFeature);\r\n                }\r\n            }\r\n            switch(e.keyCode) {\r\n                case LEFT_KEY:\r\n                    keydownAnimate(LEFT_KEY);\r\n                    break;\r\n                case RIGHT_KEY:\r\n                    keydownAnimate(RIGHT_KEY);\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * obj first set up\r\n     */\r\n    initObj() {\r\n        var self = this;\r\n\r\n        //add layer Vector to layer list (c9Layers)\r\n        self.c9Layers.push(new ol.layer.Vector({\r\n            source: self.c9Objs\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * [createObj description]\r\n     * @param  {[type]} type        [description]\r\n     * @param  {[type]} data        [description]\r\n     * @param  {[type]} strokeWidth [description]\r\n     * @param  {[type]} strokeColor [description]\r\n     * @param  {[type]} fillColor   [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    createObj(type, data, strokeWidth, strokeColor, fillColor){\r\n        var self = this;\r\n\r\n        if (type != \"polygon\" && type != \"line\")\r\n            throw \"No support\";\r\n\r\n        if (data == self.c9Markers) {\r\n            data = [];\r\n            self.c9Markers.getFeatures().forEach(function (d) {\r\n                data.push(ol.proj.transform(d.getGeometry().getCoordinates(), 'EPSG:3857', 'EPSG:4326'));\r\n            })\r\n        }\r\n\r\n        var obj = new ol.Feature({\r\n            geometry: type == \"polygon\" ? new ol.geom.Polygon([data]) : new ol.geom.LineString(data, 'XY')\r\n        });\r\n\r\n        obj.getGeometry().transform('EPSG:4326', 'EPSG:3857');\r\n\r\n        /**\r\n         * Create obj style\r\n         * @param  {Number} stroke width\r\n         * @param  {String} stroke color\r\n         * @param  {String} fill color\r\n         * @return {ol.style.Style} return obj style\r\n         */\r\n        var createObjStyle = function(strokeWidth, strokeColor, fillColor){\r\n            return new ol.style.Style({\r\n                stroke: new ol.style.Stroke({\r\n                    width: strokeWidth || 2,\r\n                    color: strokeColor || \"steelblue\"\r\n                }),\r\n                fill: new ol.style.Fill({\r\n                    color: fillColor || \"rgba(0, 0, 255, 0.2)\"\r\n                })\r\n            });\r\n        }\r\n\r\n        obj.setStyle(createObjStyle(strokeWidth, strokeColor, fillColor));\r\n\r\n        //add this marker to marker list (c9Markers)\r\n        self.c9Objs.addFeature(obj);\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/map/C9.Map.js\n **/"],"sourceRoot":""}
=======
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///C9.js","webpack:///webpack/bootstrap a6e7d9dd6c901e6351cf","webpack:///./src/index.js","webpack:///./src/charts/C9.BarChart.js","webpack:///./src/charts/C9.Chart.js","webpack:///./src/helper/C9.Helper.js","webpack:///./src/charts/utils/C9.Axis.js","webpack:///./src/charts/utils/C9.Title.js","webpack:///./src/charts/utils/C9.Legend.js","webpack:///./src/charts/utils/C9.Tooltip.js","webpack:///./src/helper/C9.DataAdapter.js","webpack:///./src/charts/C9.DonutChart.js","webpack:///./src/charts/C9.LineChart.js","webpack:///./src/charts/C9.PieChart.js","webpack:///./src/charts/utils/C9.Table.js","webpack:///./src/charts/C9.TimeLine.js","webpack:///./src/map/C9.Map.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_C","_C2","_C3","_C4","_C5","_C6","_C7","_C8","_C9","_C10","_C11","_C12","_C13","_C15","_C16","_C17","BarChart","DonutChart","LineChart","PieChart","TimeLine","Map","DataAdapter","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_typeof","Symbol","iterator","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_C14","_Chart","options","_this","getPrototypeOf","config","barWidth","undefined","width","margin","left","right","height","top","bottom","body","type","dataOption","colorRange","da","dataTarget","getDataTarget","barChartType","getDataTypeForBarChart","_groupNames","groups","stacks","_isGroup","x","d3","scale","ordinal","rangeRoundBands","y","linear","range","domain","map","d","stack","name","max","_xGroup","rangeBand","_barWidth","_x","_y","updateConfig","color","xGroup","bar","selectAll","data","enter","append","attr","bars","style","isGroup","group","y1","y0","groupNames","groupNamesOld","newLabel","groupType","xGroupOld","midGroup","indexOf","exit","remove","transition","duration","updateInteraction","legend","draw","updateInteractionForBarChart","lower","upper","d1","Math","floor","toString","split","d2","toFixed","hoverEnable","hover","enable","hoverOptions","selector","selectAllBar","onMouseOver","callback","onMouseOut","div","text_1","text_2","on","fadeIn","retrieveValue","text","fadeOut","get","set","newBarWidth","_colorRange","err","newBarColor","_groupType","newGroupType","newX","newY","newXGroup","newGroupNames","_body","Chart","template","legendShow","legendPosition","legendInsetAnchor","legendPadding","tooltipShow","tooltipPosition","table","container","show","headings","serial","click","plain","file","url","keys","_id","_width","_height","_hover","_dataOption","merge","_dataTarget","_margin","_svg","_options","initConfig","select","svg","_container","newContainer","newId","newWidth","newHeight","newColorRange","newMargin","arg","newSvg","newBody","newOptions","newHover","_toConsumableArray","arr","Array","isArray","arr2","from","Helper","each","loopable","reverse","len","setValue","setPrefix","constPrefix","isEmpty","Util","isObject","object","array","isFunction","func","obj1","obj2","obj3","attrname","_key","_data","_keys","_current","_fun","filter","apply","sum","reduce","a","b","guid","replace","r","random","v","Axis","xAxe","yAxe","xAxisShow","xAxisPadding","xAxisText","yAxisShow","yAxisPadding","yAxisText","numOfTickY","tickFormat","isLogaric","y2AxisShow","y2AxisPadding","y2AxisText","gridXShow","gridYShow","_xAxisShow","_xAxisPadding","_xAxisText","_yAxisShow","_yAxisPadding","_yAxisText","_isLogaricVariant","_tickFormat","_numOfTickY","_y2AxisShow","_y2AxisPadding","_y2AxisText","_gridXShow","_gridYShow","log","min","xScale","time","starting","ending","_xAxis","axis","orient","format","tickSize","ticks","hours","tickTime","tickInterval","_yAxis","innerTickSize","outerTickSize","newXAxis","newYAxis","newXAxisShow","newXAxisPadding","newYAxisShow","newYAxisPadding","newIsLogaricVariant","newY2AxisShow","newY2AxisPadding","Title","titleShow","titleText","titlePosition","titleSize","_titleShow","_titleText","_titlePosition","_titleSize","parentNode","node","getComputedTextLength","setYLocation","newTitleShow","newTitleText","newTitlePosition","newTitleSize","newtitleSize","Legend","legendBox","legendSize","legendTextSize","legendMargin","legendSpace","_legendShow","_legendTextSize","_legendPosition","_legendSize","_legendBox","_legendMargin","_legendSpace","legendContainer","legendItem","chart","path","pie","currentData","arc","chartType","chartInnerBefore","innerRadius","chartOuterBefore","radius","outerRadius","chartInnerAfter","chartOuterAfter","legendItemEventFactory","item","dataSet","totalEnable","attrTween","interpolate","t","mouseover","legendSelector","ease","mouseout","dataBackup","enableSet","enableSetOld","forEach","push","element","s","j","e","updateLegendInteraction","_color","newlegendShow","_legendText","newlegendText","newlegendPosition","newlegendSize","_legendItem","newLegendItem","_legendDomain","newLegendDomain","_legendItemEventFactory","newLegendItemEventFactory","Tooltip","position","offset","class","_show","_position","_offset","_class","newShow","_groups","_stacks","_dataSource","initDataSource","hasPlainData","executePlainData","hasFile","executeFile","_file","getCsv","getTsv","getText","getJson","getXml","getDataTargetForBarChart","getDataTargetForPieChart","getDataTargetForDonutChart","getDataTargetForTimelineChart","dataSource","index","_group","_dsArray","_stack","_stackItem","data-ref","_tempY0","icon","_valueArray","_valueItem","start","end","csv","tsv","JSON","parse","json","xml","querySelectorAll","querySelector","textContent","R","showText","_outerRadius","_innerRadius","_showText","pathAnim","dir","eventFactory","tooltip","divOnHover","mouse","tooltipEventFactory","layout","sort","arcs","_currentData","updateInteractionForDonutPieChart","selectAllPath","_eventFactory","newOuterRadius","newInnerRadius","newShowText","newEventFactory","_pathAnim","newPathAnim","_tooltip","newTooltip","_pie","newPie","_arc","newArc","newCurrentData","pointShow","pointFill","pointStroke","pointOpacity","pointRadius","pointHoverEnable","_pointShow","_pointRadius","_pointFill","_pointStroke","_pointOpacity","_pointHoverEnable","_interpolate","_dataGroup","nest","Client","entries","dataGroup","year","sale","xAxis","yAxis","lineGen","line","values","_d","selectAllCircle","newPointShow","newPointFill","newPointStroke","newPointOpacity","newPointRadius","newPointHoverEnable","newInterpolate","newDataGroup","_radius","newradius","Table","_headings","_style","_serial","_click","thead","tbody","rows","rowSeparator","backgroundColor","itemHeight","itemMargin","labelMargin","striped","_starting","_ending","_rowSeparator","_backgroundColor","_itemHeight","_itemMargin","_labelMargin","_maxStack","_striped","initTimelineConfig","getXPos","stackList","maxStack","minTime","maxTime","datum","getStackPosition","barYAxis","insert","document","createElementNS","ns","prefix","lineYAxis","rowsDown","newStack","_stacked","newBackgroundColor","newRowSeparator","newStarting","newEnding","newItemHeight","newItemMargin","newLabelMargin","newMaxStack","newStriped","layers","source","view","lat","lon","zoom","_view","_markers","markers","_layers","initMapConfig","c9Layers","c9Markers","ol","Vector","initLayer","initMarker","c9View","View","center","proj","fromLonLat","minZoom","c9Map","interactions","interaction","defaults","doubleClickZoom","arguments","layer","setSource","setupSource","l","createLayer","imgSrc","Style","image","Icon","anchor","src","marker","Feature","geometry","geom","Point","setStyle","createMarkerStyle","addFeature","createMarker","img","BingMaps","imagerySet","Stamen","TileJSON","crossOrigin","TileArcGISRest","extractStyles","Cluster","distance","ImageVector","OSM","feature","animate","event","vectorContext","frameState","flashGeom","getGeometry","clone","elapsed","elapsedRatio","easing","easeOut","opacity","Circle","snapToPixel","stroke","Stroke","drawGeometry","Observable","unByKey","listenerKey","render","Date","getTime","LEFT_KEY","RIGHT_KEY","DURATION","LOAD_MAP_DELAY","getCoordinatesLonLat","f","transform","getCoordinates","transformCoordinates","panAnimation","pan","animation","getCenter","beforeRender","setCenter","distanceAndDirection","fCoordinates","sqrt","pow","evt","getTargetElement","cursor","hasFeatureAtPixel","pixel","once","setTimeout","getFeatures","createMarkerEffect","forEachFeatureAtPixel","$","keydown","keydownAnimate","k","selectedFeature","minDistance","Infinity","checkAnimate","keyCode","newView","newMarkers","newLayers","newData"],"mappings":"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","file":"C9.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"C9\"] = factory();\n\telse\n\t\troot[\"C9\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"C9\"] = factory();\n\telse\n\t\troot[\"C9\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(9);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(10);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(11);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(13);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(14);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tvar _C13 = __webpack_require__(3);\n\t\n\tvar _C14 = _interopRequireDefault(_C13);\n\t\n\tvar _C15 = __webpack_require__(8);\n\t\n\tvar _C16 = _interopRequireDefault(_C15);\n\t\n\tvar _C17 = __webpack_require__(15);\n\t\n\tvar _C18 = _interopRequireDefault(_C17);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Map Importer\n\tmodule.exports = {\n\t\tBarChart: _C2.default,\n\t\tDonutChart: _C4.default,\n\t\tLineChart: _C6.default,\n\t\tPieChart: _C8.default,\n\t\tTimeLine: _C10.default,\n\t\n\t\tMap: _C12.default,\n\t\n\t\tDataAdapter: _C16.default\n\t};\n\t\n\t// CSS Importer\n\t\n\t\n\t// Helper Importer\n\t// Chart Importer\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(2);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(4);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(5);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(6);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(7);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(3);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tvar _C13 = __webpack_require__(8);\n\t\n\tvar _C14 = _interopRequireDefault(_C13);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BarChart = function (_Chart) {\n\t    _inherits(BarChart, _Chart);\n\t\n\t    function BarChart(options) {\n\t        _classCallCheck(this, BarChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (BarChart.__proto__ || Object.getPrototypeOf(BarChart)).call(this, options));\n\t\n\t        var self = _this;\n\t        var config = {\n\t            barWidth: undefined\n\t        };\n\t\n\t        var width = self.width - self.margin.left - self.margin.right;\n\t        var height = self.height - self.margin.top - self.margin.bottom;\n\t        // var groupCount   = 0; // use to count how many element in group\n\t        // var groupStart   = 0; // calculate the number of those first element that just have only 1 value\n\t\n\t        self.body.type = \"bar\";\n\t        // self._groupType     = options.groupType     ||  config.groupType;\n\t\n\t        var dataOption = self.dataOption;\n\t        dataOption.colorRange = self.colorRange;\n\t\n\t        var da = new _C14.default(dataOption);\n\t        self.dataTarget = da.getDataTarget(\"bar\");\n\t        var barChartType = da.getDataTypeForBarChart();\n\t        if (barChartType != \"single\") {\n\t            self._groupNames = da.groups || da.stacks; //define group names use for showing legend\n\t            self._isGroup = barChartType == \"group\";\n\t        }\n\t\n\t        // self.data.forEach(function(d, i) {\n\t        //     var y0 = 0; // calculate stacked data (top of each bar)\n\t        //     var count = 0; // count number of group\n\t        //     groupStart = i; \n\t        //     if (typeof d.value === \"object\") {\n\t        //         if (self.groupType == \"stack\") {\n\t        //             d.stack = d.value.map(function(v) {\n\t        //                 count++;\n\t        //                 return {name: d.name, y0: y0, y1: y0 += v, group: self._groupNames.length > 0 ? self._groupNames[count - 1] : \"Group \" + count};\n\t        //             });\n\t        //             d.total = d.stack[d.stack.length - 1].y1;\n\t        //         }\n\t        //         else if (self.groupType == \"group\") {\n\t        //             var total = -Infinity;\n\t        //             d.stack = d.value.map(function(v) {\n\t        //                 count++;\n\t        //                 total = v > total ? v : total;\n\t        //                 return {name: d.name, y0: y0, y1: v, group: self._groupNames.length > 0 ? self._groupNames[count - 1] : \"Group \" + count};\n\t        //             });\n\t        //             d.total = total;\n\t        //         }\n\t        //     }\n\t        //     else {\n\t        //         d.stack = [{name: d.name, y0: y0, y1: d.value, group: count > 0 ? self._groupNames.length > 0 ? self._groupNames[count] : \"Group \" + ++count : undefined}];\n\t        //         d.total = d.stack[d.stack.length - 1].y1;\n\t        //     }\n\t        //     if (count > groupCount)\n\t        //         groupCount = count;\n\t        // });\n\t\n\t        // // assign group to those first elements in data if they don't have\n\t        // for (var i = 0; i < groupStart - 1; i++) {\n\t        //     self.data[i].stack[0].group = self._groupNames.length > 0 ? self._groupNames[0] : \"Group 1\";\n\t        // };\n\t\n\t        // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\n\t        var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\n\t        var y = d3.scale.linear().range([height, 0]);\n\t\n\t        x.domain(self.dataTarget.map(function (d) {\n\t            return d.stack[0].name;\n\t        }));\n\t\n\t        y.domain([0, d3.max(self.dataTarget, function (d) {\n\t            return d.max;\n\t        })]);\n\t\n\t        /******** Handle for grouped, stacked bar chart ********/\n\t        if (self._groupNames) {\n\t            self._xGroup = d3.scale.ordinal();\n\t            self._xGroup.domain(self._groupNames).rangeRoundBands([0, x.rangeBand()]);\n\t        }\n\t\n\t        //self-define group names if user do not define\n\t        // if (self._groupNames.length == 0)\n\t        //     for (var i = 1; i <= groupCount; i++) {\n\t        //         self._groupNames.push(\"Group \" + i);\n\t        //     };\n\t\n\t        /**********************************************/\n\t\n\t        // Make flexible width according to barWidth\n\t        config.barWidth = x.rangeBand();\n\t        self._barWidth = options.barWidth || config.barWidth;\n\t        self._x = x;\n\t        self._y = y;\n\t        self.updateConfig();\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(BarChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        /**\r\n\t         * Init Bar Chart Config\r\n\t         */\n\t        value: function updateConfig() {\n\t            var self = this,\n\t                color = self.colorRange,\n\t                x = self._x,\n\t                y = self._y,\n\t                xGroup = self._xGroup;\n\t\n\t            var bar = self.body.selectAll(\".bar\").data(self.dataTarget).enter().append(\"g\").attr(\"class\", \"c9-chart-bar c9-custom-bar\").attr(\"transform\", function (d) {\n\t                return \"translate(\" + x(d.stack[0].name) + \",0)\";\n\t            });\n\t\n\t            var bars = bar.selectAll(\".c9-custom-rect\").data(function (d) {\n\t                return d.stack;\n\t            });\n\t\n\t            bars.enter().append(\"rect\").attr(\"class\", \"c9-custom-rect\").style(\"fill\", function (d, i) {\n\t                return d.color || color(i);\n\t            }).attr(\"x\", function (d) {\n\t                return self.isGroup ? xGroup(d.group) : undefined;\n\t            }).attr(\"y\", function (d) {\n\t                return y(d.y1);\n\t            }).attr(\"width\", function (d) {\n\t                return self.isGroup ? xGroup.rangeBand() : x.rangeBand();\n\t            }).attr(\"height\", function (d) {\n\t                return y(d.y0) - y(d.y1);\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * [updateLegendInteraction description]\r\n\t         * @param  {[type]} data          [description]\r\n\t         * @param  {[type]} groupNames    [description]\r\n\t         * @param  {[type]} groupNamesOld [description]\r\n\t         * @param  {[type]} newLabel      [description]\r\n\t         * @return {[type]}               [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateLegendInteraction',\n\t        value: function updateLegendInteraction(data, groupNames, groupNamesOld, newLabel) {\n\t            var self = this;\n\t            var type = self.groupType;\n\t\n\t            var xGroup = d3.scale.ordinal();\n\t            xGroup.domain(groupNames).rangeRoundBands([0, self.x.rangeBand()]);\n\t\n\t            var xGroupOld = d3.scale.ordinal();\n\t            xGroupOld.domain(groupNamesOld).rangeRoundBands([0, self.x.rangeBand()]);\n\t\n\t            var midGroup = undefined;\n\t            //check add new label in the middle\n\t            if (groupNames.length > groupNamesOld.length && 0 < groupNames.indexOf(newLabel) && groupNames.indexOf(newLabel) < groupNames.length - 1) midGroup = groupNamesOld[groupNames.indexOf(newLabel)];\n\t\n\t            // self.body.selectAll(\".c9-custom-rect\").transition().duration(750).attr(\"height\", 0).remove();\n\t            self.body.selectAll(\".c9-custom-rect\").data([]).exit().remove();\n\t\n\t            var bar = self.body.selectAll(\".bar\").data(data).enter().append(\"g\").attr(\"class\", \"c9-chart-bar c9-custom-bar\").attr(\"transform\", function (d, i) {\n\t                return \"translate(\" + self.x(self.dataTarget[i].stack[0].name) + \",0)\";\n\t            });\n\t\n\t            var bars = bar.selectAll(\".c9-custom-rect\").data(function (d) {\n\t                return d.stack;\n\t            });\n\t\n\t            bars.enter().append(\"rect\").attr(\"class\", \"c9-custom-rect\").style(\"fill\", function (d) {\n\t                return d.color;\n\t            }).attr(\"x\", function (d) {\n\t                // use for stack\n\t                if (!self.isGroup) return undefined;\n\t                // use for group\n\t                // group member positioning at the end of groups, so its x is the position of right edge of bar\n\t                if (groupNames.length > groupNamesOld.length && d.group == newLabel && groupNames.indexOf(newLabel) == groupNames.length - 1) return self.x.rangeBand();\n\t                return midGroup ? d.group == newLabel ? xGroupOld(midGroup) : xGroupOld(d.group) : xGroupOld(d.group);\n\t            }).attr(\"y\", function (d) {\n\t                return self.y(d.y1);\n\t            }).attr(\"width\", function (d) {\n\t                return !self.isGroup ? self.x.rangeBand() : d.group == newLabel ? 0 : xGroupOld.rangeBand();\n\t            }).attr(\"height\", function (d) {\n\t                return self.y(d.y0) - self.y(d.y1);\n\t            });\n\t\n\t            bars.transition().duration(750).attr(\"x\", function (d) {\n\t                return !self.isGroup ? undefined : xGroup(d.group);\n\t            }).attr(\"width\", function (d) {\n\t                return !self.isGroup ? self.x.rangeBand() : xGroup.rangeBand();\n\t            });\n\t\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * [Main draw function of Bar Chart]\r\n\t         * @return {[type]} [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            var self = this;\n\t            var axis = new _C4.default(self.options, self.body, self.dataTarget, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom, null, null);\n\t            var title = new _C6.default(self.options, self.body, self.width, self.height, self.margin);\n\t            var legend = new _C8.default(self.options, self.body, self.dataTarget);\n\t\n\t            legend.draw();\n\t            legend.updateInteractionForBarChart(self);\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Retrieve value from upper and lower bounds of each stack\r\n\t         * @param  {String} lower Lower bound of value\r\n\t         * @param  {String} upper Upper bound of value\r\n\t         * @return {String}       Value to return\r\n\t         */\n\t\n\t    }, {\n\t        key: 'retrieveValue',\n\t        value: function retrieveValue(lower, upper) {\n\t            var d1 = Math.floor(lower) === lower ? 0 : lower.toString().split(\".\")[1].length;\n\t            var d2 = Math.floor(upper) === upper ? 0 : upper.toString().split(\".\")[1].length;\n\t            return d1 > d2 ? (upper - lower).toFixed(d1) : (upper - lower).toFixed(d2);\n\t        }\n\t\n\t        /**\r\n\t         * Select all bars as type RECT in Bar Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllBar',\n\t        value: function selectAllBar() {\n\t            var self = this;\n\t\n\t            return self.body.selectAll('.c9-custom-rect');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         * @return {} \r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                hoverEnable = self.hover.enable,\n\t                hoverOptions = self.hover.options,\n\t                selector = self.selectAllBar(),\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            if (hoverEnable) {\n\t                // Define the div for the tooltip\n\t                // TODO: Allow user to add custom DIV, CLASS\n\t                // Make sure that: \n\t                // - Rect not overflow the bar, if not, hover effect will be messed\n\t                // -> So, just align the rect to right/left (x: 25) to avoid it\n\t                // -> And, the text will be align also\n\t                var div = self.body.append('g').style('display', 'none');\n\t                // Rect Container\n\t                div.append('rect').attr('class', 'c9-custom-tooltip-box').attr('x', 25).attr('rx', 5).attr('ry', 5).style('position', 'absolute').style('width', '100px').style('height', '50px').style('fill', '#FEE5E2').style('stroke', '#FDCCC6').style('stroke-width', 2);\n\t                // First line\n\t                var text_1 = div.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 10).style('font-family', 'sans-serif').style('font-size', '10px');\n\t                // Second line\n\t                var text_2 = div.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 20).style('font-family', 'sans-serif').style('font-size', '10px');\n\t\n\t                selector.on(\"mouseover\", function (d) {\n\t                    div.transition().duration(hoverOptions.onMouseOver.fadeIn).style(\"display\", 'block').attr(\"transform\", \"translate(\" + self.x(d.name) + \",\" + self.y(self.retrieveValue(d.y0, d.y1)) + \")\");\n\t\n\t                    text_1.text('Name: ' + d.name);\n\t                    text_2.text('Value: ' + self.retrieveValue(d.y0, d.y1));\n\t                }).on(\"mouseout\", function (d) {\n\t                    div.transition().duration(hoverOptions.onMouseOut.fadeOut).style('display', 'none');\n\t                });\n\t            }\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'barWidth',\n\t        get: function get() {\n\t            return this._barWidth;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(newBarWidth) {\n\t            if (newBarWidth) {\n\t                this._barWidth = newBarWidth;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'colorRange',\n\t        get: function get() {\n\t            var color = this._colorRange;\n\t            if (typeof color == 'string') {\n\t                try {\n\t                    return d3.scale[color]();\n\t                } catch (err) {\n\t                    return function (i) {\n\t                        return color;\n\t                    };\n\t                }\n\t            } else if ((typeof color === 'undefined' ? 'undefined' : _typeof(color)) == 'object') {\n\t                return d3.scale.ordinal().range(color);\n\t            }\n\t        },\n\t        set: function set(newBarColor) {\n\t            if (newBarColor) {\n\t                this._colorRange = newBarColor;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'groupType',\n\t        get: function get() {\n\t            return this._groupType;\n\t        },\n\t        set: function set(newGroupType) {\n\t            if (newGroupType) {\n\t                this._groupType = newGroupType;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'x',\n\t        get: function get() {\n\t            return this._x;\n\t        },\n\t        set: function set(newX) {\n\t            if (newX) {\n\t                this._x = newX;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'y',\n\t        get: function get() {\n\t            return this._y;\n\t        },\n\t        set: function set(newY) {\n\t            if (newY) {\n\t                this._y = newY;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'xGroup',\n\t        get: function get() {\n\t            return this._xGroup;\n\t        },\n\t        set: function set(newXGroup) {\n\t            if (newXGroup) {\n\t                this._xGroup = newXGroup;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'groupNames',\n\t        get: function get() {\n\t            return this._groupNames;\n\t        },\n\t        set: function set(newGroupNames) {\n\t            if (newGroupNames) {\n\t                this._groupNames = newGroupNames;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'chartType',\n\t        get: function get() {\n\t            return this._body.type;\n\t        }\n\t    }, {\n\t        key: 'isGroup',\n\t        get: function get() {\n\t            return this._isGroup;\n\t        }\n\t    }]);\n\t\n\t    return BarChart;\n\t}(_C2.default);\n\t\n\texports.default = BarChart;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(3);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Chart = function () {\n\t    function Chart(options) {\n\t        _classCallCheck(this, Chart);\n\t\n\t        var self = this;\n\t        var config = {\n\t            // container\n\t            id: \"body\",\n\t            // size (width, height), margin, padding\n\t            width: 960,\n\t            height: 480,\n\t            margin: {\n\t                top: 20,\n\t                right: 20,\n\t                bottom: 70,\n\t                left: 40\n\t            },\n\t            // interaction in chart\n\t            hover: {\n\t                enable: true,\n\t                options: {\n\t                    template: '',\n\t                    onMouseOver: {\n\t                        fadeIn: 200\n\t                    },\n\t                    onMouseOut: {\n\t                        fadeOut: 500\n\t                    }\n\t                }\n\t            },\n\t\n\t            // legend\n\t            legendShow: true,\n\t            legendPosition: \"bottom\",\n\t            legendInsetAnchor: \"top-left\",\n\t            legendPadding: 0,\n\t            // tooltip - show when mouseover on each data\n\t            tooltipShow: true,\n\t            tooltipPosition: undefined,\n\t\n\t            // table \n\t            table: {\n\t                container: \"body\",\n\t                show: true,\n\t                headings: [\"Name\", \"Value\"],\n\t                style: \"default\", // \"strip\", \"border\"\n\t                serial: true,\n\t                hover: {\n\t                    enable: true,\n\t                    callback: null\n\t                },\n\t                click: {\n\t                    enable: true,\n\t                    callback: null\n\t                }\n\t            },\n\t\n\t            // color range\n\t            colorRange: \"category20\",\n\t            // data\n\t            data: {\n\t                // ALL OPTIONS AVAILABLE IN DATA CONFIG\n\t                plain: [],\n\t                file: {\n\t                    type: null,\n\t                    url: null\n\t                },\n\t                keys: {\n\t                    name: \"name\",\n\t                    value: \"value\"\n\t                },\n\t                groups: [],\n\t                stacks: []\n\t            }\n\t        };\n\t\n\t        self._id = options.id || config.id;\n\t        self._width = options.width || config.width;\n\t        self._height = options.height || config.height;\n\t        self._colorRange = options.colorRange || config.colorRange;\n\t        self._hover = options.hover || config.hover;\n\t\n\t        self._dataOption = _C2.default.merge(options.data, config.data);\n\t        self._dataTarget = null;\n\t        self._margin = _C2.default.merge(options.margin, config.margin);\n\t\n\t        // Skeleton: \n\t        // SVG\n\t        // ---BODY (g)\n\t        // -------BlaBla\n\t        self._svg = null;\n\t        self._body = null;\n\t        self._options = options;\n\t\n\t        self.initConfig();\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Chart, [{\n\t        key: 'initConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /**\r\n\t         * Init & Update Parent Chart Config\r\n\t         */\n\t        value: function initConfig() {\n\t            var margin = this.margin,\n\t                id = this.id,\n\t                width = this.width - margin.left - margin.right,\n\t                height = this.height - margin.top - margin.bottom;\n\t\n\t            this.container = d3.select(id);\n\t\n\t            this.svg = d3.select(id).append(\"svg\").style('overflow', 'visible') // to overwrite overflow: hidden by Boostrap as default\n\t            .attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom);\n\t\n\t            this.body = this.svg.append(\"g\").attr('class', 'c9-chart c9-custom-container').attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'container',\n\t        get: function get() {\n\t            return this._container;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(newContainer) {\n\t            if (newContainer) {\n\t                this._container = newContainer;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'id',\n\t        get: function get() {\n\t            return this._id;\n\t        },\n\t        set: function set(newId) {\n\t            if (newId) {\n\t                this._id = newId;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'width',\n\t        get: function get() {\n\t            return this._width;\n\t        },\n\t        set: function set(newWidth) {\n\t            if (newWidth) {\n\t                this._width = newWidth;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'height',\n\t        get: function get() {\n\t            return this._height;\n\t        }\n\t\n\t        /**\r\n\t         * If colorRange is Array of color then scale range according to it\r\n\t         * If colorRange is a String like \"category20\", \"category20b\", etc. then scale using d3.scale.category\r\n\t         */\n\t        ,\n\t        set: function set(newHeight) {\n\t            if (newHeight) {\n\t                this._height = newHeight;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'colorRange',\n\t        get: function get() {\n\t            if (typeof this._colorRange == 'string') {\n\t                return d3.scale[this._colorRange]();\n\t            } else if (_typeof(this._colorRange) == 'object') {\n\t                return d3.scale.ordinal().range(this._colorRange);\n\t            }\n\t        },\n\t        set: function set(newColorRange) {\n\t            if (newColorRange) {\n\t                this._colorRange = newColorRange;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'margin',\n\t        get: function get() {\n\t            return this._margin;\n\t        },\n\t        set: function set(newMargin) {\n\t            if (newMargin) {\n\t                this._margin = newMargin;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dataOption',\n\t        get: function get() {\n\t            return this._dataOption;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataOption = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'svg',\n\t        get: function get() {\n\t            return this._svg;\n\t        },\n\t        set: function set(newSvg) {\n\t            if (newSvg) {\n\t                this._svg = newSvg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'body',\n\t        get: function get() {\n\t            return this._body;\n\t        },\n\t        set: function set(newBody) {\n\t            if (newBody) {\n\t                this._body = newBody;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'options',\n\t        get: function get() {\n\t            return this._options;\n\t        },\n\t        set: function set(newOptions) {\n\t            if (newOptions) {\n\t                this._options = newOptions;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'hover',\n\t        get: function get() {\n\t            return this._hover;\n\t        },\n\t        set: function set(newHover) {\n\t            if (newHover) {\n\t                this._hover = newHover;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dataTarget',\n\t        get: function get() {\n\t            return this._dataTarget;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataTarget = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Chart;\n\t}();\n\t\n\texports.default = Chart;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar Helper = {\n\t\n\t    each: function each(loopable, callback, self, reverse) {\n\t        // Check to see if null or undefined firstly.\n\t        var i, len;\n\t        if (self.isArray(loopable)) {\n\t            len = loopable.length;\n\t            if (reverse) {\n\t                for (i = len - 1; i >= 0; i--) {\n\t                    callback.call(self, loopable[i], i);\n\t                }\n\t            } else {\n\t                for (i = 0; i < len; i++) {\n\t                    callback.call(self, loopable[i], i);\n\t                }\n\t            }\n\t        } else if ((typeof loopable === 'undefined' ? 'undefined' : _typeof(loopable)) === 'object') {\n\t            var keys = Object.keys(loopable);\n\t            len = keys.length;\n\t            for (i = 0; i < len; i++) {\n\t                callback.call(self, loopable[keys[i]], keys[i]);\n\t            }\n\t        }\n\t    },\n\t\n\t    // setDefaultConfig: function() {\n\t    //     var self = this;\n\t\n\t    //     if (self.defaultConfig == null || self.defaultConfig === undefined) {\n\t    //         return;\n\t    //     } else {\n\t    //         self.lastConfig = self.merge(Chart._options, Chart);\n\t    //         self.each(self.lastConfig, function(value, index) {\n\t    //             // var prefixCfg = self.setPrefix(index);\n\t    //             self.setValue(self.lastConfig[index], index);\n\t    //         }, self);\n\t    //     }\n\t    // }\n\t\n\t    setValue: function setValue(value, key) {\n\t        var self = this;\n\t        self[key] = value;\n\t    },\n\t\n\t    setPrefix: function setPrefix(config) {\n\t        var constPrefix = '_';\n\t        if (config) {\n\t            return constPrefix + config;\n\t        }\n\t    },\n\t\n\t    isEmpty: function isEmpty(value) {\n\t        return value === null || value === undefined || Util.isArray(value) && value.length === 0;\n\t    },\n\t\n\t    isObject: function isObject(object) {\n\t        return !Util.isEmpty(object) && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';\n\t    },\n\t\n\t    isArray: function isArray(array) {\n\t        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\n\t    },\n\t\n\t    isFunction: function isFunction(func) {\n\t        return !Util.isEmpty(func) && typeof func === 'function';\n\t    },\n\t\n\t    merge: function merge(obj1, obj2) {\n\t        var obj3 = {};\n\t        for (var attrname in obj2) {\n\t            obj3[attrname] = obj2[attrname];\n\t        }\n\t        for (var attrname in obj1) {\n\t            obj3[attrname] = obj1[attrname];\n\t        }\n\t        return obj3;\n\t    },\n\t\n\t    get: function get(_key, _data) {\n\t        var _keys = _key.split(\".\");\n\t        var _current = _data;\n\t        var self = this;\n\t\n\t        for (var i = 0, len = _keys.length; i < len; i++) {\n\t            var _fun = _keys[i].split(\"|\");\n\t\n\t            if (_fun && _fun.length == 2) {\n\t                _keys[i] = _fun[0];\n\t                _fun = _fun[1];\n\t            } else {\n\t                _fun = null;\n\t            }\n\t\n\t            if ('undefined' == typeof _current[_keys[i]]) {\n\t                return '';\n\t            } else {\n\t                _current = _current[_keys[i]];\n\t            }\n\t\n\t            if (null !== _fun) {\n\t                _current = self.filter[_fun].call(this, _current);\n\t            }\n\t        }\n\t\n\t        return _current;\n\t    },\n\t\n\t    max: function max(arr) {\n\t        return Math.max.apply(Math, _toConsumableArray(arr));\n\t    },\n\t\n\t    sum: function sum(arr) {\n\t        return arr.reduce(function (a, b) {\n\t            return a + b;\n\t        }, 0);\n\t    },\n\t\n\t    guid: function guid() {\n\t        return 'c9-xxxxxx-4xxx-yxxx'.replace(/[xy]/g, function (c) {\n\t            var r = Math.random() * 16 | 0,\n\t                v = c == 'x' ? r : r & 0x3 | 0x8;\n\t            return v.toString(16);\n\t        });\n\t    }\n\t\n\t};\n\t\n\tvar Util = {\n\t    isEmpty: function isEmpty(value) {\n\t        return value === null || value === undefined;\n\t    },\n\t\n\t    isArray: function isArray(array) {\n\t        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\n\t    }\n\t};\n\t\n\tmodule.exports = Helper;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Axis = function () {\n\t    function Axis(options, body, data, width, height, xAxe, yAxe) {\n\t        _classCallCheck(this, Axis);\n\t\n\t        var config = {\n\t            xAxisShow: true,\n\t            xAxisPadding: {}, // TODO\n\t            xAxisText: 'Name',\n\t            yAxisShow: true,\n\t            yAxisPadding: {}, // TODO\n\t            yAxisText: 'Value',\n\t            numOfTickY: 5,\n\t            tickFormat: \"s\", // refer: https://github.com/d3/d3-format\n\t            isLogaric: false, // TODO: Add isPower, isNormal(default), isLogaric\n\t            y2AxisShow: true,\n\t            y2AxisPadding: {}, // TODO\n\t            y2AxisText: 'Value',\n\t            gridXShow: false,\n\t            gridYShow: false\n\t        };\n\t\n\t        this._xAxisShow = options.xAxisShow || config.xAxisShow;\n\t        this._xAxisPadding = options.xAxisPadding || config.xAxisPadding;\n\t        this._xAxisText = options.xAxisText || config.xAxisText;\n\t        this._yAxisShow = options.yAxisShow || (body.type == \"timeline\" ? false : config.yAxisShow);\n\t        this._yAxisPadding = options.yAxisPadding || config.yAxisPadding;\n\t        this._yAxisText = options.yAxisText || config.yAxisText;\n\t        this._isLogaricVariant = options.isLogaric || config.isLogaric;\n\t        this._tickFormat = options.tickFormat || config.tickFormat;\n\t        this._numOfTickY = options.numOfTickY || config.numOfTickY;\n\t        this._y2AxisShow = options.y2AxisShow || config.y2AxisShow;\n\t        this._y2AxisPadding = options.y2AxisPadding || config.y2AxisPadding;\n\t        this._y2AxisText = options.y2AxisText || config.y2AxisText;\n\t        this._gridXShow = options.gridXShow || config.gridXShow;\n\t        this._gridYShow = options.gridYShow || config.gridYShow;\n\t\n\t        var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\n\t        var y;\n\t\n\t        if (this._isLogaricVariant) {\n\t            y = d3.scale.log().range([height, 0]);\n\t        } else {\n\t            y = d3.scale.linear().range([height, 0]);\n\t        }\n\t\n\t        x.domain(data.map(function (d) {\n\t            return d.name || d.stack[0].name;\n\t        }));\n\t\n\t        if (body.type == \"bar\") {\n\t            y.domain([d3.min(data, function (d) {\n\t                return d.max;\n\t            }), d3.max(data, function (d) {\n\t                return d.max;\n\t            })]);\n\t        } else y.domain([d3.min(data, function (d) {\n\t            return d.value;\n\t        }), d3.max(data, function (d) {\n\t            return d.value;\n\t        })]);\n\t\n\t        if (body.type == \"timeline\") {\n\t\n\t            var xScale = d3.time.scale().domain([options.starting, options.ending]).range([0, width]);\n\t            this._xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\").tickFormat(options.tickFormat === undefined ? d3.time.format(\"%I %p\") : options.tickFormat.format).tickSize(options.tickFormat === undefined ? 6 : options.tickFormat.tickSize).ticks(options.tickFormat === undefined ? d3.time.hours : options.tickFormat.tickTime, options.tickFormat === undefined ? 1 : options.tickFormat.tickInterval);\n\t            delete options.starting;\n\t            delete options.ending;\n\t        } else if (body.type == \"line\") {\n\t\n\t            this._xAxis = xAxe;\n\t            this._yAxis = yAxe;\n\t        } else {\n\t            // Currently, support logaric axis only for y-axis on bar-chart\n\t            // TODO: add for line-chart too\n\t            var _tickFormat = d3.format(this._tickFormat);\n\t            var _numOfTickY = this._numOfTickY;\n\t\n\t            this._xAxis = d3.svg.axis().scale(x).orient(\"bottom\").ticks(10);\n\t\n\t            // In LOG scale, can't specify default number of ticks\n\t            // must be filter with tickFormat instead\n\t            // refer: https://github.com/d3/d3/wiki/Quantitative-Scales#log_ticks\n\t            if (this._isLogaricVariant) {\n\t                this._yAxis = d3.svg.axis().scale(y).orient(\"left\").ticks(_numOfTickY, _tickFormat).tickSize(10, 0);\n\t            } else {\n\t                this._yAxis = d3.svg.axis().scale(y).orient(\"left\").ticks(_numOfTickY).tickSize(10, 0).tickFormat(_tickFormat);\n\t            }\n\t        }\n\t\n\t        // Grid\n\t        if (this._gridXShow) {\n\t            // Select CURRENT svg container, to make this axis outside\n\t            // as a SEPARATED component, just like AXIS, of CHART\n\t            // d3.select(this._svg[0][0].parentNode)\n\t            this._xAxis.innerTickSize(-height).outerTickSize(0);\n\t        }\n\t\n\t        if (this._gridYShow) {\n\t            // Select CURRENT svg container, to make this axis outside\n\t            // as a SEPARATED component, just like AXIS, of CHART\n\t            // d3.select(this._svg[0][0].parentNode)\n\t            this._yAxis.innerTickSize(-width).outerTickSize(0);\n\t        }\n\t\n\t        this._body = body;\n\t        this._data = data;\n\t        this._width = width; // TODO : ADD Getter/setter\n\t        this._height = height;\n\t\n\t        if (this._xAxisShow) {\n\t            this._body.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(this._xAxis).append(\"text\").attr(\"dx\", \"-.8em\").attr(\"dy\", \"-.55em\").attr(\"x\", width).attr(\"y\", \"20\").style(\"text-anchor\", \"start\").text(this._xAxisText);\n\t            // .attr(\"transform\", \"rotate(-90)\" );\n\t        }\n\t\n\t        if (this._yAxisShow) {\n\t            this._body.append(\"g\").attr(\"class\", \"y axis\").call(this._yAxis).append(\"text\")\n\t            // .attr(\"transform\", \"rotate(-90)\")\n\t            .attr(\"y\", -10).attr(\"dy\", \".10\").style(\"text-anchor\", \"end\").text(this._yAxisText);\n\t        }\n\t\n\t        /**\r\n\t            TODO:\r\n\t            - Add y2-axis\r\n\t        **/\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t    _createClass(Axis, [{\n\t        key: 'xAxis',\n\t        get: function get() {\n\t            return this._xAxis;\n\t        },\n\t\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t\n\t        set: function set(newXAxis) {\n\t            if (newXAxis) {\n\t                this._xAxis = newXAxis;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'yAxis',\n\t        get: function get() {\n\t            return this._yAxis;\n\t        },\n\t        set: function set(newYAxis) {\n\t            if (newYAxis) {\n\t                this._yAxis = newYAxis;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'xAxisShow',\n\t        get: function get() {\n\t            return this._xAxisShow;\n\t        },\n\t        set: function set(newXAxisShow) {\n\t            if (newXAxisShow) {\n\t                this._xAxisShow = newXAxisShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'xAxisPadding',\n\t        get: function get() {\n\t            return this._xAxisPadding;\n\t        },\n\t        set: function set(newXAxisPadding) {\n\t            if (newXAxisPadding) {\n\t                this._xAxisPadding = newXAxisPadding;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'yAxisShow',\n\t        get: function get() {\n\t            return this._yAxisShow;\n\t        },\n\t        set: function set(newYAxisShow) {\n\t            if (newYAxisShow) {\n\t                this._yAxisShow = newYAxisShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'yAxisPadding',\n\t        get: function get() {\n\t            return this._yAxisPadding;\n\t        },\n\t        set: function set(newYAxisPadding) {\n\t            if (newYAxisPadding) {\n\t                this._yAxisPadding = newYAxisPadding;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'isLogaricVariant',\n\t        get: function get() {\n\t            return this._isLogaricVariant;\n\t        },\n\t        set: function set(newIsLogaricVariant) {\n\t            if (newIsLogaricVariant) {\n\t                this._isLogaricVariant = newIsLogaricVariant;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'y2AxisShow',\n\t        get: function get() {\n\t            return this._y2AxisShow;\n\t        },\n\t        set: function set(newY2AxisShow) {\n\t            if (newY2AxisShow) {\n\t                this._y2AxisShow = newY2AxisShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'y2AxisPadding',\n\t        get: function get() {\n\t            return this._y2AxisPadding;\n\t        },\n\t        set: function set(newY2AxisPadding) {\n\t            if (newY2AxisPadding) {\n\t                this._y2AxisPadding = newY2AxisPadding;\n\t            }\n\t        }\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }]);\n\t\n\t    return Axis;\n\t}();\n\t\n\texports.default = Axis;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Title = function () {\n\t    function Title(options, body, width, height, margin) {\n\t        _classCallCheck(this, Title);\n\t\n\t        var config = {\n\t            titleShow: true,\n\t            titleText: \"Sample Chart\",\n\t            titlePosition: 'top',\n\t            titleSize: \"14px\"\n\t        };\n\t\n\t        this._titleShow = options.titleShow || config.titleShow;\n\t        this._titleText = options.titleText || config.titleText;\n\t        this._titlePosition = options.titlePosition || config.titlePosition;\n\t        this._titleSize = options.titleSize || config.titleSize;\n\t\n\t        this._body = body;\n\t\n\t        if (this._titleShow) {\n\t            var self = this;\n\t            // Select CURRENT body container, to make this axis outside\n\t            // as a SEPARATED component, just like AXIS, of CHART\n\t            var text = d3.select(self._body[0][0].parentNode).append(\"g\").attr('class', 'c9-custom-title c9-custom-title-container').append(\"text\").attr(\"class\", \"c9-custom-title c9-custom-title-text\");\n\t\n\t            // Get title width: text.node().getComputedTextLength()           \n\t            text.attr(\"x\", (width - text.node().getComputedTextLength()) / 2).attr(\"y\", this.setYLocation(height, margin)).attr(\"text-anchor\", \"middle\").style(\"font-size\", this._titleSize).text(this._titleText);\n\t        }\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t    _createClass(Title, [{\n\t        key: 'setYLocation',\n\t\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function setYLocation(height, margin) {\n\t            if (this.titlePosition === 'top') {\n\t                return margin.top / 2;\n\t            } else if (this.titlePosition === 'bottom') {\n\t                return height - margin.bottom / 2;\n\t            }\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'titleShow',\n\t        get: function get() {\n\t            return this._titleShow;\n\t        },\n\t\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t\n\t        set: function set(newTitleShow) {\n\t            if (newTitleShow) {\n\t                this._titleShow = newTitleShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'titleText',\n\t        get: function get() {\n\t            return this._titleText;\n\t        },\n\t        set: function set(newTitleText) {\n\t            if (newTitleText) {\n\t                this._titleText = newTitleText;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'titlePosition',\n\t        get: function get() {\n\t            return this._titlePosition;\n\t        },\n\t        set: function set(newTitlePosition) {\n\t            if (newTitlePosition) {\n\t                this._titlePosition = newTitlePosition;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'titleSize',\n\t        get: function get() {\n\t            return this._titleSize;\n\t        },\n\t        set: function set(newTitleSize) {\n\t            if (newTitleSize) {\n\t                this._titleSize = newtitleSize;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Title;\n\t}();\n\t\n\texports.default = Title;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Legend = function () {\n\t    function Legend(options, body, data) {\n\t        _classCallCheck(this, Legend);\n\t\n\t        var config = {\n\t            legendShow: false,\n\t            legendPosition: [0, 0],\n\t            legendBox: false,\n\t            legendSize: 18,\n\t            legendTextSize: \"14px\",\n\t            legendMargin: [50, 5, 5, 5],\n\t            legendSpace: 150\n\t        };\n\t\n\t        var self = this;\n\t\n\t        self._legendShow = options.legendShow || config.legendShow;\n\t        self._legendTextSize = options.legendTextSize || config.legendTextSize;\n\t        self._legendPosition = options.legendPosition || config.legendPosition;\n\t        self._legendSize = options.legendSize || config.legendSize;\n\t        self._legendBox = options.legendBox || config.legendBox;\n\t        self._legendMargin = options.legendMargin || config.legendMargin;\n\t        self._legendSpace = options.legendSpace || config.legendSpace;\n\t        // self._legendStyle        = options.legendStyle      || config.legendStyle;\n\t\n\t        self._options = options;\n\t        self._body = body;\n\t        // self._color     = color;\n\t        self._data = data;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Legend, [{\n\t        key: \"draw\",\n\t\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function draw() {\n\t            var self = this;\n\t\n\t            // var color = self.color;\n\t\n\t            if (self._legendShow) {\n\t                // TODO: Remove these conditional checks by getData for general purposes\n\t                var legendDomain = [];\n\t\n\t                // var setEnableData = function(_data, _flag) {\n\t                //     return {\n\t                //         'data': _data,\n\t                //         'enable': _flag\n\t                //     };\n\t                // };\n\t\n\t                // if (self._body.type == \"line\") {\n\t\n\t                //     var dataGroup = d3.nest()\n\t                //         .key(function(d) { return d.Client; })\n\t                //         .entries(self._data);\n\t\n\t                //     dataGroup.forEach(function(d, i) {\n\t                //         legendDomain.push(d.key);\n\t                //     });\n\t\n\t                // } else if (self._body.type == \"bar\") {\n\t\n\t                //     legendDomain = self._data;\n\t\n\t\n\t                // } else if (self._body.type == \"pie\" || self._body.type == \"donut\" || self._body.type == \"timeline\") {\n\t\n\t                //     self._data.forEach(function(d) {\n\t                //         d.name ? legendDomain.push(d.name) : legendDomain.push(\"\");\n\t                //     });\n\t\n\t                // }\n\t\n\t\n\t                // Store for backup, and add enable flag to each data\n\t                // self.legendDomain = [];\n\t                // self._data.forEach(function(d) {\n\t                //     if (d) {\n\t                //         self.legendDomain.push(setEnableData(d, true));\n\t                //     }\n\t                // });\n\t\n\t                // var i;\n\t                // for (i = 0; i < legendDomain.length; i++) {\n\t                //     if (legendDomain[i] != \"\")\n\t                //         break;\n\t                // };\n\t\n\t                // if (i == legendDomain.length)\n\t                //     legendDomain = [];\n\t\n\t                // Calculate domain for color to draw\n\t                // color.domain(legendDomain);\n\t\n\t                if (self._body.type == \"bar\") {\n\t                    self.data = self.data[self.data.reduce(function (p, c, i, a) {\n\t                        return a[p].stack.length > c.stack.length ? p : i;\n\t                    }, 0)].stack;\n\t                }\n\t\n\t                // Legend will be appended in main SVG container\n\t                var legendContainer = d3.select(self._body[0][0].parentNode).append(\"g\").attr(\"class\", \"c9-custom-legend c9-custom-legend-container\").attr(\"transform\", \"translate(\" + self._legendPosition[0] + \",\" + self._legendPosition[1] + \")\");\n\t\n\t                // var legendBox = legendContainer.selectAll(\".c9-custom-legend.c9-custom-legend-box\").data([true]).enter();\n\t\n\t                self.legendItem = legendContainer.selectAll(\"g.c9-custom-legend.c9-custom-legend-item\")\n\t                // .data(color.domain())\n\t                .data(self.data).enter().append(\"g\").attr(\"class\", \"c9-custom-legend c9-custom-legend-item\").attr('data-ref', function (d) {\n\t                    return d['data-ref'];\n\t                }).attr(\"transform\", function (d, i) {\n\t                    return \"translate(\" + (i * (self.legendSize + self.legendSpace) + self.legendMargin[0]) + \",\" + self.legendMargin[3] + \")\";\n\t                });\n\t\n\t                self.legendItem.append('rect').attr('class', 'c9-custom-legend c9-custom-legend-rect').attr('width', self.legendSize * 2).attr('height', self.legendSize).attr('r', self.legendSize).attr('fill', function (d) {\n\t                    return d.color;\n\t                }).attr('stroke', function (d) {\n\t                    return d.color;\n\t                });\n\t\n\t                self.legendItem.append('text').attr('class', 'c9-custom-legend c9-custom-legend-text').attr('x', self._legendSize * 2 + 20).attr('y', 15)\n\t                // .attr('text-anchor', 'middle')\n\t                .text(function (d) {\n\t                    return self._body.type == \"bar\" ? d.group : d.name;\n\t                });\n\t\n\t                // if (self._legendBox && legendDomain.length > 0) {\n\t                //     var box = legendContainer[0][0].getBBox();\n\t                //     legendBox.attr(\"class\", \".c9-custom-legend.c9-custom-legend-box\")\n\t                //         .attr(\"x\", 0)\n\t                //         .attr(\"y\", 0)\n\t                //         .attr(\"width\", box.width + self._legendMargin[1] + self._legendMargin[3])\n\t                //         .attr(\"height\", box.height + self._legendMargin[2] + self._legendMargin[0])\n\t                //         .style(\"fill\", \"none\")\n\t                //         .style(\"stroke\", color);\n\t                // }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Update interaction event dispatchers for legend\r\n\t         * For: Donut Chart, Pie Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: \"updateInteractionForDonutPieChart\",\n\t        value: function updateInteractionForDonutPieChart(chart, path, pie, currentData, arc) {\n\t\n\t            var self = this;\n\t\n\t            var chartType = chart.chartType;\n\t\n\t            var chartInnerBefore = chartType == 'pie' ? 0 : chart.innerRadius,\n\t                chartOuterBefore = chartType == 'pie' ? chart.radius : chart.outerRadius,\n\t                chartInnerAfter = chartType == 'pie' ? 0 : chart.innerRadius,\n\t                chartOuterAfter = chartType == 'pie' ? chart.radius * 1.2 : chart.outerRadius * 1.2;\n\t\n\t            self.legendItemEventFactory = {\n\t\n\t                'click': function click(item) {\n\t\n\t                    var selector = d3.select(this);\n\t                    var enable = true,\n\t                        dataSet = self.data;\n\t                    var totalEnable = d3.sum(dataSet.map(function (d) {\n\t                        return d.enable ? 1 : 0;\n\t                    }));\n\t\n\t                    // Add pointer to cursor\n\t                    selector.style('cursor', 'pointer');\n\t\n\t                    // If current selector is disabled, then turn it on back\n\t                    // Else, set enable to false\n\t                    if (selector.style('opacity') == '0.1') {\n\t                        selector.style('opacity', '1.0');\n\t                    } else {\n\t                        if (totalEnable < 2) return;\n\t                        selector.style('opacity', '0.1');\n\t                        enable = false;\n\t                    }\n\t\n\t                    chart.pie.value(function (d) {\n\t                        if (d.name == item.name) d.enable = enable;\n\t                        return d.enable ? d.value : 0;\n\t                    });\n\t\n\t                    path = path.data(chart.pie(dataSet));\n\t\n\t                    path.transition().duration(500).attrTween('d', function (d) {\n\t                        var interpolate = d3.interpolate(chart.currentData, d);\n\t                        // Returns an interpolator between the two arbitrary values a and b. \n\t                        // The interpolator implementation is based on the type of the end value b.\n\t                        chart.currentData = interpolate(0);\n\t                        return function (t) {\n\t                            return arc(interpolate(t));\n\t                        };\n\t                    })\n\t                    // Remove stroke when re-draw arcs to avoid duplicate strokes\n\t                    .attr('stroke', 'none');;\n\t                },\n\t\n\t                'mouseover': function mouseover(item) {\n\t                    var legendSelector = d3.select(this);\n\t                    // Add pointer to cursor\n\t                    legendSelector.style('cursor', 'pointer');\n\t\n\t                    var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\n\t\n\t                    selector.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerAfter).outerRadius(chartOuterAfter)).attr('fill-opacity', '1.0');\n\t                    // var enable = true,\n\t                    //     dataSet = self.legendDomain,\n\t                    //     isCurrentEnable = true;\n\t\n\t                    // var totalEnable = d3.sum(dataSet.map(function(d) {\n\t                    //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\n\t                    //     return (d.enable) ? 1 : 0;\n\t                    // }));\n\t\n\t                    // // Add pointer to cursor\n\t                    // selector.style('cursor', 'pointer');\n\t\n\t                    // // If current selector is disabled, then remains it\n\t                    // // Else, turn enabled to disabled\n\t                    // if (!isCurrentEnable) {\n\t                    //     return false;\n\t                    // } else {\n\t                    //     if (totalEnable < 2) return;\n\t                    //     selector.style('opacity', '0.5');\n\t                    //     enable = false;\n\t                    // }\n\t\n\t                    // chart.pie.value(function(d) {\n\t                    //     if (d.data.name == item) d.tempEnable = enable;\n\t                    //     else d.tempEnable = d.enable;\n\t\n\t                    //     return (d.tempEnable) ? d.data.value : 0;\n\t                    // });\n\t\n\t                    // path = path.data(chart.pie(dataSet));\n\t\n\t                    // path.transition()\n\t                    //     .duration(200)\n\t                    //     .attrTween('d', function(d) {\n\t                    //         var interpolate = d3.interpolate(chart.currentData, d);\n\t                    //         // Returns an interpolator between the two arbitrary values a and b. \n\t                    //         // The interpolator implementation is based on the type of the end value b.\n\t                    //         chart.currentData = interpolate(0);\n\t                    //         return function(t) {\n\t                    //             return arc(interpolate(t));\n\t                    //         };\n\t                    //     });\n\t                },\n\t\n\t                'mouseout': function mouseout(item) {\n\t\n\t                    var legendSelector = d3.select(this);\n\t                    // Add pointer to cursor\n\t                    legendSelector.style('cursor', 'pointer');\n\t\n\t                    var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\n\t\n\t                    selector.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerBefore).outerRadius(chartOuterBefore)).attr('fill-opacity', '0.5');\n\t                    // var dataSet = self.legendDomain,\n\t                    //     isCurrentEnable = true;\n\t\n\t                    // var totalEnable = d3.sum(dataSet.map(function(d) {\n\t                    //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\n\t                    //     return (d.enable) ? 1 : 0;\n\t                    // }));\n\t\n\t                    // // Add pointer to cursor\n\t                    // selector.style('cursor', 'pointer');\n\t\n\t                    // chart.pie.value(function(d) {\n\t                    //     if (d.data.name == item && !d.enable) d.enable = enable;\n\t                    //     return (d.enable) ? d.data.value : 0;\n\t                    // });\n\t\n\t                    // if (!isCurrentEnable) {\n\t                    //     return;\n\t                    // } else {\n\t                    //     if (totalEnable < 2 || selector.style('opacity') == '1') return;\n\t                    //     selector.style('opacity', '1.0');\n\t                    // }\n\t\n\t                    // path = path.data(chart.pie(dataSet));\n\t\n\t                    // path.transition()\n\t                    //     .duration(200)\n\t                    //     .attrTween('d', function(d) {\n\t                    //         var interpolate = d3.interpolate(chart.currentData, d);\n\t                    //         // Returns an interpolator between the two arbitrary values a and b. \n\t                    //         // The interpolator implementation is based on the type of the end value b.\n\t                    //         chart.currentData = interpolate(0);\n\t                    //         return function(t) {\n\t                    //             return arc(interpolate(t));\n\t                    //         };\n\t                    //     });\n\t                }\n\t\n\t            };\n\t\n\t            if (self.legendShow) {\n\t\n\t                self.legendItem.on(self.legendItemEventFactory);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Update interaction for barchart\r\n\t         * @param  {[type]} chart       [description]\r\n\t         * @param  {[type]} path        [description]\r\n\t         * @param  {[type]} pie         [description]\r\n\t         * @param  {[type]} currentData [description]\r\n\t         * @param  {[type]} arc         [description]\r\n\t         * @return {[type]}             [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: \"updateInteractionForBarChart\",\n\t        value: function updateInteractionForBarChart(chart) {\n\t\n\t            var self = this;\n\t\n\t            self.legendItemEventFactory = {\n\t\n\t                'click': function click(item) {\n\t                    var selector = d3.select(this);\n\t                    var enable = true,\n\t                        dataBackup = chart.dataTarget,\n\t                        dataSet = self.data;\n\t                    var totalEnable = d3.sum(dataSet.map(function (d) {\n\t                        return d.enable ? 1 : 0;\n\t                    }));\n\t\n\t                    var enableSet = [];\n\t                    var enableSetOld = [];\n\t                    var data = [];\n\t                    // Add pointer to cursor\n\t                    selector.style('cursor', 'pointer');\n\t\n\t                    // If current selector is disabled, then turn it on back\n\t                    // Else, set enable to false\n\t                    if (selector.style('opacity') == '0.1') {\n\t                        selector.style('opacity', '1.0');\n\t                    } else {\n\t                        if (totalEnable < 2) return;\n\t                        selector.style('opacity', '0.1');\n\t                        enable = false;\n\t                    }\n\t\n\t                    //set current data for legend\n\t                    self.data.forEach(function (d, i) {\n\t                        if (d.enable) enableSetOld.push(d.group);\n\t                        if (d.group == item.group) d.enable = enable;\n\t                        if (d.enable) enableSet.push(d.group);\n\t                    });\n\t\n\t                    //TODO - handle total - use for axis\n\t                    dataBackup.forEach(function (d, i) {\n\t                        var element = { stack: [], max: d.max };\n\t                        d.stack.forEach(function (s, j) {\n\t                            enableSet.forEach(function (e) {\n\t                                if (e == s.group) {\n\t                                    element.stack.push(s);\n\t                                }\n\t                            });\n\t                        });\n\t                        data.push(element);\n\t                    });\n\t\n\t                    chart.updateLegendInteraction(data, enableSet, enableSetOld, item.group);\n\t                }\n\t\n\t            };\n\t\n\t            if (self.legendShow) {\n\t\n\t                self.legendItem.on(self.legendItemEventFactory);\n\t            }\n\t        }\n\t    }, {\n\t        key: \"setYLocation\",\n\t        value: function setYLocation(height, margin) {\n\t            if (this.legendPosition === 'top') {\n\t                return margin.top / 2;\n\t            } else if (this.legendPosition === 'bottom') {\n\t                return height - margin.bottom / 2;\n\t            }\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: \"data\",\n\t        get: function get() {\n\t            return this._data;\n\t        },\n\t\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._data = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"body\",\n\t        get: function get() {\n\t            return this._body;\n\t        }\n\t    }, {\n\t        key: \"color\",\n\t        get: function get() {\n\t            return this._color;\n\t        }\n\t    }, {\n\t        key: \"legendShow\",\n\t        get: function get() {\n\t            return this._legendShow;\n\t        },\n\t        set: function set(newlegendShow) {\n\t            if (newlegendShow) {\n\t                this._legendShow = newlegendShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendText\",\n\t        get: function get() {\n\t            return this._legendText;\n\t        },\n\t        set: function set(newlegendText) {\n\t            if (newlegendText) {\n\t                this._legendText = newlegendText;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendPosition\",\n\t        get: function get() {\n\t            return this._legendPosition;\n\t        },\n\t        set: function set(newlegendPosition) {\n\t            if (newlegendPosition) {\n\t                this._legendPosition = newlegendPosition;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendSize\",\n\t        get: function get() {\n\t            return this._legendSize;\n\t        },\n\t        set: function set(newlegendSize) {\n\t            if (newlegendSize) {\n\t                this._legendSize = newlegendSize;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendMargin\",\n\t        get: function get() {\n\t            return this._legendMargin;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._legendMargin = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendSpace\",\n\t        get: function get() {\n\t            return this._legendSpace;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._legendSpace = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendItem\",\n\t        get: function get() {\n\t            return this._legendItem;\n\t        },\n\t        set: function set(newLegendItem) {\n\t            if (newLegendItem) {\n\t                this._legendItem = newLegendItem;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendDomain\",\n\t        get: function get() {\n\t            return this._legendDomain;\n\t        },\n\t        set: function set(newLegendDomain) {\n\t            if (newLegendDomain) {\n\t                this._legendDomain = newLegendDomain;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendItemEventFactory\",\n\t        get: function get() {\n\t            return this._legendItemEventFactory;\n\t        },\n\t        set: function set(newLegendItemEventFactory) {\n\t            if (newLegendItemEventFactory) {\n\t                this._legendItemEventFactory = newLegendItemEventFactory;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Legend;\n\t}();\n\t\n\texports.default = Legend;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Tooltip = function () {\n\t    function Tooltip(options, body, data) {\n\t        _classCallCheck(this, Tooltip);\n\t\n\t        var config = {\n\t            show: true,\n\t            position: top,\n\t            offset: [-10, 0],\n\t            class: 'd3-tip'\n\t        };\n\t\n\t        this._show = options.show || config.show;\n\t        this._position = options.position || config.position;\n\t        this._offset = options.offset || config.offset;\n\t        this._class = options.class || config.class;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Tooltip, [{\n\t        key: 'show',\n\t        get: function get() {\n\t            return this._show;\n\t        }\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        ,\n\t        set: function set(newShow) {\n\t            if (newShow) {\n\t                this._show = newShow;\n\t            }\n\t        }\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }]);\n\t\n\t    return Tooltip;\n\t}();\n\t\n\texports.default = Tooltip;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(3);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DataAdapter = function () {\n\t    function DataAdapter(options) {\n\t        _classCallCheck(this, DataAdapter);\n\t\n\t        var self = this;\n\t\n\t        var config = {\n\t            // ALL OPTIONS AVAILABLE IN DATA CONFIG\n\t            keys: {\n\t                name: \"name\",\n\t                value: \"value\"\n\t            },\n\t            groups: [],\n\t            stacks: [],\n\t\n\t            // NO NEED TO ADD TO DATA OPTIONS\n\t            // Just use to define default parameters\n\t            colorRange: null\n\t        };\n\t\n\t        self._keys = _C2.default.merge(options.keys, config.keys);\n\t        self._groups = options.groups || config.groups;\n\t        self._stacks = options.stacks || config.stacks;\n\t        self._colorRange = options.colorRange || config.colorRange;\n\t\n\t        self._dataSource = null;\n\t        self._dataTarget = []; // Initialize new Array to use Array methods\n\t        self.initDataSource(options);\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(DataAdapter, [{\n\t        key: \"initDataSource\",\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function initDataSource(options) {\n\t            var self = this;\n\t\n\t            if (self.hasPlainData(options)) {\n\t                self.executePlainData(options);\n\t            } else if (self.hasFile(options)) {\n\t                self.executeFile(options);\n\t            }\n\t        }\n\t    }, {\n\t        key: \"hasPlainData\",\n\t        value: function hasPlainData(options) {\n\t            return options.plain && _C2.default.isArray(options.plain);\n\t        }\n\t    }, {\n\t        key: \"hasFile\",\n\t        value: function hasFile(options) {\n\t            return options.file && _C2.default.isObject(options.file);\n\t        }\n\t    }, {\n\t        key: \"executePlainData\",\n\t        value: function executePlainData(options) {\n\t            var self = this;\n\t\n\t            self._dataSource = options.plain;\n\t        }\n\t    }, {\n\t        key: \"executeFile\",\n\t        value: function executeFile(options) {\n\t            var self = this;\n\t\n\t            self._file = _C2.default.merge(options.file, config.file);\n\t\n\t            if (self._file && self._file.type) {\n\t\n\t                switch (self._file.type) {\n\t                    case \"csv\":\n\t                        self._dataSource = self.getCsv();\n\t                        break;\n\t                    case \"tsv\":\n\t                        self._dataSource = self.getTsv();\n\t                        break;\n\t                    case \"text\":\n\t                        self._dataSource = self.getText();\n\t                        break;\n\t                    case \"json\":\n\t                        self._dataSource = self.getJson();\n\t                        break;\n\t                    case \"xml\":\n\t                        self._dataSource = self.getXml();\n\t                        break;\n\t                    case \"xhr\":\n\t                        self._dataSource = self.getJson();\n\t                        break;\n\t                    default:\n\t                        self._dataSource = self.getJson();\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: \"getDataTypeForBarChart\",\n\t        value: function getDataTypeForBarChart() {\n\t            var self = this;\n\t\n\t            if (!_C2.default.isEmpty(self.groups) && _C2.default.isArray(self.groups)) {\n\t                return \"group\";\n\t            } else if (!_C2.default.isEmpty(self.stacks) && _C2.default.isArray(self.stacks)) {\n\t                return \"stack\";\n\t            }\n\t\n\t            return \"single\";\n\t        }\n\t    }, {\n\t        key: \"getDataTarget\",\n\t        value: function getDataTarget(chartType) {\n\t            var self = this;\n\t\n\t            switch (chartType) {\n\t                case \"bar\":\n\t                    return self.getDataTargetForBarChart();\n\t                    break;\n\t\n\t                case \"line\":\n\t\n\t                    break;\n\t\n\t                case \"pie\":\n\t                    return self.getDataTargetForPieChart();\n\t                    break;\n\t\n\t                case \"donut\":\n\t                    return self.getDataTargetForDonutChart();\n\t                    break;\n\t\n\t                case \"timeline\":\n\t                    return self.getDataTargetForTimelineChart();\n\t                    break;\n\t                default:\n\t                    return self.dataSource;\n\t                    break;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"getName\",\n\t        value: function getName(v) {\n\t            return v.name;\n\t        }\n\t    }, {\n\t        key: \"getValue\",\n\t        value: function getValue(v) {\n\t            var self = this;\n\t\n\t            return _C2.default.get(self.keys, v);\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /*=================================================\r\n\t        =            Normalize Data For Charts            =\r\n\t        =================================================*/\n\t\n\t    }, {\n\t        key: \"getDataTargetForBarChart\",\n\t        value: function getDataTargetForBarChart() {\n\t            var self = this;\n\t\n\t            switch (self.getDataTypeForBarChart()) {\n\t                case \"single\":\n\t                    self.dataSource.forEach(function (data, index) {\n\t                        var _stack = [];\n\t                        var _data = {\n\t                            \"max\": _C2.default.get(self.keys.value, data),\n\t                            \"stack\": [{\n\t                                \"name\": _C2.default.get(self.keys.name, data),\n\t                                \"y0\": 0,\n\t                                \"y1\": _C2.default.get(self.keys.value, data),\n\t                                \"enable\": true\n\t                            }]\n\t                        };\n\t                        self.dataTarget.push(_data);\n\t                    });\n\t\n\t                    return self.dataTarget;\n\t                    break;\n\t\n\t                case \"group\":\n\t                    var groups = self.groups;\n\t\n\t                    // Iterate over each group\n\t                    self.dataSource.forEach(function (data, index) {\n\t                        var _group = {\n\t                            \"max\": null,\n\t                            \"stack\": []\n\t                        },\n\t                            _dsArray = _C2.default.get(self.keys.value, data);\n\t\n\t                        // If Group has only 1 value, so MAX = this.value\n\t                        if (_C2.default.isArray(_dsArray)) {\n\t                            _group.max = _C2.default.max(_dsArray);\n\t                        } else {\n\t                            _group.max = _dsArray;\n\t                        }\n\t\n\t                        var _stack = [],\n\t                            _stackItem = {\n\t                            \"color\": \"#ffffff\",\n\t                            \"y0\": 0,\n\t                            \"y1\": 1,\n\t                            \"group\": \"\",\n\t                            \"name\": \"\",\n\t                            \"data-ref\": \"\",\n\t                            \"enable\": true\n\t                        },\n\t                            color = self.colorRange;\n\t\n\t                        // Iterate each single bar in a group\n\t                        if (_C2.default.isArray(_dsArray)) {\n\t                            _dsArray.forEach(function (d, i) {\n\t                                _stackItem = {\n\t                                    \"color\": color(i),\n\t                                    \"y0\": 0,\n\t                                    \"y1\": d,\n\t                                    \"group\": groups[i] || i,\n\t                                    \"name\": _C2.default.get(self.keys.name, data),\n\t                                    \"data-ref\": _C2.default.guid(),\n\t                                    \"enable\": true\n\t                                };\n\t                                _stack.push(_stackItem);\n\t                            });\n\t                        } else {\n\t                            _stackItem = {\n\t                                \"color\": color(0),\n\t                                \"y0\": 0,\n\t                                \"y1\": _dsArray,\n\t                                \"group\": groups[0] || 0,\n\t                                \"name\": _C2.default.get(self.keys.name, data),\n\t                                \"data-ref\": _C2.default.guid(),\n\t                                \"enable\": true\n\t                            };\n\t                            _stack.push(_stackItem);\n\t                        }\n\t                        _group.stack = _stack;\n\t\n\t                        self.dataTarget.push(_group);\n\t                    });\n\t\n\t                    return self.dataTarget;\n\t                    break;\n\t\n\t                case \"stack\":\n\t                    var stacks = self.stacks;\n\t\n\t                    // Iterate over each group\n\t                    self.dataSource.forEach(function (data, index) {\n\t                        var _group = {\n\t                            \"max\": null,\n\t                            \"stack\": []\n\t                        },\n\t                            _dsArray = _C2.default.get(self.keys.value, data);\n\t\n\t                        // If Group has only 1 value, so MAX = this.value\n\t                        if (_C2.default.isArray(_dsArray)) {\n\t                            _group.max = _C2.default.sum(_dsArray);\n\t                        } else {\n\t                            _group.max = _dsArray;\n\t                        }\n\t\n\t                        var _stack = [],\n\t                            _stackItem = {\n\t                            \"color\": \"#ffffff\",\n\t                            \"y0\": 0,\n\t                            \"y1\": 1,\n\t                            \"group\": \"\",\n\t                            \"name\": \"\",\n\t                            \"data-ref\": \"\",\n\t                            \"enable\": true\n\t                        },\n\t                            color = self.colorRange;\n\t\n\t                        // Iterate each single bar in a group\n\t                        if (_C2.default.isArray(_dsArray)) {\n\t                            (function () {\n\t                                var _tempY0 = 0;\n\t                                _dsArray.forEach(function (d, i) {\n\t                                    _stackItem = {\n\t                                        \"color\": color(i),\n\t                                        \"y0\": _tempY0,\n\t                                        \"y1\": _tempY0 + d,\n\t                                        \"group\": stacks[i] || i,\n\t                                        \"name\": _C2.default.get(self.keys.name, data),\n\t                                        \"data-ref\": _C2.default.guid(),\n\t                                        \"enable\": true\n\t                                    };\n\t                                    _stack.push(_stackItem);\n\t                                    // Increase tempY0 by d to restore previous y0\n\t                                    _tempY0 += d;\n\t                                });\n\t                            })();\n\t                        } else {\n\t                            _stackItem = {\n\t                                \"color\": color(0),\n\t                                \"y0\": 0,\n\t                                \"y1\": _dsArray,\n\t                                \"group\": stacks[0] || 0,\n\t                                \"name\": _C2.default.get(self.keys.name, data),\n\t                                \"data-ref\": _C2.default.guid(),\n\t                                \"enable\": true\n\t                            };\n\t                            _stack.push(_stackItem);\n\t                        }\n\t                        _group.stack = _stack;\n\t\n\t                        self.dataTarget.push(_group);\n\t                    });\n\t\n\t                    return self.dataTarget;\n\t                    break;\n\t\n\t                default:\n\t                    return self.dataSource;\n\t                    break;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"getDataTargetForPieChart\",\n\t        value: function getDataTargetForPieChart() {\n\t            var self = this;\n\t\n\t            var color = self.colorRange;\n\t            self.dataSource.forEach(function (data, index) {\n\t                var _data = {\n\t                    \"color\": color(index),\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"value\": _C2.default.get(self.keys.value, data),\n\t                    \"data-ref\": _C2.default.guid(),\n\t                    \"enable\": true\n\t                };\n\t                self.dataTarget.push(_data);\n\t            });\n\t\n\t            return self.dataTarget;\n\t        }\n\t    }, {\n\t        key: \"getDataTargetForDonutChart\",\n\t        value: function getDataTargetForDonutChart() {\n\t            var self = this;\n\t\n\t            var color = self.colorRange;\n\t            self.dataSource.forEach(function (data, index) {\n\t                var _data = {\n\t                    \"color\": color(index),\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"value\": _C2.default.get(self.keys.value, data),\n\t                    \"data-ref\": _C2.default.guid(),\n\t                    \"enable\": true\n\t                };\n\t                self.dataTarget.push(_data);\n\t            });\n\t\n\t            return self.dataTarget;\n\t        }\n\t    }, {\n\t        key: \"getDataTargetForTimelineChart\",\n\t        value: function getDataTargetForTimelineChart() {\n\t            var self = this;\n\t\n\t            var color = self.colorRange;\n\t\n\t            self.dataSource.forEach(function (data, index) {\n\t\n\t                var _data = {\n\t                    // \"color\"     : color(index),\n\t                    \"icon\": data.icon,\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"value\": [],\n\t                    \"data-ref\": _C2.default.guid(),\n\t                    \"enable\": true\n\t                };\n\t\n\t                var _dsArray = _C2.default.get(self.keys.value, data),\n\t                    _valueArray = [],\n\t                    _valueItem = {\n\t                    \"start\": null,\n\t                    \"end\": null,\n\t                    \"color\": \"#fff\",\n\t                    \"data-ref\": null,\n\t                    \"enable\": true\n\t                };\n\t\n\t                if (_C2.default.isArray(_dsArray)) {\n\t                    _dsArray.forEach(function (d, i) {\n\t                        _valueItem = {\n\t                            \"start\": d.start,\n\t                            \"end\": d.end,\n\t                            \"color\": color(index),\n\t                            \"data-ref\": _C2.default.guid(),\n\t                            \"enable\": true\n\t                        };\n\t                        _valueArray.push(_valueItem);\n\t                    });\n\t                } else {\n\t                    _valueItem = {\n\t                        \"start\": d.start,\n\t                        \"end\": d.end,\n\t                        \"color\": color(index),\n\t                        \"data-ref\": _C2.default.guid(),\n\t                        \"enable\": true\n\t                    };\n\t                    _valueArray.push(_valueItem);\n\t                }\n\t                _data.value = _valueArray;\n\t\n\t                self.dataTarget.push(_data);\n\t            });\n\t            return self.dataTarget;\n\t        }\n\t\n\t        /*=====  End of Normalize Data For Charts  ======*/\n\t\n\t        /*=============================\r\n\t        =            Utils            =\r\n\t        =============================*/\n\t        // getBarColorForBarChart() {\n\t        //     var self = this;\n\t\n\t        //     var color = self.colorRange;\n\t        //     if (typeof color == 'string') {\n\t        //         try {\n\t        //             return d3.scale[color]();    \n\t        //         }\n\t        //         catch(err) {\n\t        //             return function(i) {\n\t        //                 return color;\n\t        //             };\n\t        //         }\n\t        //     } else if (typeof color == 'object') {\n\t        //         return d3.scale.ordinal().range(color);\n\t        //     }\n\t        // }\n\t\n\t\n\t        /*=====  End of Utils  ======*/\n\t\n\t        /*=============================================\r\n\t        =            Data Input From Files            =\r\n\t        =============================================*/\n\t\n\t    }, {\n\t        key: \"getCsv\",\n\t        value: function getCsv() {\n\t\n\t            var self = this;\n\t\n\t            d3.csv(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                return data;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getTsv\",\n\t        value: function getTsv() {\n\t\n\t            var self = this;\n\t\n\t            d3.tsv(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                return data;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getText\",\n\t        value: function getText() {\n\t\n\t            var self = this;\n\t\n\t            d3.text(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                return JSON.parse(data);\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getJson\",\n\t        value: function getJson() {\n\t            var self = this;\n\t\n\t            d3.json(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                return data;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getXml\",\n\t        value: function getXml() {\n\t            var self = this;\n\t\n\t            d3.xml(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                // Convert the XML document to an array of objects.\n\t                // Note that querySelectorAll returns a NodeList, not a proper Array,\n\t                // so we must use map.call to invoke array methods.\n\t                data = [].map.call(data.querySelectorAll(\"data\"), function (d) {\n\t                    return {\n\t                        name: d.querySelector(\"name\").textContent,\n\t                        value: d.querySelector(\"value\").textContent\n\t                    };\n\t                });\n\t\n\t                return data;\n\t            });\n\t        }\n\t\n\t        /*=====  End of Data Input From Files  ======*/\n\t\n\t    }, {\n\t        key: \"keys\",\n\t        get: function get() {\n\t            return this._keys;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._keys = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"dataSource\",\n\t        get: function get() {\n\t            return this._dataSource;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataSource = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"dataTarget\",\n\t        get: function get() {\n\t            return this._dataTarget;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataTarget = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"groups\",\n\t        get: function get() {\n\t            return this._groups;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._groups = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"stacks\",\n\t        get: function get() {\n\t            return this._stacks;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._stacks = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"colorRange\",\n\t        get: function get() {\n\t            return this._colorRange;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._colorRange = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return DataAdapter;\n\t}();\n\t\n\texports.default = DataAdapter;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(2);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(4);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(5);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(6);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(8);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar DonutChart = function (_Chart) {\n\t    _inherits(DonutChart, _Chart);\n\t\n\t    function DonutChart(options) {\n\t        _classCallCheck(this, DonutChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (DonutChart.__proto__ || Object.getPrototypeOf(DonutChart)).call(this, options));\n\t\n\t        var self = _this;\n\t        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\n\t        var config = {\n\t            outerRadius: R,\n\t            innerRadius: R > 80 ? R - 80 : R - 40,\n\t            showText: true // show/hide text on middle or each donut\n\t        };\n\t\n\t        self._outerRadius = options.outerRadius || config.outerRadius;\n\t        self._innerRadius = options.innerRadius || config.innerRadius;\n\t        self._showText = options.showText || config.showText;\n\t        self.body.type = 'donut';\n\t\n\t        var dataOption = self.dataOption;\n\t        dataOption.colorRange = self.colorRange;\n\t\n\t        var da = new _C10.default(dataOption);\n\t        self.dataTarget = da.getDataTarget(\"donut\");\n\t\n\t        self.updateConfig();\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(DonutChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /**\r\n\t         * Update Donut Chart Config\r\n\t         */\n\t        value: function updateConfig() {\n\t            var self = this;\n\t\n\t            // chartInnerAfter, chartOuterAfter define easing radius of donut chart during animation\n\t            // TODO: Add configs allow users to define these radius\n\t            var width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom,\n\t                color = self.colorRange,\n\t                chartInnerBefore = self.innerRadius,\n\t                chartOuterBefore = self.outerRadius,\n\t                chartInnerAfter = self.innerRadius,\n\t                chartOuterAfter = self.outerRadius * 1.2;\n\t\n\t            var hoverOptions = self.hover.options,\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            // Define Animations for paths\n\t            self.pathAnim = function (path, dir) {\n\t                switch (dir) {\n\t\n\t                    case 'mouseover':\n\t                        path.transition().attr('d', d3.svg.arc().innerRadius(chartInnerAfter).outerRadius(chartOuterAfter))\n\t                        // .style('stroke', '#000')\n\t                        .attr('fill-opacity', '1.0');\n\t                        break;\n\t\n\t                    case 'mouseout':\n\t                        path.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerBefore).outerRadius(chartOuterBefore))\n\t                        // .style('stroke', '#000')\n\t                        .attr('fill-opacity', '0.5');\n\t                        break;\n\t\n\t                }\n\t            };\n\t\n\t            // Main Event Dispatch for paths in donut chart\n\t            self.eventFactory = {\n\t\n\t                'mouseover': function mouseover(d, i, j) {\n\t                    self.pathAnim(d3.select(this), 'mouseover');\n\t                    self.tooltip().mouseover(d);\n\t\n\t                    // var thisDonut = self.body..select('.type' + j);\n\t                    // thisDonut.select('.value').text(function(donut_d) {\n\t                    //     return d.data.val.toFixed(1) + donut_d.unit;\n\t                    // });\n\t                    // thisDonut.select('.percentage').text(function(donut_d) {\n\t                    //     return (d.data.val/donut_d.total*100).toFixed(2) + '%';\n\t                    // });\n\t                },\n\t\n\t                'mouseout': function mouseout(d, i, j) {\n\t                    self.pathAnim(d3.select(this), 'mouseout');\n\t                    self.tooltip().mouseout(d);\n\t\n\t                    // var thisDonut = charts.select('.type' + j);\n\t                    // setCenterText(thisDonut);\n\t                }\n\t\n\t            };\n\t\n\t            // Define the tooltip\n\t            // TODO: Define it as a individual CLASS, in C9.Tooltip\n\t            self.tooltip = function () {\n\t                // First, remove all before hover div\n\t                self.body.selectAll('g.c9-custom-tooltip-container').remove();\n\t\n\t                // TODO: Add margin to tooltip configs\n\t                // Default: (100, 100) relative to mouse coordinate and chart margin transformation\n\t                var divOnHover = self.body.append('g').attr('class', 'c9-custom-tooltip-container').attr(\"transform\", function () {\n\t                    return 'translate(' + (d3.mouse(this)[0] - 100) + \",\" + (d3.mouse(this)[1] - 100) + ')';\n\t                }).style('display', 'none');\n\t\n\t                var arc = d3.svg.arc().outerRadius(self.outerRadius).innerRadius(self.innerRadius);\n\t\n\t                // Rect Container\n\t                divOnHover.append('rect').attr('class', 'c9-custom-tooltip-box').attr('x', 25).attr('rx', 5).attr('ry', 5).style('position', 'absolute').style('width', '100px').style('height', '50px').attr('fill', '#FEE5E2').attr('stroke', '#FDCCC6').attr('stroke-width', 2);\n\t                // First line\n\t                var text_1 = divOnHover.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 10).style('font-family', 'sans-serif').style('font-size', '10px');\n\t                // Second line\n\t                var text_2 = divOnHover.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 20).style('font-family', 'sans-serif').style('font-size', '10px');\n\t\n\t                var tooltipEventFactory = {\n\t\n\t                    'mouseover': function mouseover(d) {\n\t                        divOnHover.transition().duration(hoverOptions.onMouseOver.fadeIn).style(\"display\", 'block');\n\t\n\t                        var name = d.data.name || d.data.data.name,\n\t                            value = d.data.value || d.data.data.value;\n\t\n\t                        text_1.text('Name: ' + name);\n\t                        text_2.text('Value: ' + value);\n\t                    },\n\t\n\t                    'mouseout': function mouseout(d) {\n\t                        divOnHover.transition().duration(hoverOptions.onMouseOut.fadeOut).style('display', 'none');\n\t                    }\n\t\n\t                };\n\t\n\t                return tooltipEventFactory;\n\t            };\n\t\n\t            self.arc = d3.svg.arc().outerRadius(self.outerRadius).innerRadius(self.innerRadius);\n\t\n\t            //we can sort data here\n\t            self.pie = d3.layout.pie().sort(null).value(function (d) {\n\t                return d.value;\n\t            });\n\t\n\t            //draw chart\n\t            var arcs = self.body.append('g').attr('class', 'c9-chart c9-custom-arc-container').attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')').selectAll('.c9-chart-donut.c9-custom-arc').data(self.pie(self.dataTarget)).enter().append('g').attr('class', 'c9-chart-donut c9-custom-arc');\n\t\n\t            // Append main path contains donut\n\t            // TODO: add a unique class to allow Legend could find selected donut/pie\n\t            arcs.append('path').attr('class', 'c9-chart-donut c9-custom-path').attr('data-ref', function (d) {\n\t                return d.data['data-ref'];\n\t            }).attr('d', self.arc).attr('fill', function (d, i) {\n\t                return color(i);\n\t            }).attr('stroke', '#ffffff').attr('fill-opacity', '0.5').each(function (d) {\n\t                self._currentData = d;\n\t            });\n\t            // Current data used for calculate interpolation \n\t            // between current arc vs disabled arc\n\t\n\t\n\t            // Append middle text display name\n\t            // if (self.showText) {\n\t            //     arcs.append('text')\n\t            //             .attr('class', 'c9-chart-donut c9-custom-text')\n\t            //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\n\t            //             .attr('dy', '.35em')\n\t            //             .attr('text-anchor', 'middle')\n\t            //             .text(function(d) { return d.data.name; });\n\t            // }\n\t        }\n\t\n\t        /**\r\n\t         * Main draw function of Donut Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t\n\t            var self = this;\n\t\n\t            var title = new _C6.default(self.options, self.body, self.width, self.height, self.margin);\n\t            var legend = new _C8.default(self.options, self.body, self.dataTarget);\n\t\n\t            // Draw legend\n\t            legend.draw();\n\t            legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\n\t\n\t            // Update interaction of this own chart\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Select all path as type PATH in Donut Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllPath',\n\t        value: function selectAllPath() {\n\t            var self = this;\n\t\n\t            return self.body\n\t            // .selectAll('g')\n\t            .selectAll('path.c9-chart-donut.c9-custom-path');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         * @return {} \r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                hoverEnable = self.hover.enable,\n\t                hoverOptions = self.hover.options,\n\t                selector = self.selectAllPath(),\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            if (hoverEnable) {\n\t                selector.on(self._eventFactory);\n\t            }\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'outerRadius',\n\t        get: function get() {\n\t            return this._outerRadius;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(newOuterRadius) {\n\t            if (newOuterRadius) {\n\t                this._outerRadius = newOuterRadius;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'innerRadius',\n\t        get: function get() {\n\t            return this._innerRadius;\n\t        },\n\t        set: function set(newInnerRadius) {\n\t            if (newInnerRadius) {\n\t                this._innerRadius = newInnerRadius;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'showText',\n\t        get: function get() {\n\t            return this._showText;\n\t        },\n\t        set: function set(newShowText) {\n\t            if (newShowText) {\n\t                this._showText = newShowText;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'eventFactory',\n\t        get: function get() {\n\t            return this._eventFactory;\n\t        },\n\t        set: function set(newEventFactory) {\n\t            if (newEventFactory) {\n\t                this._eventFactory = newEventFactory;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pathAnim',\n\t        get: function get() {\n\t            return this._pathAnim;\n\t        },\n\t        set: function set(newPathAnim) {\n\t            if (newPathAnim) {\n\t                this._pathAnim = newPathAnim;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'tooltip',\n\t        get: function get() {\n\t            return this._tooltip;\n\t        },\n\t        set: function set(newTooltip) {\n\t            if (newTooltip) {\n\t                this._tooltip = newTooltip;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pie',\n\t        get: function get() {\n\t            return this._pie;\n\t        },\n\t        set: function set(newPie) {\n\t            if (newPie) {\n\t                this._pie = newPie;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'arc',\n\t        get: function get() {\n\t            return this._arc;\n\t        },\n\t        set: function set(newArc) {\n\t            if (newArc) {\n\t                this._arc = newArc;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'currentData',\n\t        get: function get() {\n\t            return this._currentData;\n\t        },\n\t        set: function set(newCurrentData) {\n\t            if (newCurrentData) {\n\t                this._currentData = newCurrentData;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'chartType',\n\t        get: function get() {\n\t            return this._body.type;\n\t        }\n\t    }]);\n\t\n\t    return DonutChart;\n\t}(_C2.default);\n\t\n\texports.default = DonutChart;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(2);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(4);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(5);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(6);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar LineChart = function (_Chart) {\n\t    _inherits(LineChart, _Chart);\n\t\n\t    function LineChart(options) {\n\t        _classCallCheck(this, LineChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (LineChart.__proto__ || Object.getPrototypeOf(LineChart)).call(this, options));\n\t\n\t        var self = _this;\n\t        var config = {\n\t            pointShow: false,\n\t            pointFill: \"#fb8072\",\n\t            pointStroke: \"#d26b5f\",\n\t            pointOpacity: 1.0,\n\t            pointRadius: 5,\n\t            pointHoverEnable: false,\n\t            interpolate: \"linear\" // refer: https://www.dashingd3js.com/svg-paths-and-d3js\n\t        };\n\t\n\t        self._pointShow = options.pointShow || config.pointShow;\n\t        self._pointRadius = options.pointRadius || config.pointRadius;\n\t        self._pointFill = options.pointFill || config.pointFill;\n\t        self._pointStroke = options.pointStroke || config.pointStroke;\n\t        self._pointOpacity = options.pointOpacity || config.pointOpacity;\n\t        self._pointHoverEnable = options.pointHoverEnable || config.pointHoverEnable;\n\t        self._interpolate = options.interpolate || config.interpolate;\n\t        self.body.type = \"line\";\n\t\n\t        var width = self.width - self.margin.left - self.margin.right;\n\t        var height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t        var x = d3.scale.linear().range([0, width]);\n\t        var y = d3.scale.linear().range([height, 0]);\n\t\n\t        self._x = x;\n\t        self._y = y;\n\t\n\t        self.updateConfig();\n\t\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t    _createClass(LineChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        /**\r\n\t         * First init Line Chart\r\n\t         */\n\t        value: function updateConfig() {\n\t            var self = this,\n\t                x = self._x,\n\t                y = self._y;\n\t\n\t            self._dataGroup = d3.nest().key(function (d) {\n\t                return d.Client;\n\t            }).entries(self.data);\n\t\n\t            var dataGroup = self._dataGroup;\n\t\n\t            x.domain([d3.min(self.data, function (d) {\n\t                return d.year;\n\t            }), d3.max(self.data, function (d) {\n\t                return d.year;\n\t            })]);\n\t            y.domain([d3.min(self.data, function (d) {\n\t                return d.sale;\n\t            }), d3.max(self.data, function (d) {\n\t                return d.sale;\n\t            })]);\n\t\n\t            self.xAxis = d3.svg.axis().scale(x);\n\t            self.yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\t\n\t            var lineGen = d3.svg.line().x(function (d) {\n\t                return x(d.year);\n\t            }).y(function (d) {\n\t                return y(d.sale);\n\t            }).interpolate(self.interpolate);\n\t\n\t            var _body = self.body,\n\t                _colorRange = self.colorRange,\n\t                _pointShow = self.pointShow,\n\t                _pointRadius = self.pointRadius,\n\t                _pointFill = self.pointFill,\n\t                _pointStroke = self.pointStroke,\n\t                _pointOpacity = self.pointOpacity;\n\t\n\t            dataGroup.forEach(function (d, i) {\n\t                _body.append('path').attr('d', lineGen(d.values)).attr('stroke', _colorRange(i)).attr('stroke-width', 2).attr('id', 'line_' + d.key).attr('fill', 'none');\n\t\n\t                if (_pointShow) {\n\t                    _body.selectAll(\"dot\").data(d.values).enter().append(\"circle\").attr('class', 'c9-chart-line c9-circle-custom').attr(\"r\", _pointRadius).attr(\"cx\", function (_d) {\n\t                        return x(_d.year);\n\t                    }).attr(\"cy\", function (_d) {\n\t                        return y(_d.sale);\n\t                    }).style(\"fill\", _pointFill).style(\"stroke\", _pointStroke).style(\"opacity\", _pointOpacity);\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Main draw function of Line Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            var self = this;\n\t\n\t            var axis = new _C4.default(self.options, self.body, self.data, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom, self.xAxis, self.yAxis);\n\t            var title = new _C6.default(self.options, self.body, self.width, self.height, self.margin);\n\t            var legend = new _C8.default(self.options, self.body, self.colorRange, self.data);\n\t\n\t            // Draw legend\n\t            legend.draw();\n\t\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Select all circle as type CIRCLE in Line Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllCircle',\n\t        value: function selectAllCircle() {\n\t            var self = this;\n\t\n\t            return self.body.selectAll('circle.c9-chart-line.c9-circle-custom');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                hoverEnable = self.hover.enable,\n\t                hoverOptions = self.hover.options,\n\t                selector = self.selectAllCircle(),\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            if (hoverEnable) {\n\t                // Define the div for the tooltip\n\t                // TODO: Allow user to add custom DIV, CLASS\n\t                // Make sure that: \n\t                // - Rect not overflow the bar, if not, hover effect will be messed\n\t                // -> So, just align the rect to right/left (x: 25) to avoid it\n\t                // -> And, the text will be align also\n\t                var div = self.body.append('g').style('display', 'none');\n\t                // .style('opacity', 0);\n\t                // Rect Container\n\t                div.append('rect').attr('class', 'c9-custom-tooltip-box').attr('x', 25).attr('rx', 5).attr('ry', 5).style('position', 'absolute').style('width', '100px').style('height', '50px').style('fill', '#FEE5E2').style('stroke', '#FDCCC6').style('stroke-width', 2);\n\t                // First line\n\t                var text_1 = div.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 10).style('font-family', 'sans-serif').style('font-size', '10px');\n\t                // Second line\n\t                var text_2 = div.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 20).style('font-family', 'sans-serif').style('font-size', '10px');\n\t\n\t                selector.on(\"mouseover\", function (d) {\n\t                    div.transition().duration(hoverOptions.onMouseOver.fadeIn).style(\"display\", 'block').attr(\"transform\", \"translate(\" + self.x(d.year) + \",\" + self.y(d.sale) + \")\");\n\t\n\t                    text_1.text('Name: ' + d.year);\n\t                    text_2.text('Value: ' + d.sale);\n\t                }).on(\"mouseout\", function (d) {\n\t                    div.transition().duration(hoverOptions.onMouseOut.fadeOut).style(\"display\", 'none');\n\t                });\n\t            }\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'pointShow',\n\t        get: function get() {\n\t            return this._pointShow;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t\n\t        set: function set(newPointShow) {\n\t            if (newPointShow) {\n\t                this._pointShow = newPointShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pointFill',\n\t        get: function get() {\n\t            return this._pointFill;\n\t        },\n\t        set: function set(newPointFill) {\n\t            if (newPointFill) {\n\t                this._pointFill = newPointFill;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pointStroke',\n\t        get: function get() {\n\t            return this._pointStroke;\n\t        },\n\t        set: function set(newPointStroke) {\n\t            if (newPointStroke) {\n\t                this._pointStroke = newPointStroke;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pointOpacity',\n\t        get: function get() {\n\t            return this._pointOpacity;\n\t        },\n\t        set: function set(newPointOpacity) {\n\t            if (newPointOpacity) {\n\t                this._pointOpacity = newPointOpacity;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pointRadius',\n\t        get: function get() {\n\t            return this._pointRadius;\n\t        },\n\t        set: function set(newPointRadius) {\n\t            if (newPointRadius) {\n\t                this._pointRadius = newPointRadius;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pointHoverEnable',\n\t        get: function get() {\n\t            return this._pointHoverEnable;\n\t        },\n\t        set: function set(newPointHoverEnable) {\n\t            if (newPointHoverEnable) {\n\t                this._pointHoverEnable = newPointHoverEnable;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'interpolate',\n\t        get: function get() {\n\t            return this._interpolate;\n\t        },\n\t        set: function set(newInterpolate) {\n\t            if (newInterpolate) {\n\t                this._interpolate = newInterpolate;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'x',\n\t        get: function get() {\n\t            return this._x;\n\t        },\n\t        set: function set(newX) {\n\t            if (newX) {\n\t                this._x = newX;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'y',\n\t        get: function get() {\n\t            return this._y;\n\t        },\n\t        set: function set(newY) {\n\t            if (newY) {\n\t                this._y = newY;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dataGroup',\n\t        get: function get() {\n\t            return this._dataGroup;\n\t        },\n\t        set: function set(newDataGroup) {\n\t            if (newDataGroup) {\n\t                this._dataGroup = newDataGroup;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return LineChart;\n\t}(_C2.default);\n\t\n\t// Backup - LOL\n\t// var _currentDataY = this.data;\n\t//         _currentDataY.forEach(function(_currentValue,_index,_arr) {\n\t//                                     _currentDataY[_index].coordinate.sort(function(a,b) {\n\t//                                         return (a.y > b.y) ? 1 : ((b.y > a.y) ? -1 : 0);\n\t//                                     });\n\t//                                 });\n\t//         this.sortedDataY         = _currentDataY;\n\t\n\t//         // Get maximum value of coordinate {x, y}\n\t//         var tempMaxY = [];\n\t\n\t//         for (var i=0; i<this.sortedDataY.length; i++) {\n\t//             tempMaxY[i] = this.sortedDataY[i].coordinate[this.sortedDataY[i].coordinate.length - 1].y;\n\t//         }\n\t\n\t//         var _maxY = Math.max(...tempMaxY);\n\t\n\t\n\t//         var _currentDataX = this.data;\n\t//         _currentDataX.forEach(function(currentValue,index,arr) {\n\t//                                     _currentDataX[index].coordinate.sort(function(a,b) {\n\t//                                         return (a.x > b.x) ? 1 : ((b.x > a.x) ? -1 : 0);\n\t//                                     });\n\t//                                 });\n\t//         this.sortedDataX         = _currentDataX;\n\t//         var tempMaxX = [];\n\t//         for (var i=0; i<this.sortedDataX.length; i++) {\n\t//             tempMaxX[i] = this.sortedDataX[i].coordinate[this.sortedDataX[i].coordinate.length - 1].x;\n\t//         }\n\t//         var _maxX = Math.max(...tempMaxX);\n\t\n\t//         // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\n\t//         var width   = this.width - this.margin.left - this.margin.right;\n\t//         var height  = this.height - this.margin.top - this.margin.bottom;\n\t\n\t//         var x = d3.scale.linear().range([0, width]);\n\t//         var y = d3.scale.linear().range([height, 0]);\n\t\n\t//         x.domain([_maxX, 0]);\n\t//         y.domain([_maxY, 0]);\n\t\n\t//         var lineFunc = d3.svg.line()\n\t//             .x(function(d, i) { return x(d.x); })\n\t//             .y(function(d, i) { return y(d.y); })\n\t//             .interpolate(\"linear\");\n\t\n\t//         // this.body.selectAll('g')\n\t//         //         .data(this.sortedDataX)\n\t//         //         .enter()\n\t//         //         .append('path')\n\t//         //         .attr('class', 'line')\n\t//         //         .attr('d', function(d){\n\t//         //             return lineFunc(d.coordinate);\n\t//         //         });\n\t//         this.body.selectAll('dot')\n\t//                 .data(this.sortedDataX)\n\t//                 .selectAll('dot')\n\t//                 .data(function(d,i) {return d;})\n\t//                 .enter()\n\t//                 .append(\"circle\")\n\t//                 .attr(\"r\", 3.5)\n\t//                 .attr(\"cx\", function(d, i) { console.log(d, i); return x(d.coordinate[i].x); })\n\t//                 .attr(\"cy\", function(d, i) { console.log(d, i); return y(d.coordinate[i].y); });\n\t\n\t\n\texports.default = LineChart;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(2);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(4);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(5);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(6);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(12);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(8);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PieChart = function (_Chart) {\n\t    _inherits(PieChart, _Chart);\n\t\n\t    function PieChart(options) {\n\t        _classCallCheck(this, PieChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (PieChart.__proto__ || Object.getPrototypeOf(PieChart)).call(this, options));\n\t\n\t        var self = _this;\n\t\n\t        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\n\t        var config = {\n\t            radius: R,\n\t            showText: true\n\t        };\n\t\n\t        self._radius = options.radius || config.radius;\n\t        self._showText = options.showText || config.showText;\n\t\n\t        self.body.type = 'pie';\n\t\n\t        var dataOption = self.dataOption;\n\t        dataOption.colorRange = self.colorRange;\n\t\n\t        var da = new _C12.default(dataOption);\n\t        self.dataTarget = da.getDataTarget(\"pie\");\n\t\n\t        self.updateConfig();\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(PieChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /**\r\n\t         * Update Donut Chart Config\r\n\t         */\n\t        value: function updateConfig() {\n\t            var self = this;\n\t\n\t            // chartInnerAfter, chartOuterAfter define easing radius of pie chart during animation\n\t            // TODO: Add configs allow users to define these radius\n\t            var width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom,\n\t                color = self.colorRange,\n\t                chartInnerBefore = 0,\n\t                chartOuterBefore = self.radius,\n\t                chartInnerAfter = 0,\n\t                chartOuterAfter = self.radius * 1.2;\n\t\n\t            var hoverOptions = self.hover.options,\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            // Define Animations for paths\n\t            self.pathAnim = function (path, dir) {\n\t                switch (dir) {\n\t\n\t                    case 'mouseover':\n\t                        path.transition().attr('d', d3.svg.arc().innerRadius(chartInnerAfter).outerRadius(chartOuterAfter))\n\t                        // .style('stroke', '#FFFFF3')\n\t                        .attr('fill-opacity', '1.0');\n\t                        break;\n\t\n\t                    case 'mouseout':\n\t                        path.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerBefore).outerRadius(chartOuterBefore))\n\t                        // .style('stroke', '#ffffff')\n\t                        .attr('fill-opacity', '0.5');\n\t                        break;\n\t                }\n\t            };\n\t\n\t            // Main Event Dispatch for paths in pie chart\n\t            self.eventFactory = {\n\t\n\t                'mouseover': function mouseover(d, i, j) {\n\t                    self.pathAnim(d3.select(this), 'mouseover');\n\t                    self.tooltip().mouseover(d);\n\t\n\t                    // var thisDonut = self.body..select('.type' + j);\n\t                    // thisDonut.select('.value').text(function(pie_d) {\n\t                    //     return d.data.val.toFixed(1) + pie_d.unit;\n\t                    // });\n\t                    // thisDonut.select('.percentage').text(function(pie_d) {\n\t                    //     return (d.data.val/pie_d.total*100).toFixed(2) + '%';\n\t                    // });\n\t                },\n\t\n\t                'mouseout': function mouseout(d, i, j) {\n\t                    self.pathAnim(d3.select(this), 'mouseout');\n\t                    self.tooltip().mouseout(d);\n\t\n\t                    // var thisDonut = charts.select('.type' + j);\n\t                    // setCenterText(thisDonut);\n\t                }\n\t\n\t            };\n\t\n\t            // Define the tooltip\n\t            // TODO: Define it as a individual CLASS, in C9.Tooltip\n\t            self.tooltip = function () {\n\t                // First, remove all before hover div\n\t                self.body.selectAll('g.c9-custom-tooltip-container').remove();\n\t\n\t                // TODO: Add margin to tooltip configs\n\t                // Default: (100, 100) relative to mouse coordinate and chart margin transformation\n\t                var divOnHover = self.body.append('g').attr('class', 'c9-custom-tooltip-container').attr(\"transform\", function () {\n\t                    return 'translate(' + (d3.mouse(this)[0] - 100) + \",\" + (d3.mouse(this)[1] - 100) + ')';\n\t                }).style('display', 'none');\n\t\n\t                var arc = d3.svg.arc().innerRadius(0).outerRadius(self.radius);\n\t\n\t                // Rect Container\n\t                divOnHover.append('rect').attr('class', 'c9-custom-tooltip-box').attr('x', 25).attr('rx', 5).attr('ry', 5).style('position', 'absolute').style('width', '100px').style('height', '50px').style('fill', '#FEE5E2').style('stroke', '#FDCCC6').style('stroke-width', 2);\n\t                // First line\n\t                var text_1 = divOnHover.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 10).style('font-family', 'sans-serif').style('font-size', '10px');\n\t                // Second line\n\t                var text_2 = divOnHover.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 20).style('font-family', 'sans-serif').style('font-size', '10px');\n\t\n\t                var tooltipEventFactory = {\n\t\n\t                    'mouseover': function mouseover(d) {\n\t                        divOnHover.transition().duration(hoverOptions.onMouseOver.fadeIn).style(\"display\", 'block');\n\t\n\t                        var name = d.data.name || d.data.data.name,\n\t                            value = d.data.value || d.data.data.value;\n\t\n\t                        text_1.text('Name: ' + name);\n\t                        text_2.text('Value: ' + value);\n\t                    },\n\t\n\t                    'mouseout': function mouseout(d) {\n\t                        divOnHover.transition().duration(hoverOptions.onMouseOut.fadeOut).style('display', 'none');\n\t                    }\n\t\n\t                };\n\t\n\t                return tooltipEventFactory;\n\t            };\n\t\n\t            self.arc = d3.svg.arc().innerRadius(0).outerRadius(self.radius);\n\t\n\t            //we can sort data here\n\t            self.pie = d3.layout.pie().sort(null).value(function (d) {\n\t                return d.value;\n\t            });\n\t\n\t            //draw chart\n\t            var arcs = self.body.append('g').attr('class', 'c9-chart c9-custom-arc-container').attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')').selectAll('.c9-chart-pie.c9-custom-arc').data(self.pie(self.dataTarget)).enter().append('g').attr('class', 'c9-chart-pie c9-custom-arc');\n\t\n\t            // Append main path contains pie\n\t            arcs.append('path').attr('class', 'c9-chart-pie c9-custom-path').attr('data-ref', function (d) {\n\t                return d.data['data-ref'];\n\t            }).attr('d', self.arc).attr('fill', function (d, i) {\n\t                return color(i);\n\t            }).attr('stroke', '#ffffff').attr('fill-opacity', '0.5').each(function (d) {\n\t                self._currentData = d;\n\t            });\n\t            // Current data used for calculate interpolation \n\t            // between current arc vs disabled arc\n\t\n\t\n\t            // Append middle text display name\n\t            // if (self.showText) {\n\t            //     arcs.append('text')\n\t            //             .attr('class', 'c9-chart-pie c9-custom-text')\n\t            //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\n\t            //             .attr('dy', '.35em')\n\t            //             .attr('text-anchor', 'middle')\n\t            //             .text(function(d) { return d.data.name; });\n\t            // }\n\t        }\n\t\n\t        /**\r\n\t         * Main draw function of Donut Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t\n\t            var self = this;\n\t\n\t            var title = new _C6.default(self.options, self.body, self.width, self.height, self.margin);\n\t            var legend = new _C8.default(self.options, self.body, self.dataTarget);\n\t            var table = new _C10.default(self.options.table, self.body, self.dataTarget);\n\t\n\t            // Draw legend\n\t            legend.draw();\n\t            legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\n\t\n\t            // Draw table\n\t            table.draw();\n\t\n\t            // Update interaction of this own chart\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Select all path as type PATH in Donut Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllPath',\n\t        value: function selectAllPath() {\n\t            var self = this;\n\t\n\t            return self.body\n\t            // .selectAll('g')\n\t            .selectAll('path.c9-chart-pie.c9-custom-path');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         * @return {} \r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                hoverEnable = self.hover.enable,\n\t                hoverOptions = self.hover.options,\n\t                selector = self.selectAllPath(),\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            if (hoverEnable) {\n\t                selector.on(self.eventFactory);\n\t            }\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'radius',\n\t        get: function get() {\n\t            return this._radius;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(newradius) {\n\t            if (newradius) {\n\t                this._radius = newradius;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'showText',\n\t        get: function get() {\n\t            return this._showText;\n\t        },\n\t        set: function set(newShowText) {\n\t            if (newShowText) {\n\t                this._showText = newShowText;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'eventFactory',\n\t        get: function get() {\n\t            return this._eventFactory;\n\t        },\n\t        set: function set(newEventFactory) {\n\t            if (newEventFactory) {\n\t                this._eventFactory = newEventFactory;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pathAnim',\n\t        get: function get() {\n\t            return this._pathAnim;\n\t        },\n\t        set: function set(newPathAnim) {\n\t            if (newPathAnim) {\n\t                this._pathAnim = newPathAnim;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'tooltip',\n\t        get: function get() {\n\t            return this._tooltip;\n\t        },\n\t        set: function set(newTooltip) {\n\t            if (newTooltip) {\n\t                this._tooltip = newTooltip;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pie',\n\t        get: function get() {\n\t            return this._pie;\n\t        },\n\t        set: function set(newPie) {\n\t            if (newPie) {\n\t                this._pie = newPie;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'arc',\n\t        get: function get() {\n\t            return this._arc;\n\t        },\n\t        set: function set(newArc) {\n\t            if (newArc) {\n\t                this._arc = newArc;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'currentData',\n\t        get: function get() {\n\t            return this._currentData;\n\t        },\n\t        set: function set(newCurrentData) {\n\t            if (newCurrentData) {\n\t                this._currentData = newCurrentData;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'chartType',\n\t        get: function get() {\n\t            return this._body.type;\n\t        }\n\t    }]);\n\t\n\t    return PieChart;\n\t}(_C2.default);\n\t\n\texports.default = PieChart;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(3);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Table = function () {\n\t    function Table(options, body, data) {\n\t        _classCallCheck(this, Table);\n\t\n\t        var config = {\n\t            container: \"body\",\n\t            show: false,\n\t            headings: [\"Name\", \"Value\"],\n\t            style: \"default\", // \"strip\", \"border\"\n\t            serial: true,\n\t            hover: {\n\t                enable: true,\n\t                callback: null\n\t            },\n\t            click: {\n\t                enable: true,\n\t                callback: null\n\t            }\n\t        };\n\t\n\t        var self = this;\n\t\n\t        self._container = options.container || config.container;\n\t        self._show = options.show ? options.show : config.show;\n\t        self._headings = options.headings || config.headings;\n\t        self._style = options.style || config.style;\n\t        self._serial = options.serial || config.serial;\n\t        self._hover = _C2.default.merge(options.hover, config.hover);\n\t        self._click = _C2.default.merge(options.click, config.click);\n\t\n\t        self._data = data;\n\t        self._body = body;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Table, [{\n\t        key: 'draw',\n\t\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function draw() {\n\t            var self = this;\n\t\n\t            if (self.show) {\n\t\n\t                var table = d3.select(self.container).append(\"table\");\n\t                var thead = table.append(\"thead\");\n\t                var tbody = table.append(\"tbody\");\n\t\n\t                // Append the headers\n\t                thead.append(\"tr\").selectAll(\"th\").append(\"th\").text(\"No\").data(self.headings).enter().append(\"th\").text(function (d) {\n\t                    return d;\n\t                });\n\t\n\t                // Bind each statistic to a line of the table\n\t                // Show serial no.\n\t                var rows = tbody.selectAll(\"tr\").data(self.data).enter().append(\"tr\");\n\t\n\t                rows.append(\"td\").text(function (d, i) {\n\t                    return i + 1;\n\t                });\n\t\n\t                // Add statistic names to each row\n\t                rows.append(\"td\").text(function (d) {\n\t                    return d.name;\n\t                });\n\t\n\t                // Add values to each row\n\t                rows.append(\"td\").text(function (d) {\n\t                    return d.value;\n\t                });\n\t            }\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'data',\n\t        get: function get() {\n\t            return this._data;\n\t        },\n\t\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._data = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'body',\n\t        get: function get() {\n\t            return this._body;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._body = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'container',\n\t        get: function get() {\n\t            return this._container;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._container = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'show',\n\t        get: function get() {\n\t            return this._show;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._show = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'headings',\n\t        get: function get() {\n\t            return this._headings;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._headings = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'style',\n\t        get: function get() {\n\t            return this._style;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._style = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'serial',\n\t        get: function get() {\n\t            return this._serial;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._serial = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'hover',\n\t        get: function get() {\n\t            return this._hover;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._hover = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'click',\n\t        get: function get() {\n\t            return this._click;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._click = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Table;\n\t}();\n\t\n\texports.default = Table;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(2);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(4);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(5);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(6);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(3);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(8);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar TimeLine = function (_Chart) {\n\t    _inherits(TimeLine, _Chart);\n\t\n\t    function TimeLine(options) {\n\t        _classCallCheck(this, TimeLine);\n\t\n\t        var _this = _possibleConstructorReturn(this, (TimeLine.__proto__ || Object.getPrototypeOf(TimeLine)).call(this, options));\n\t\n\t        var self = _this;\n\t\n\t        var config = {\n\t            rowSeparator: \"rgb(154, 154, 154)\",\n\t            backgroundColor: null,\n\t            starting: 0,\n\t            ending: 0,\n\t            stack: false, //test\n\t            // rotateTicks: false,\n\t            itemHeight: 25,\n\t            itemMargin: 20,\n\t            labelMargin: 20,\n\t            striped: null\n\t        };\n\t\n\t        self.body.type = \"timeline\";\n\t        self._stack = options.stack || config.stack;\n\t        self._starting = options.starting || config.starting;\n\t        self._ending = options.ending || config.ending;\n\t        self._rowSeparator = options.rowSeparator || config.rowSeparator;\n\t        self._backgroundColor = options.backgroundColor || config.backgroundColor;\n\t        self._itemHeight = options.itemHeight || config.itemHeight;\n\t        self._itemMargin = options.itemMargin || config.itemMargin;\n\t        self._labelMargin = options.labelMargin || config.labelMargin;\n\t        self._maxStack = 1;\n\t        self._striped = options.striped || config.striped;\n\t\n\t        var dataOption = self.dataOption;\n\t        dataOption.colorRange = self.colorRange;\n\t\n\t        var da = new _C12.default(dataOption);\n\t        self.dataTarget = da.getDataTarget(\"timeline\");\n\t\n\t        self.initTimelineConfig();\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(TimeLine, [{\n\t        key: 'initTimelineConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        value: function initTimelineConfig() {\n\t            var self = this;\n\t            var color = self.colorRange;\n\t            var stackList = {},\n\t                maxStack = 0,\n\t                minTime = 0,\n\t                maxTime = 0,\n\t                width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t            // count number of stack and calculate min time, max time from data\n\t            if (self.stack || self.ending === 0 || self.starting === 0) {\n\t\n\t                self.dataTarget.forEach(function (datum, index) {\n\t\n\t                    if (self.stack && Object.keys(stackList).indexOf(index) == -1) {\n\t                        stackList[index] = maxStack;\n\t                        maxStack++;\n\t                    }\n\t\n\t                    datum.value.forEach(function (time, i) {\n\t                        if (self.starting === 0) if (time.start < minTime || minTime === 0) minTime = time.start;\n\t                        if (self.ending === 0) {\n\t                            if (time.start > maxTime) maxTime = time.start;\n\t                            if (time.end > maxTime) maxTime = time.end;\n\t                        }\n\t                    });\n\t                });\n\t\n\t                if (self.ending === 0) {\n\t                    self.ending = maxTime;\n\t                }\n\t                if (self.starting === 0) {\n\t                    self.starting = minTime;\n\t                }\n\t            }\n\t\n\t            self.maxStack = maxStack;\n\t            var scale = width / (self.ending - self.starting);\n\t\n\t            //draw border\n\t            self.body.append(\"rect\").attr(\"class\", \"timeline-border-bar\").attr(\"x\", 0).attr(\"width\", width).attr(\"y\", 0 - self.itemMargin / 2).attr(\"height\", (self.itemHeight + self.itemMargin) * self.dataTarget.length).attr(\"stroke\", \"rgb(154, 154, 154)\").attr(\"stroke-width\", 2).attr(\"fill\", \"none\");\n\t\n\t            self.dataTarget.forEach(function (datum, index) {\n\t                var data = datum.value;\n\t\n\t                //draw background\n\t                if (self.backgroundColor) {\n\t                    var barYAxis = (self.itemHeight + self.itemMargin) * stackList[index];\n\t                    self.body.selectAll(\"g\").data(data).enter().insert(\"rect\").attr(\"class\", \"timeline-background-bar\").attr(\"x\", 0).attr(\"width\", width).attr(\"y\", barYAxis - self.itemMargin / 2).attr(\"height\", self.itemHeight + self.itemMargin).attr(\"fill\", _C10.default.isArray(self.backgroundColor) ? self.backgroundColor[index % (self.maxStack - 1)] : self.backgroundColor);\n\t                }\n\t\n\t                if (self.striped) {\n\t                    var barYAxis = (self.itemHeight + self.itemMargin) * stackList[index];\n\t                    self.body.selectAll(\"g\").data(data).enter().insert(\"rect\").attr(\"class\", \"timeline-background-bar\").attr(\"x\", 0).attr(\"width\", width).attr(\"y\", barYAxis - self.itemMargin / 2).attr(\"height\", self.itemHeight + self.itemMargin).attr(\"fill\", index % 2 ? \"rgb(255, 255, 255)\" : \"rgb(230, 230, 230)\");\n\t                }\n\t\n\t                //draw item\n\t                self.body.selectAll(\"g\").data(data).enter().append(function (d, i) {\n\t                    return document.createElementNS(d3.ns.prefix.svg, d.end ? \"rect\" : \"circle\");\n\t                }).attr(\"x\", getXPos).attr(\"y\", getStackPosition).attr(\"width\", function (d, i) {\n\t                    return (d.end - d.start) * scale;\n\t                }).attr(\"cy\", function (d, i) {\n\t                    return getStackPosition(d, i) + self.itemHeight / 2;\n\t                }).attr(\"cx\", getXPos).attr(\"r\", self.itemHeight / 2).attr(\"height\", self.itemHeight).style(\"fill\", color(index));\n\t\n\t                //draw label inside item\n\t                // self.body.selectAll(\"g\")\n\t                //     .data(data).enter()\n\t                //     .append(\"text\")\n\t                //     .attr(\"x\", getXTextPos)\n\t                //     .attr(\"y\", getStackTextPosition)\n\t                //     .text(function(d) {\n\t                //       return d.name;\n\t                //     });\n\t\n\t                if (self.rowSeparator && index < self.maxStack - 1) {\n\t                    var lineYAxis = self.itemHeight + self.itemMargin / 2 + (self.itemHeight + self.itemMargin) * stackList[index];\n\t                    self.body.append(\"svg:line\").attr(\"class\", \"timeline-row-separator\").attr(\"x1\", 0).attr(\"x2\", width).attr(\"y1\", lineYAxis).attr(\"y2\", lineYAxis).attr(\"stroke-width\", 3).attr(\"stroke\", _C10.default.isArray(self.rowSeparator) ? self.rowSeparator[index % (self.maxStack - 1)] : self.rowSeparator);\n\t                }\n\t\n\t                //draw the label left side item\n\t                if (!_C10.default.isEmpty(datum.name) && datum.name != \"\") {\n\t                    var rowsDown = self.margin.top + (self.itemHeight + self.itemMargin) * (stackList[index] === undefined ? 0 : stackList[index]) + self.itemHeight * 0.75;\n\t\n\t                    d3.select(self.body[0][0].parentNode).append(\"text\").attr(\"class\", \"timeline-label\").attr(\"transform\", \"translate(\" + self.labelMargin + \",\" + rowsDown + \")\").text(datum.name);\n\t                }\n\t                //draw icon\n\t                else if (!_C10.default.isEmpty(datum.icon) && datum.icon != \"\") {\n\t                        d3.select(self.body[0][0].parentNode).append(\"image\").attr(\"class\", \"timeline-label\").attr(\"transform\", \"translate(\" + self.labelMargin + \",\" + (self.margin.top + (self.itemHeight + self.itemMargin) * stackList[index]) + \")\").attr(\"xlink:href\", datum.icon).attr(\"width\", self.itemHeight).attr(\"height\", self.itemHeight);\n\t                    }\n\t\n\t                function getStackPosition(d, i) {\n\t                    if (self.stack) {\n\t                        return (self.itemHeight + self.itemMargin) * stackList[index];\n\t                    }\n\t                    return 0;\n\t                }\n\t                function getStackTextPosition(d, i) {\n\t                    if (self.stack) {\n\t                        return (self.itemHeight + self.itemMargin) * stackList[index] + self.itemHeight * 0.75;\n\t                    }\n\t                    return self.itemHeight * 0.75;\n\t                }\n\t            });\n\t\n\t            function getXPos(d, i) {\n\t                return (d.start - self.starting) * scale;\n\t            }\n\t\n\t            function getXTextPos(d, i) {\n\t                return (d.start - self.starting) * scale + 5;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            this.options.starting = this.starting;\n\t            this.options.ending = this.ending;\n\t            // var axis    = new Axis(this.options, this.body, this.dataTarget, this.width - this.margin.left - this.margin.right, (this.itemHeight + this.itemMargin) * this.maxStack, null, null);\n\t            var title = new _C6.default(this.options, this.body, this.width, this.height, this.margin);\n\t            var legend = new _C8.default(this.options, this.body, this.colorRange, this.dataTarget);\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'stack',\n\t        get: function get() {\n\t            return this._stack;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(newStack) {\n\t            if (newStack) {\n\t                this._stacked = newStack;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'backgroundColor',\n\t        get: function get() {\n\t            return this._backgroundColor;\n\t        },\n\t        set: function set(newBackgroundColor) {\n\t            if (newBackgroundColor) {\n\t                this._backgroundColor = newBackgroundColor;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'rowSeparator',\n\t        get: function get() {\n\t            return this._rowSeparator;\n\t        },\n\t        set: function set(newRowSeparator) {\n\t            if (newRowSeparator) {\n\t                this._rowSeparator = newRowSeparator;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'starting',\n\t        get: function get() {\n\t            return this._starting;\n\t        },\n\t        set: function set(newStarting) {\n\t            if (newStarting) {\n\t                this._starting = newStarting;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'ending',\n\t        get: function get() {\n\t            return this._ending;\n\t        },\n\t        set: function set(newEnding) {\n\t            if (newEnding) {\n\t                this._ending = newEnding;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'itemHeight',\n\t        get: function get() {\n\t            return this._itemHeight;\n\t        },\n\t        set: function set(newItemHeight) {\n\t            if (newItemHeight) {\n\t                this._itemHeight = newItemHeight;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'itemMargin',\n\t        get: function get() {\n\t            return this._itemMargin;\n\t        },\n\t        set: function set(newItemMargin) {\n\t            if (newItemMargin) {\n\t                this._itemMargin = newItemMargin;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'labelMargin',\n\t        get: function get() {\n\t            return this._labelMargin;\n\t        },\n\t        set: function set(newLabelMargin) {\n\t            if (newLabelMargin) {\n\t                this._labelMargin = newLabelMargin;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'maxStack',\n\t        get: function get() {\n\t            return this._maxStack;\n\t        },\n\t        set: function set(newMaxStack) {\n\t            if (newMaxStack) {\n\t                this._maxStack = newMaxStack;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'striped',\n\t        get: function get() {\n\t            return this._striped;\n\t        },\n\t        set: function set(newStriped) {\n\t            if (newStriped) {\n\t                this._striped = newStriped;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return TimeLine;\n\t}(_C2.default);\n\t\n\texports.default = TimeLine;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Map = function () {\n\t    function Map(options) {\n\t        _classCallCheck(this, Map);\n\t\n\t        var self = this;\n\t        var config = {\n\t            // container\n\t            id: \"body\",\n\t\n\t            // Layers:\n\t            // BingMaps, OSM, Raster, Tile, TileImage, Vector, VectorTile,...\n\t            // REF: http://openlayers.org/en/latest/apidoc/ol.source.html?stableonly=true\n\t            layers: {\n\t                type: \"Tile\",\n\t                source: {\n\t                    name: \"OSM\"\n\t                }\n\t            },\n\t            view: {\n\t                lat: 0,\n\t                lon: 0,\n\t                zoom: 2\n\t            }\n\t        };\n\t\n\t        self._id = options.id || config.id;\n\t        self._data = options.data || config.data;\n\t        self._view = options.view || config.view;\n\t        self._markers = options.markers || [];\n\t        self._options = options;\n\t        self._layers = options.layers || config.layers;\n\t        self.initMapConfig();\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t    _createClass(Map, [{\n\t        key: \"initMapConfig\",\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        value: function initMapConfig() {\n\t            var self = this;\n\t\n\t            //c9Layers contain all layers\n\t            self.c9Layers = [];\n\t            //c9Markers contain all markers\n\t            self.c9Markers = new ol.source.Vector({});\n\t\n\t            //init all thing relating to user's data\n\t\n\t            //layer\n\t            self.initLayer();\n\t\n\t            //quick markers\n\t            self.initMarker();\n\t        }\n\t    }, {\n\t        key: \"draw\",\n\t        value: function draw() {\n\t            var self = this;\n\t            self.c9View = new ol.View({\n\t                center: ol.proj.fromLonLat([self.view.lon, self.view.lat]),\n\t                zoom: self.view.zoom > 2 ? self.view.zoom : 2,\n\t                minZoom: 2\n\t            });\n\t            self.c9Map = new ol.Map({\n\t                target: self.id,\n\t                layers: self.c9Layers,\n\t                view: self.c9View,\n\t                interactions: ol.interaction.defaults({ doubleClickZoom: false })\n\t            });\n\t\n\t            //TODO - Create a function to gather all these event function\n\t            self.updateInteraction();\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /**\r\n\t         * Create layer\r\n\t         * @param  {String} type of layer\r\n\t         * @param  {source} source data defined by C9\r\n\t         */\n\t\n\t    }, {\n\t        key: \"createLayer\",\n\t        value: function createLayer(type) {\n\t            var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\t\n\t            var self = this;\n\t            var layer = new ol.layer[type]();\n\t            layer.setSource(self.setupSource(source));\n\t            self.c9Layers.push(layer);\n\t        }\n\t\n\t        /**\r\n\t         * Init Layer base on first user's data\r\n\t         */\n\t\n\t    }, {\n\t        key: \"initLayer\",\n\t        value: function initLayer() {\n\t            var self = this;\n\t            var layers = self.layers;\n\t\n\t            if (layers instanceof Array) {\n\t                layers.forEach(function (l, i) {\n\t                    self.createLayer(l.type, l.source);\n\t                });\n\t            } else {\n\t                self.createLayer(layers.type, layers.source);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Create marker style\r\n\t         * @param  {String} image source\r\n\t         * @param  {Number} scale\r\n\t         * @return {ol.style.Style} return marker style\r\n\t         */\n\t\n\t    }, {\n\t        key: \"createMarkerStyle\",\n\t        value: function createMarkerStyle(imgSrc, scale) {\n\t            return new ol.style.Style({\n\t                image: new ol.style.Icon({\n\t                    anchor: [0.5, 1], //middle-width and bottom-height of image\n\t                    src: imgSrc,\n\t                    scale: scale\n\t                })\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Create marker\r\n\t         * @param  {Number} latitude of marker\r\n\t         * @param  {Number} longitude of marker\r\n\t         * @param  {String} image source (support for both local and net)\r\n\t         * @param  {Number} scale image if its size is too large - default = 1\r\n\t         */\n\t\n\t    }, {\n\t        key: \"createMarker\",\n\t        value: function createMarker(lat, lon) {\n\t            var imgSrc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'http://s21.postimg.org/blklb8scn/marker_icon.png';\n\t            var scale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\t\n\t            var self = this;\n\t\n\t            var marker = new ol.Feature({\n\t                type: 'c9GeoMarker',\n\t                geometry: new ol.geom.Point(ol.proj.fromLonLat([lon, lat]))\n\t            });\n\t            marker.setStyle(self.createMarkerStyle(imgSrc, scale));\n\t\n\t            //add this marker to marker list (c9Markers)\n\t            self.c9Markers.addFeature(marker);\n\t        }\n\t\n\t        /**\r\n\t         * marker first set up\r\n\t         */\n\t\n\t    }, {\n\t        key: \"initMarker\",\n\t        value: function initMarker() {\n\t            var self = this;\n\t            //data\n\t            var markers = self.markers;\n\t            //add marker layer to layer list (c9Layers)\n\t            self.c9Layers.push(new ol.layer.Vector({\n\t                source: self.c9Markers\n\t            }));\n\t\n\t            if (markers.length === 0) return;\n\t\n\t            if (markers instanceof Array) {\n\t                markers.forEach(function (m, i) {\n\t                    self.createMarker(m.lat, m.lon, m.img, m.scale);\n\t                });\n\t            } else {\n\t                self.createMarker(markers.lat, markers.lon, markers.img, markers.scale);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Setup source for layer\r\n\t         * @param  {Object} source data style defined by c9\r\n\t         * @return {String} return source (ol.source)\r\n\t         */\n\t\n\t    }, {\n\t        key: \"setupSource\",\n\t        value: function setupSource(s) {\n\t            var source = undefined;\n\t            switch (s.name) {\n\t                case 'BingMaps':\n\t                    source = new ol.source.BingMaps({\n\t                        key: s.key,\n\t                        imagerySet: s.imagerySet || 'Road'\n\t                    });\n\t                    break;\n\t                case 'Stamen':\n\t                    source = new ol.source.Stamen({\n\t                        layer: s.layer || 'watercolor'\n\t                    });\n\t                    break;\n\t                /********** TileJSON require ol >= v3.8.2 **********/\n\t                case 'TileJSON':\n\t                    source = new ol.source.TileJSON({\n\t                        url: s.url,\n\t                        crossOrigin: s.crossOrigin || 'anonymous'\n\t                    });\n\t                    break;\n\t                case 'TileArcGISRest':\n\t                    source = new ol.source.TileArcGISRest({\n\t                        url: s.url\n\t                    });\n\t                    break;\n\t                case 'Vector':\n\t                    source = new ol.source.Vector({\n\t                        url: s.url,\n\t                        format: s.format === undefined ? null : new ol.format[s.format]({\n\t                            extractStyles: s.extractStyles || false\n\t                        })\n\t                    });\n\t                    break;\n\t                case 'Cluster':\n\t                    source = new ol.source.Cluster({\n\t                        distance: s.distance || 20,\n\t                        source: this.setupSource(s.source)\n\t                    });\n\t                    break;\n\t                case 'ImageVector':\n\t                    source = new ol.source.ImageVector({\n\t                        source: this.setupSource(s.source)\n\t                    });\n\t                    break;\n\t                default:\n\t                    source = new ol.source.OSM();\n\t                    break;\n\t\n\t            }\n\t            return source;\n\t        }\n\t\n\t        /**\r\n\t         * Create marker's flash effect\r\n\t         * @param  {ol.Feature}\r\n\t         */\n\t\n\t    }, {\n\t        key: \"createMarkerEffect\",\n\t        value: function createMarkerEffect(feature) {\n\t            var self = this;\n\t            var duration = 3000;\n\t            var start = new Date().getTime();\n\t            var listenerKey;\n\t\n\t            function animate(event) {\n\t                var vectorContext = event.vectorContext;\n\t                var frameState = event.frameState;\n\t                var flashGeom = feature.getGeometry().clone();\n\t                var elapsed = frameState.time - start;\n\t                var elapsedRatio = elapsed / duration;\n\t                // radius will be 5 at start and 30 at end.\n\t                var radius = ol.easing.easeOut(elapsedRatio) * 25 + 5;\n\t                var opacity = ol.easing.easeOut(1 - elapsedRatio);\n\t\n\t                var style = new ol.style.Style({\n\t                    image: new ol.style.Circle({\n\t                        radius: radius,\n\t                        snapToPixel: false,\n\t                        stroke: new ol.style.Stroke({\n\t                            color: 'rgba(255, 0, 0, ' + opacity + ')',\n\t                            width: 0.25 + opacity\n\t                        })\n\t                    })\n\t                });\n\t\n\t                vectorContext.setStyle(style);\n\t                vectorContext.drawGeometry(flashGeom);\n\t                if (elapsed > duration) {\n\t                    ol.Observable.unByKey(listenerKey);\n\t                    return;\n\t                }\n\t                // tell OL3 to continue postcompose animation\n\t                self.c9Map.render();\n\t            }\n\t            listenerKey = self.c9Map.on('postcompose', animate);\n\t        }\n\t    }, {\n\t        key: \"updateInteraction\",\n\t        value: function updateInteraction() {\n\t            var self = this;\n\t            var LEFT_KEY = 37,\n\t                RIGHT_KEY = 39,\n\t                DURATION = 1000,\n\t                LOAD_MAP_DELAY = 500;\n\t\n\t            var getCoordinatesLonLat = function getCoordinatesLonLat(f) {\n\t                return ol.proj.transform(f.getGeometry().getCoordinates(), 'EPSG:3857', 'EPSG:4326');\n\t            };\n\t            var getCoordinates = function getCoordinates(f) {\n\t                return f.getGeometry().getCoordinates();\n\t            };\n\t            var transformCoordinates = function transformCoordinates(c) {\n\t                return ol.proj.transform(c, 'EPSG:3857', 'EPSG:4326');\n\t            };\n\t            var panAnimation = function panAnimation(f) {\n\t                var pan = ol.animation.pan({\n\t                    duration: DURATION,\n\t                    source: self.c9View.getCenter()\n\t                });\n\t                self.c9Map.beforeRender(pan);\n\t                self.c9View.setCenter(getCoordinates(f));\n\t            };\n\t            /**\r\n\t             * Caculate distance between marker and center view, plus direction compare with center\r\n\t             * @param  {ol.Feature}\r\n\t             * @return {[Number, Boolean]} Array of distance value and direction value (left if true, right if false)\r\n\t             */\n\t            var distanceAndDirection = function distanceAndDirection(f) {\n\t                var center = transformCoordinates(self.c9View.getCenter());\n\t                var fCoordinates = getCoordinatesLonLat(f);\n\t                return [Math.sqrt(Math.pow(fCoordinates[0] - center[0], 2) + Math.pow(fCoordinates[1] - center[1], 2)), fCoordinates[0] - center[0] <= 0];\n\t            };\n\t            //register pointer move event to show cursor as pointer if user hover on markers\n\t            self.c9Map.on('pointermove', function (evt) {\n\t                self.c9Map.getTargetElement().style.cursor = self.c9Map.hasFeatureAtPixel(evt.pixel) ? 'pointer' : '';\n\t            });\n\t\n\t            //register map first render's event to show marker's effect\n\t            self.c9Map.once('postrender', function (evt) {\n\t                setTimeout(function () {\n\t                    self.c9Markers.getFeatures().forEach(function (f, i) {\n\t                        self.createMarkerEffect(f);\n\t                    });\n\t                }, LOAD_MAP_DELAY);\n\t            });\n\t\n\t            //register click event to show effect on markers\n\t            self.c9Map.on('click', function (evt) {\n\t                var f = self.c9Map.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {\n\t                    return feature;\n\t                });\n\t                if (f && f.get('type') == 'c9GeoMarker') {\n\t                    // self.createMarkerEffect(f);\n\t                    //test\n\t                    panAnimation(f);\n\t                }\n\t            });\n\t\n\t            //register keydown event to change center view\n\t            $(document).keydown(function (e) {\n\t                var keydownAnimate = function keydownAnimate(k) {\n\t                    var selectedFeature = undefined;\n\t                    var minDistance = Infinity;\n\t                    self.c9Markers.getFeatures().forEach(function (f, i) {\n\t                        var checkAnimate = distanceAndDirection(f);\n\t\n\t                        if ((checkAnimate[1] && k == LEFT_KEY || !checkAnimate[1] && k == RIGHT_KEY) && checkAnimate[0] < minDistance && checkAnimate[0] != 0) {\n\t                            minDistance = checkAnimate[0];\n\t                            selectedFeature = f;\n\t                        }\n\t                    });\n\t                    if (selectedFeature) {\n\t                        setTimeout(self.createMarkerEffect(selectedFeature), LOAD_MAP_DELAY);\n\t                        panAnimation(selectedFeature);\n\t                    }\n\t                };\n\t                switch (e.keyCode) {\n\t                    case LEFT_KEY:\n\t                        keydownAnimate(LEFT_KEY);\n\t                        break;\n\t                    case RIGHT_KEY:\n\t                        keydownAnimate(RIGHT_KEY);\n\t                        break;\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: \"id\",\n\t        get: function get() {\n\t            return this._id;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t\n\t        set: function set(newId) {\n\t            if (newId) {\n\t                this._id = newId;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"height\",\n\t        get: function get() {\n\t            return this._height;\n\t        },\n\t        set: function set(newHeight) {\n\t            if (newHeight) {\n\t                this._height = newHeight;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"width\",\n\t        get: function get() {\n\t            return this._width;\n\t        },\n\t        set: function set(newWidth) {\n\t            if (newWidth) {\n\t                this._width = newWidth;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"view\",\n\t        get: function get() {\n\t            return this._view;\n\t        },\n\t        set: function set(newView) {\n\t            if (newView) {\n\t                this._view = newView;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"markers\",\n\t        get: function get() {\n\t            return this._markers;\n\t        },\n\t        set: function set(newMarkers) {\n\t            if (newMarkers) {\n\t                this._markers = newMarkers;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"layers\",\n\t        get: function get() {\n\t            return this._layers;\n\t        },\n\t        set: function set(newLayers) {\n\t            if (newLayers) {\n\t                this._layers = newLayers;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"data\",\n\t        get: function get() {\n\t            return this._data;\n\t        },\n\t        set: function set(newData) {\n\t            if (newData) {\n\t                this._data = newData;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Map;\n\t}();\n\t\n\texports.default = Map;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** C9.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a6e7d9dd6c901e6351cf\n **/","// Chart Importer\r\nimport BarChart from './charts/C9.BarChart';\r\nimport DonutChart from './charts/C9.DonutChart';\r\nimport LineChart from './charts/C9.LineChart';\r\nimport PieChart from './charts/C9.PieChart';\r\nimport TimeLine from './charts/C9.TimeLine';\r\n\r\n// Map Importer\r\nimport Map from './map/C9.Map';\r\n\r\n// Helper Importer\r\nimport Helper from './helper/C9.Helper';\r\nimport DataAdapter from './helper/C9.DataAdapter';\r\n\r\n// CSS Importer\r\nimport styles from './C9.css';\r\n\r\nmodule.exports = {\r\n\tBarChart,\r\n\tDonutChart,\r\n\tLineChart,\r\n\tPieChart,\r\n\tTimeLine,\r\n\r\n\tMap,\r\n\t\r\n\tDataAdapter,\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Tooltip from './utils/C9.Tooltip';\r\nimport Helper from '../helper/C9.Helper';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class BarChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self = this;\r\n        var config = {\r\n            barWidth: undefined,\r\n            // groupType: \"stack\"\r\n        };\r\n\r\n        var width        = self.width - self.margin.left - self.margin.right;\r\n        var height       = self.height - self.margin.top - self.margin.bottom;\r\n        // var groupCount   = 0; // use to count how many element in group\r\n        // var groupStart   = 0; // calculate the number of those first element that just have only 1 value\r\n\r\n        self.body.type      = \"bar\";\r\n        // self._groupType     = options.groupType     ||  config.groupType;\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget = da.getDataTarget(\"bar\");\r\n        var barChartType = da.getDataTypeForBarChart()\r\n        if (barChartType != \"single\") {\r\n            self._groupNames    = da.groups || da.stacks;  //define group names use for showing legend\r\n            self._isGroup       = barChartType == \"group\"\r\n        }\r\n            \r\n        \r\n        // self.data.forEach(function(d, i) {\r\n        //     var y0 = 0; // calculate stacked data (top of each bar)\r\n        //     var count = 0; // count number of group\r\n        //     groupStart = i; \r\n        //     if (typeof d.value === \"object\") {\r\n        //         if (self.groupType == \"stack\") {\r\n        //             d.stack = d.value.map(function(v) {\r\n        //                 count++;\r\n        //                 return {name: d.name, y0: y0, y1: y0 += v, group: self._groupNames.length > 0 ? self._groupNames[count - 1] : \"Group \" + count};\r\n        //             });\r\n        //             d.total = d.stack[d.stack.length - 1].y1;\r\n        //         }\r\n        //         else if (self.groupType == \"group\") {\r\n        //             var total = -Infinity;\r\n        //             d.stack = d.value.map(function(v) {\r\n        //                 count++;\r\n        //                 total = v > total ? v : total;\r\n        //                 return {name: d.name, y0: y0, y1: v, group: self._groupNames.length > 0 ? self._groupNames[count - 1] : \"Group \" + count};\r\n        //             });\r\n        //             d.total = total;\r\n        //         }\r\n        //     }\r\n        //     else {\r\n        //         d.stack = [{name: d.name, y0: y0, y1: d.value, group: count > 0 ? self._groupNames.length > 0 ? self._groupNames[count] : \"Group \" + ++count : undefined}];\r\n        //         d.total = d.stack[d.stack.length - 1].y1;\r\n        //     }\r\n        //     if (count > groupCount)\r\n        //         groupCount = count;\r\n        // });\r\n\r\n        // // assign group to those first elements in data if they don't have\r\n        // for (var i = 0; i < groupStart - 1; i++) {\r\n        //     self.data[i].stack[0].group = self._groupNames.length > 0 ? self._groupNames[0] : \"Group 1\";\r\n        // };\r\n\r\n        // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\r\n        var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\r\n        var y = d3.scale.linear().range([height, 0]);\r\n\r\n\r\n        x.domain(self.dataTarget.map(function(d) {\r\n            return d.stack[0].name;\r\n        }));\r\n\r\n        y.domain([0, d3.max(self.dataTarget, function(d) {\r\n            return d.max;\r\n        })]);\r\n\r\n        /******** Handle for grouped, stacked bar chart ********/\r\n        if (self._groupNames) {\r\n            self._xGroup = d3.scale.ordinal();\r\n            self._xGroup.domain(self._groupNames).rangeRoundBands([0, x.rangeBand()]);\r\n        }\r\n        \r\n        //self-define group names if user do not define\r\n        // if (self._groupNames.length == 0)\r\n        //     for (var i = 1; i <= groupCount; i++) {\r\n        //         self._groupNames.push(\"Group \" + i);\r\n        //     };\r\n        \r\n        /**********************************************/\r\n\r\n        // Make flexible width according to barWidth\r\n        config.barWidth      = x.rangeBand();\r\n        self._barWidth       = options.barWidth  ||  config.barWidth;\r\n        self._x              = x;\r\n        self._y              = y;\r\n        self.updateConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get barWidth() {\r\n        return this._barWidth;\r\n    }\r\n\r\n    get colorRange() {\r\n        var color = this._colorRange;\r\n        if (typeof color == 'string') {\r\n            try {\r\n                return d3.scale[color]();    \r\n            }\r\n            catch(err) {\r\n                return function(i) {\r\n                    return color;\r\n                };\r\n            }\r\n        } else if (typeof color == 'object') {\r\n            return d3.scale.ordinal().range(color);\r\n        }\r\n    }\r\n\r\n    get groupType() {\r\n        return this._groupType;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    \r\n    get xGroup() {\r\n        return this._xGroup;\r\n    }\r\n\r\n    get groupNames() {\r\n        return this._groupNames;\r\n    }\r\n\r\n    get chartType() {\r\n        return this._body.type;\r\n    }\r\n\r\n    get isGroup() {\r\n        return this._isGroup;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set barWidth(newBarWidth) {\r\n        if (newBarWidth) {\r\n            this._barWidth = newBarWidth;\r\n        }\r\n    }\r\n    \r\n    set colorRange(newBarColor) {\r\n        if (newBarColor) {\r\n            this._colorRange = newBarColor;\r\n        }\r\n    }\r\n\r\n    set groupType(newGroupType) {\r\n        if (newGroupType) {\r\n            this._groupType = newGroupType;\r\n        }\r\n    }\r\n\r\n    set x(newX) {\r\n        if (newX) {\r\n            this._x = newX;\r\n        }\r\n    }\r\n\r\n    set y(newY) {\r\n        if (newY) {\r\n            this._y = newY;\r\n        }\r\n    }\r\n\r\n    set xGroup(newXGroup) {\r\n        if (newXGroup) {\r\n            this._xGroup = newXGroup;\r\n        }\r\n    }\r\n\r\n    set groupNames(newGroupNames) {\r\n        if (newGroupNames) {\r\n            this._groupNames = newGroupNames;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n\r\n\r\n    /**\r\n     * Init Bar Chart Config\r\n     */\r\n    updateConfig(){\r\n        var self  = this,\r\n            color = self.colorRange,\r\n            x     = self._x,\r\n            y     = self._y,\r\n            xGroup= self._xGroup;\r\n\r\n        var bar = self.body\r\n                    .selectAll(\".bar\")\r\n                    .data(self.dataTarget)\r\n                    .enter()\r\n                        .append(\"g\")\r\n                        .attr(\"class\", \"c9-chart-bar c9-custom-bar\")\r\n                        .attr(\"transform\", function(d) { return \"translate(\" + x(d.stack[0].name) + \",0)\"; });\r\n\r\n        var bars = bar.selectAll(\".c9-custom-rect\")\r\n            .data(function(d) { return d.stack; });\r\n\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"c9-custom-rect\")\r\n            .style(\"fill\", function (d, i) { return d.color || color(i); })\r\n            .attr(\"x\", function(d) { return self.isGroup ? xGroup(d.group) : undefined; })\r\n            .attr(\"y\", function(d) { return y(d.y1); })\r\n            .attr(\"width\", function(d) { return self.isGroup ? xGroup.rangeBand() : x.rangeBand(); })\r\n            .attr(\"height\", function(d) { return y(d.y0) - y(d.y1); });\r\n    }\r\n\r\n    /**\r\n     * [updateLegendInteraction description]\r\n     * @param  {[type]} data          [description]\r\n     * @param  {[type]} groupNames    [description]\r\n     * @param  {[type]} groupNamesOld [description]\r\n     * @param  {[type]} newLabel      [description]\r\n     * @return {[type]}               [description]\r\n     */\r\n    updateLegendInteraction(data, groupNames, groupNamesOld, newLabel){\r\n        var self = this;\r\n        var type = self.groupType;\r\n\r\n        var xGroup = d3.scale.ordinal();\r\n        xGroup.domain(groupNames).rangeRoundBands([0, self.x.rangeBand()]);\r\n\r\n        var xGroupOld = d3.scale.ordinal();\r\n        xGroupOld.domain(groupNamesOld).rangeRoundBands([0, self.x.rangeBand()]);\r\n\r\n        var midGroup = undefined;\r\n        //check add new label in the middle\r\n        if (groupNames.length > groupNamesOld.length && 0 < groupNames.indexOf(newLabel) && groupNames.indexOf(newLabel) < groupNames.length - 1 )\r\n            midGroup = groupNamesOld[groupNames.indexOf(newLabel)];\r\n\r\n        // self.body.selectAll(\".c9-custom-rect\").transition().duration(750).attr(\"height\", 0).remove();\r\n        self.body.selectAll(\".c9-custom-rect\").data([]).exit().remove();\r\n\r\n        var bar = self.body\r\n                    .selectAll(\".bar\")\r\n                    .data(data)\r\n                    .enter()\r\n                    .append(\"g\")\r\n                    .attr(\"class\", \"c9-chart-bar c9-custom-bar\")\r\n                    .attr(\"transform\", function (d, i) { return \"translate(\" + self.x(self.dataTarget[i].stack[0].name) + \",0)\"; });\r\n\r\n        var bars = bar.selectAll(\".c9-custom-rect\")\r\n            .data(function(d) { return d.stack; });\r\n\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"c9-custom-rect\")\r\n            .style(\"fill\", function(d) { return d.color; })\r\n            .attr(\"x\", function(d) {\r\n                // use for stack\r\n                if (!self.isGroup) return undefined;\r\n                // use for group\r\n                // group member positioning at the end of groups, so its x is the position of right edge of bar\r\n                if (groupNames.length > groupNamesOld.length && d.group == newLabel && groupNames.indexOf(newLabel) == groupNames.length - 1)\r\n                    return self.x.rangeBand();\r\n                return midGroup ? d.group == newLabel ? xGroupOld(midGroup) : xGroupOld(d.group) : xGroupOld(d.group);\r\n            })\r\n            .attr(\"y\", function(d) { return self.y(d.y1); })\r\n            .attr(\"width\", function(d) {\r\n                return !self.isGroup ? self.x.rangeBand() : d.group == newLabel ? 0 : xGroupOld.rangeBand();\r\n            })\r\n            .attr(\"height\", function(d) { return self.y(d.y0) - self.y(d.y1); });\r\n\r\n        bars.transition().duration(750)\r\n            .attr(\"x\", function(d) { return !self.isGroup ? undefined : xGroup(d.group); })\r\n            .attr(\"width\", function(d) { return !self.isGroup ? self.x.rangeBand() : xGroup.rangeBand(); })\r\n\r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * [Main draw function of Bar Chart]\r\n     * @return {[type]} [description]\r\n     */\r\n    draw() {\r\n        var self = this;\r\n        var axis    = new Axis(self.options, self.body, self.dataTarget, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom, null, null);\r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.dataTarget);\r\n        \r\n        legend.draw();\r\n        legend.updateInteractionForBarChart(self);\r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * Retrieve value from upper and lower bounds of each stack\r\n     * @param  {String} lower Lower bound of value\r\n     * @param  {String} upper Upper bound of value\r\n     * @return {String}       Value to return\r\n     */\r\n    retrieveValue(lower, upper) {\r\n        var d1 = Math.floor(lower) === lower ? 0 : lower.toString().split(\".\")[1].length;\r\n        var d2 = Math.floor(upper) === upper ? 0 : upper.toString().split(\".\")[1].length;\r\n        return d1 > d2 ? (upper - lower).toFixed(d1) : (upper - lower).toFixed(d2);\r\n    }\r\n    \r\n    /**\r\n     * Select all bars as type RECT in Bar Chart via its CLASS\r\n     */\r\n    selectAllBar() {\r\n        var self = this;\r\n\r\n        return self.body.selectAll('.c9-custom-rect');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllBar(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            // Define the div for the tooltip\r\n            // TODO: Allow user to add custom DIV, CLASS\r\n            // Make sure that: \r\n            // - Rect not overflow the bar, if not, hover effect will be messed\r\n            // -> So, just align the rect to right/left (x: 25) to avoid it\r\n            // -> And, the text will be align also\r\n            var div = self.body\r\n                        .append('g')   \r\n                        .style('display', 'none');\r\n                // Rect Container\r\n                div.append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .style('fill', '#FEE5E2')\r\n                    .style('stroke', '#FDCCC6')\r\n                    .style('stroke-width', 2);\r\n                // First line\r\n                var text_1 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 10)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n                // Second line\r\n                var text_2 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 20)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n\r\n            selector\r\n                .on(\"mouseover\", function(d) {\r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block')\r\n                        .attr(\"transform\", \"translate(\" + self.x(d.name) + \",\" + self.y(self.retrieveValue(d.y0, d.y1)) + \")\");\r\n\r\n                    text_1.text('Name: ' + d.name);\r\n                    text_2.text('Value: ' + self.retrieveValue(d.y0, d.y1));\r\n                })\r\n                .on(\"mouseout\", function(d) { \r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style('display', 'none');\r\n                });\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.BarChart.js\n **/","import Helper from '../helper/C9.Helper';\r\n\r\nexport default class Chart {\r\n    constructor(options) {\r\n        var self    = this;\r\n        var config  = {\r\n            // container\r\n            id: \"body\",\r\n            // size (width, height), margin, padding\r\n            width: 960,\r\n            height: 480,\r\n            margin: {\r\n                top: 20,\r\n                right: 20,\r\n                bottom: 70,\r\n                left: 40,\r\n            },\r\n            // interaction in chart\r\n            hover: {\r\n                enable: true,\r\n                options: {\r\n                    template: '',\r\n                    onMouseOver: {\r\n                        fadeIn: 200,\r\n                        // callback: function(data) {\r\n                        //     console.dir(data);\r\n                        // },\r\n                    },\r\n                    onMouseOut: {\r\n                        fadeOut: 500,\r\n                        // callback: function(data) {\r\n                        //     console.dir(data);\r\n                        // },\r\n                    }\r\n                }\r\n            },\r\n\r\n            // legend\r\n            legendShow: true,\r\n            legendPosition: \"bottom\",\r\n            legendInsetAnchor: \"top-left\",\r\n            legendPadding: 0,\r\n            // tooltip - show when mouseover on each data\r\n            tooltipShow: true,\r\n            tooltipPosition: undefined,\r\n\r\n            // table \r\n            table: {\r\n                container: \"body\",\r\n                show: true,\r\n                headings: [\"Name\", \"Value\"],\r\n                style: \"default\", // \"strip\", \"border\"\r\n                serial: true,\r\n                hover: {\r\n                    enable: true,\r\n                    callback: null\r\n                },\r\n                click: {\r\n                    enable: true,\r\n                    callback: null\r\n                }\r\n            },\r\n\r\n            // color range\r\n            colorRange: \"category20\",\r\n            // data\r\n            data: {\r\n                // ALL OPTIONS AVAILABLE IN DATA CONFIG\r\n                plain: [],\r\n                file: {\r\n                    type: null,\r\n                    url: null,\r\n                },\r\n                keys: {\r\n                    name: \"name\",\r\n                    value: \"value\"\r\n                },\r\n                groups: [],\r\n                stacks: [],\r\n            }\r\n        };\r\n\r\n        self._id        = options.id        || config.id;\r\n        self._width     = options.width     || config.width;\r\n        self._height    = options.height    || config.height;\r\n        self._colorRange= options.colorRange|| config.colorRange;\r\n        self._hover     = options.hover     || config.hover;\r\n        \r\n        self._dataOption= Helper.merge(options.data, config.data);\r\n        self._dataTarget= null;\r\n        self._margin    = Helper.merge(options.margin, config.margin);\r\n\r\n        // Skeleton: \r\n        // SVG\r\n        // ---BODY (g)\r\n        // -------BlaBla\r\n        self._svg       = null;\r\n        self._body      = null;\r\n        self._options   = options;\r\n\r\n        self.initConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    \r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * If colorRange is Array of color then scale range according to it\r\n     * If colorRange is a String like \"category20\", \"category20b\", etc. then scale using d3.scale.category\r\n     */\r\n    get colorRange() {\r\n        if (typeof this._colorRange == 'string') {\r\n            return d3.scale[this._colorRange]();\r\n        } else if (typeof this._colorRange == 'object') {\r\n            return d3.scale.ordinal().range(this._colorRange);\r\n        }\r\n    }\r\n\r\n    get margin() {\r\n        return this._margin;\r\n    }\r\n\r\n    get dataOption() {\r\n        return this._dataOption;\r\n    }\r\n\r\n    get svg() {\r\n        return this._svg;\r\n    }\r\n\r\n    get body() {\r\n        return this._body;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    get hover() {\r\n        return this._hover;\r\n    }\r\n\r\n    get dataTarget() {\r\n        return this._dataTarget;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n    \r\n    \r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set container(newContainer) {\r\n        if (newContainer) {\r\n            this._container = newContainer;\r\n        }\r\n    }\r\n    \r\n    set id(newId) {\r\n        if (newId) {\r\n            this._id = newId;\r\n        }\r\n    }\r\n\r\n    set width(newWidth) {\r\n        if (newWidth) {\r\n            this._width = newWidth;\r\n        }\r\n    }\r\n\r\n    set height(newHeight) {\r\n        if (newHeight) {\r\n            this._height = newHeight;\r\n        }\r\n    }\r\n\r\n    set colorRange(newColorRange) {\r\n        if (newColorRange) {\r\n            this._colorRange = newColorRange;\r\n        }\r\n    }\r\n\r\n    set margin(newMargin) {\r\n        if (newMargin) {\r\n            this._margin = newMargin;\r\n        }\r\n    }\r\n\r\n    set dataOption(arg) {\r\n        if (arg) {\r\n            this._dataOption = arg;\r\n        }\r\n    }\r\n\r\n    set svg(newSvg) {\r\n        if (newSvg) {\r\n            this._svg = newSvg;\r\n        }\r\n    }\r\n\r\n    set body(newBody) {\r\n        if (newBody) {\r\n            this._body = newBody;\r\n        }\r\n    }\r\n\r\n    set options(newOptions) {\r\n        if (newOptions) {\r\n            this._options = newOptions;\r\n        }\r\n    }\r\n\r\n    set hover(newHover) {\r\n        if (newHover) {\r\n            this._hover = newHover;\r\n        }\r\n    }\r\n\r\n    set dataTarget(arg) {\r\n        if (arg) {\r\n            this._dataTarget = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Init & Update Parent Chart Config\r\n     */\r\n    initConfig() {\r\n        var margin  = this.margin,\r\n            id      = this.id,\r\n            width   = this.width - margin.left - margin.right,\r\n            height  = this.height - margin.top - margin.bottom;\r\n\r\n        this.container = d3.select(id);\r\n\r\n        this.svg = d3.select(id)\r\n            .append(\"svg\")\r\n            .style('overflow', 'visible') // to overwrite overflow: hidden by Boostrap as default\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom);\r\n\r\n        this.body = this.svg\r\n                    .append(\"g\")\r\n                    .attr('class', 'c9-chart c9-custom-container')\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n                  \r\n    }\r\n\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.Chart.js\n **/","var Helper = {\r\n    \r\n    each: function(loopable, callback, self, reverse) {\r\n        // Check to see if null or undefined firstly.\r\n        var i, len;\r\n        if (self.isArray(loopable)) {\r\n            len = loopable.length;\r\n            if (reverse) {\r\n                for (i = len - 1; i >= 0; i--) {\r\n                    callback.call(self, loopable[i], i);\r\n                }\r\n            } else {\r\n                for (i = 0; i < len; i++) {\r\n                    callback.call(self, loopable[i], i);\r\n                }\r\n            }\r\n        } else if (typeof loopable === 'object') {\r\n            var keys = Object.keys(loopable);\r\n            len = keys.length;\r\n            for (i = 0; i < len; i++) {\r\n                callback.call(self, loopable[keys[i]], keys[i]);\r\n            }\r\n        }\r\n    },\r\n\r\n    // setDefaultConfig: function() {\r\n    //     var self = this;\r\n\r\n    //     if (self.defaultConfig == null || self.defaultConfig === undefined) {\r\n    //         return;\r\n    //     } else {\r\n    //         self.lastConfig = self.merge(Chart._options, Chart);\r\n    //         self.each(self.lastConfig, function(value, index) {\r\n    //             // var prefixCfg = self.setPrefix(index);\r\n    //             self.setValue(self.lastConfig[index], index);\r\n    //         }, self);\r\n    //     }\r\n    // }\r\n\r\n    setValue: function(value, key) {\r\n        var self = this;\r\n        self[key] = value;\r\n    },\r\n\r\n    setPrefix: function(config) {\r\n        var constPrefix = '_';\r\n        if (config) {\r\n            return constPrefix + config;\r\n        }\r\n    },\r\n\r\n    isEmpty: function(value) {\r\n        return value === null || value === undefined || (Util.isArray(value) && value.length === 0);\r\n    },\r\n\r\n    isObject: function(object) {\r\n        return !Util.isEmpty(object) && typeof(object) === 'object';\r\n    },\r\n\r\n    isArray: function(array) {\r\n        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\r\n    },\r\n\r\n    isFunction: function(func) {\r\n        return !Util.isEmpty(func) && typeof(func) === 'function';\r\n    },\r\n\r\n    merge: function(obj1,obj2){\r\n        var obj3 = {};\r\n        for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }\r\n        for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }\r\n        return obj3;\r\n    },\r\n\r\n    get: function(_key, _data){\r\n        var _keys = _key.split(\".\");\r\n        var _current = _data;\r\n        var self = this;\r\n        \r\n        for(var i=0, len=_keys.length; i<len; i++){\r\n            var _fun = _keys[i].split(\"|\");\r\n            \r\n            if(_fun && _fun.length == 2){\r\n                _keys[i] = _fun[0];\r\n                _fun = _fun[1];\r\n            }\r\n            else{\r\n                _fun = null;\r\n            }\r\n            \r\n            if('undefined' == typeof(_current[_keys[i]])){\r\n                return '';\r\n            }\r\n            else{\r\n                _current = _current[_keys[i]];\r\n            }\r\n            \r\n            if(null !== _fun){\r\n                _current = self.filter[_fun].call(this, _current);\r\n            }\r\n        }\r\n        \r\n        return _current;\r\n    },\r\n\r\n    max: function(arr) {\r\n        return Math.max(...arr);\r\n    }, \r\n\r\n    sum: function(arr) {\r\n        return arr.reduce(function(a, b) { return a + b; }, 0);\r\n    },\r\n\r\n    guid: function() {\r\n        return 'c9-xxxxxx-4xxx-yxxx'.replace(/[xy]/g, function(c) {\r\n            let r = Math.random()*16|0, \r\n                v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    },\r\n\r\n};\r\n\r\nvar Util = {\r\n    isEmpty: function(value) {\r\n        return value === null || value === undefined;\r\n    },\r\n\r\n    isArray: function(array) {\r\n        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\r\n    },\r\n};\r\n\r\nmodule.exports = Helper;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/C9.Helper.js\n **/","'use strict';\r\n\r\nexport default class Axis {\r\n    constructor(options, body, data, width, height, xAxe, yAxe) {\r\n        var config = {\r\n            xAxisShow     : true,\r\n            xAxisPadding  : {},   // TODO\r\n            xAxisText     : 'Name',\r\n            yAxisShow     : true,\r\n            yAxisPadding  : {},   // TODO\r\n            yAxisText     : 'Value',\r\n            numOfTickY   : 5,\r\n            tickFormat     : \"s\",   // refer: https://github.com/d3/d3-format\r\n            isLogaric: false, // TODO: Add isPower, isNormal(default), isLogaric\r\n            y2AxisShow    : true,\r\n            y2AxisPadding : {},   // TODO\r\n            y2AxisText    : 'Value',\r\n            gridXShow: false,\r\n            gridYShow: false\r\n        };\r\n\r\n        this._xAxisShow     = options.xAxisShow      || config.xAxisShow;\r\n        this._xAxisPadding  = options.xAxisPadding   || config.xAxisPadding;\r\n        this._xAxisText     = options.xAxisText      || config.xAxisText;\r\n        this._yAxisShow     = options.yAxisShow      || (body.type == \"timeline\" ? false : config.yAxisShow);\r\n        this._yAxisPadding  = options.yAxisPadding   || config.yAxisPadding;\r\n        this._yAxisText     = options.yAxisText      || config.yAxisText;\r\n        this._isLogaricVariant     = options.isLogaric      || config.isLogaric;\r\n        this._tickFormat    = options.tickFormat      || config.tickFormat;\r\n        this._numOfTickY    = options.numOfTickY    || config.numOfTickY;\r\n        this._y2AxisShow    = options.y2AxisShow     || config.y2AxisShow;\r\n        this._y2AxisPadding = options.y2AxisPadding  || config.y2AxisPadding;\r\n        this._y2AxisText    = options.y2AxisText     || config.y2AxisText;\r\n        this._gridXShow     = options.gridXShow      || config.gridXShow;\r\n        this._gridYShow     = options.gridYShow      || config.gridYShow;\r\n\r\n\r\n        var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\r\n        var y;\r\n\r\n        if (this._isLogaricVariant) {\r\n            y = d3.scale.log().range([height, 0]);\r\n        } else {\r\n            y = d3.scale.linear().range([height, 0]);\r\n        }\r\n        \r\n        x.domain(data.map(function(d) {\r\n            return d.name || d.stack[0].name;\r\n        }));\r\n\r\n        if (body.type == \"bar\") {\r\n            y.domain([\r\n                d3.min(data, function(d) {\r\n                    return d.max;\r\n                }), \r\n                d3.max(data, function(d) {\r\n                    return d.max;\r\n                })\r\n            ]);\r\n        }\r\n        else\r\n            y.domain([\r\n                d3.min(data, function(d) {\r\n                    return d.value;\r\n                }), \r\n                d3.max(data, function(d) {\r\n                    return d.value;\r\n                })\r\n            ]);\r\n\r\n        if (body.type == \"timeline\") {\r\n\r\n            var xScale = d3.time.scale()\r\n                .domain([options.starting, options.ending])\r\n                .range([0, width]);\r\n            this._xAxis = d3.svg.axis()\r\n                .scale(xScale)\r\n                .orient(\"bottom\")\r\n                .tickFormat(options.tickFormat === undefined ? d3.time.format(\"%I %p\") : options.tickFormat.format)\r\n                .tickSize(options.tickFormat === undefined ? 6 : options.tickFormat.tickSize)\r\n                .ticks(options.tickFormat === undefined ? d3.time.hours : options.tickFormat.tickTime, options.tickFormat === undefined ? 1 : options.tickFormat.tickInterval);\r\n            delete options.starting;\r\n            delete options.ending;\r\n\r\n        } else if (body.type == \"line\") {\r\n\r\n            this._xAxis = xAxe;\r\n            this._yAxis = yAxe;\r\n\r\n        } else {\r\n            // Currently, support logaric axis only for y-axis on bar-chart\r\n            // TODO: add for line-chart too\r\n            var _tickFormat = d3.format(this._tickFormat);\r\n            var _numOfTickY = this._numOfTickY;\r\n\r\n            this._xAxis = d3.svg.axis()\r\n                .scale(x)\r\n                .orient(\"bottom\")\r\n                .ticks(10);\r\n\r\n            // In LOG scale, can't specify default number of ticks\r\n            // must be filter with tickFormat instead\r\n            // refer: https://github.com/d3/d3/wiki/Quantitative-Scales#log_ticks\r\n            if (this._isLogaricVariant) {\r\n                this._yAxis = d3.svg.axis()\r\n                    .scale(y)\r\n                    .orient(\"left\")\r\n                    .ticks(_numOfTickY, _tickFormat)\r\n                    .tickSize(10, 0);\r\n            } else {\r\n                this._yAxis = d3.svg.axis()\r\n                    .scale(y)\r\n                    .orient(\"left\")\r\n                    .ticks(_numOfTickY)\r\n                    .tickSize(10, 0)\r\n                    .tickFormat(_tickFormat);\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        // Grid\r\n        if (this._gridXShow) {\r\n            // Select CURRENT svg container, to make this axis outside\r\n            // as a SEPARATED component, just like AXIS, of CHART\r\n            // d3.select(this._svg[0][0].parentNode)\r\n            this._xAxis.innerTickSize(-height)\r\n                .outerTickSize(0);\r\n        }\r\n\r\n        if (this._gridYShow) {\r\n            // Select CURRENT svg container, to make this axis outside\r\n            // as a SEPARATED component, just like AXIS, of CHART\r\n            // d3.select(this._svg[0][0].parentNode)\r\n            this._yAxis.innerTickSize(-width)\r\n                .outerTickSize(0);\r\n        }\r\n\r\n        this._body    = body;\r\n        this._data   = data;\r\n        this._width  = width;   // TODO : ADD Getter/setter\r\n        this._height  = height;\r\n\r\n        if (this._xAxisShow) {\r\n            this._body.append(\"g\")\r\n                .attr(\"class\", \"x axis\")\r\n                .attr(\"transform\", \"translate(0,\" + (height) + \")\")\r\n                .call(this._xAxis)\r\n                .append(\"text\")\r\n                .attr(\"dx\", \"-.8em\")\r\n                .attr(\"dy\", \"-.55em\")\r\n                .attr(\"x\", width)\r\n                .attr(\"y\", \"20\")\r\n                .style(\"text-anchor\", \"start\")\r\n                .text(this._xAxisText);\r\n                // .attr(\"transform\", \"rotate(-90)\" );\r\n        }\r\n\r\n        if (this._yAxisShow) {\r\n            this._body.append(\"g\")\r\n                .attr(\"class\", \"y axis\")\r\n                .call(this._yAxis)\r\n                .append(\"text\")\r\n                // .attr(\"transform\", \"rotate(-90)\")\r\n                .attr(\"y\", -10)\r\n                .attr(\"dy\", \".10\")\r\n                .style(\"text-anchor\", \"end\")\r\n                .text(this._yAxisText);\r\n        }\r\n\r\n\r\n        /**\r\n            TODO:\r\n            - Add y2-axis\r\n        **/\r\n            \r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    \r\n    get xAxis() {\r\n        return this._xAxis;\r\n    }\r\n\r\n    get yAxis() {\r\n        return this._yAxis;\r\n    }\r\n\r\n    get xAxisShow() {\r\n        return this._xAxisShow;\r\n    }\r\n\r\n    get xAxisPadding() {\r\n        return this._xAxisPadding;\r\n    }\r\n\r\n    get yAxisShow() {\r\n        return this._yAxisShow;\r\n    }\r\n\r\n    get yAxisPadding() {\r\n        return this._yAxisPadding;\r\n    }\r\n\r\n    get isLogaricVariant() {\r\n        return this._isLogaricVariant;\r\n    }\r\n\r\n    get y2AxisShow() {\r\n        return this._y2AxisShow;\r\n    }\r\n\r\n    get y2AxisPadding() {\r\n        return this._y2AxisPadding;\r\n    }\r\n    \r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    \r\n    set xAxis(newXAxis) {\r\n        if (newXAxis) {\r\n            this._xAxis = newXAxis;\r\n        }\r\n    }\r\n\r\n    set yAxis(newYAxis) {\r\n        if (newYAxis) {\r\n            this._yAxis = newYAxis;\r\n        }\r\n    }\r\n\r\n    set xAxisShow(newXAxisShow) {\r\n        if (newXAxisShow) {\r\n            this._xAxisShow = newXAxisShow;\r\n        }\r\n    }\r\n\r\n    set xAxisPadding(newXAxisPadding) {\r\n        if (newXAxisPadding) {\r\n            this._xAxisPadding = newXAxisPadding;\r\n        }\r\n    }\r\n\r\n    set yAxisShow(newYAxisShow) {\r\n        if (newYAxisShow) {\r\n            this._yAxisShow = newYAxisShow;\r\n        }\r\n    }\r\n\r\n    set yAxisPadding(newYAxisPadding) {\r\n        if (newYAxisPadding) {\r\n            this._yAxisPadding = newYAxisPadding;\r\n        }\r\n    }\r\n\r\n    set isLogaricVariant(newIsLogaricVariant) {\r\n        if (newIsLogaricVariant) {\r\n            this._isLogaricVariant = newIsLogaricVariant;\r\n        }\r\n    }\r\n\r\n    set y2AxisShow(newY2AxisShow) {\r\n        if (newY2AxisShow) {\r\n            this._y2AxisShow = newY2AxisShow;\r\n        }\r\n    }\r\n\r\n    set y2AxisPadding(newY2AxisPadding) {\r\n        if (newY2AxisPadding) {\r\n            this._y2AxisPadding = newY2AxisPadding;\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Axis.js\n **/","'use strict';\r\n\r\nexport default class Title {\r\n    constructor(options, body, width, height, margin) {\r\n        var config = {\r\n            titleShow      : true,\r\n            titleText      : \"Sample Chart\",\r\n            titlePosition  : 'top',\r\n            titleSize      : \"14px\"\r\n        };\r\n\r\n        this._titleShow     = options.titleShow       || config.titleShow;\r\n        this._titleText     = options.titleText       || config.titleText;\r\n        this._titlePosition = options.titlePosition   || config.titlePosition;\r\n        this._titleSize     = options.titleSize       || config.titleSize;\r\n\r\n        this._body    = body;\r\n\r\n        if (this._titleShow) {\r\n            var self = this;\r\n            // Select CURRENT body container, to make this axis outside\r\n            // as a SEPARATED component, just like AXIS, of CHART\r\n            var text = d3.select(self._body[0][0].parentNode)\r\n                .append(\"g\")\r\n                    .attr('class', 'c9-custom-title c9-custom-title-container')\r\n                    .append(\"text\")\r\n                        .attr(\"class\", \"c9-custom-title c9-custom-title-text\");\r\n\r\n                // Get title width: text.node().getComputedTextLength()           \r\n                text.attr(\"x\", (((width - text.node().getComputedTextLength()) / 2)))           \r\n                    .attr(\"y\", this.setYLocation(height, margin))\r\n                    .attr(\"text-anchor\", \"middle\")  \r\n                    .style(\"font-size\", this._titleSize)  \r\n                    .text(this._titleText);\r\n        }\r\n            \r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    \r\n    get titleShow() {\r\n        return this._titleShow;\r\n    }\r\n\r\n    get titleText() {\r\n        return this._titleText ;\r\n    }\r\n\r\n    get titlePosition() {\r\n        return this._titlePosition;\r\n    }\r\n\r\n    get titleSize() {\r\n        return this._titleSize;\r\n    }\r\n    \r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    \r\n    set titleShow(newTitleShow) {\r\n        if (newTitleShow) {\r\n            this._titleShow = newTitleShow;\r\n        }\r\n    }\r\n\r\n    set titleText(newTitleText) {\r\n        if (newTitleText) {\r\n            this._titleText = newTitleText;\r\n        }\r\n    }\r\n\r\n    set titlePosition(newTitlePosition) {\r\n        if (newTitlePosition) {\r\n            this._titlePosition = newTitlePosition;\r\n        }\r\n    }\r\n\r\n    set titleSize(newTitleSize) {\r\n        if (newTitleSize) {\r\n            this._titleSize = newtitleSize;\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    setYLocation(height, margin) {\r\n        if (this.titlePosition === 'top') {\r\n            return (margin.top / 2);\r\n        } else if (this.titlePosition === 'bottom') {\r\n            return (height - margin.bottom / 2);\r\n        }\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Title.js\n **/","'use strict';\r\n\r\nexport default class Legend {\r\n    constructor(options, body, data) {\r\n        var config = {\r\n            legendShow      : false,\r\n            legendPosition  : [0, 0],\r\n            legendBox       : false,\r\n            legendSize      : 18,\r\n            legendTextSize : \"14px\",\r\n            legendMargin   : [50, 5, 5, 5],\r\n            legendSpace     : 150,\r\n            // legendStyle     : \"rect\" // TODO: Allow user to choose type of legend (circle, rect, etc.)\r\n        };\r\n\r\n        var self = this;\r\n\r\n        self._legendShow         = options.legendShow       || config.legendShow;\r\n        self._legendTextSize     = options.legendTextSize   || config.legendTextSize;\r\n        self._legendPosition     = options.legendPosition   || config.legendPosition;\r\n        self._legendSize         = options.legendSize       || config.legendSize;\r\n        self._legendBox          = options.legendBox        || config.legendBox;\r\n        self._legendMargin       = options.legendMargin     || config.legendMargin;\r\n        self._legendSpace        = options.legendSpace      || config.legendSpace;\r\n        // self._legendStyle        = options.legendStyle      || config.legendStyle;\r\n\r\n        self._options   = options;\r\n        self._body      = body;\r\n        // self._color     = color;\r\n        self._data      = data;\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get body() {\r\n        return this._body;\r\n    }\r\n\r\n    get color() {\r\n        return this._color;\r\n    }\r\n    \r\n    get legendShow() {\r\n        return this._legendShow;\r\n    }\r\n\r\n    get legendText() {\r\n        return this._legendText ;\r\n    }\r\n\r\n    get legendPosition() {\r\n        return this._legendPosition;\r\n    }\r\n\r\n    get legendSize() {\r\n        return this._legendSize;\r\n    }\r\n\r\n    get legendMargin() {\r\n        return this._legendMargin;\r\n    }\r\n\r\n    get legendSpace() {\r\n        return this._legendSpace;\r\n    }\r\n\r\n    get legendItem() {\r\n        return this._legendItem;\r\n    }\r\n\r\n    get legendDomain() {\r\n        return this._legendDomain;\r\n    }\r\n\r\n    get legendItemEventFactory() {\r\n        return this._legendItemEventFactory;\r\n    }\r\n    \r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set data(arg) {\r\n        if (arg) {\r\n            this._data = arg;\r\n        }\r\n    }\r\n\r\n    set legendShow(newlegendShow) {\r\n        if (newlegendShow) {\r\n            this._legendShow = newlegendShow;\r\n        }\r\n    }\r\n\r\n    set legendText(newlegendText) {\r\n        if (newlegendText) {\r\n            this._legendText = newlegendText;\r\n        }\r\n    }\r\n\r\n    set legendPosition(newlegendPosition) {\r\n        if (newlegendPosition) {\r\n            this._legendPosition = newlegendPosition;\r\n        }\r\n    }\r\n\r\n    set legendSize(newlegendSize) {\r\n        if (newlegendSize) {\r\n            this._legendSize = newlegendSize;\r\n        }\r\n    }\r\n\r\n    set legendMargin(arg) {\r\n        if (arg) {\r\n            this._legendMargin = arg;\r\n        }\r\n    }\r\n\r\n    set legendSpace(arg) {\r\n        if (arg) {\r\n            this._legendSpace = arg;\r\n        }\r\n    }\r\n\r\n    set legendItem(newLegendItem) {\r\n        if (newLegendItem) {\r\n            this._legendItem = newLegendItem;\r\n        }\r\n    }\r\n\r\n    set legendDomain(newLegendDomain) {\r\n        if (newLegendDomain) {\r\n            this._legendDomain = newLegendDomain;\r\n        }\r\n    }\r\n\r\n    set legendItemEventFactory(newLegendItemEventFactory) {\r\n        if (newLegendItemEventFactory) {\r\n            this._legendItemEventFactory = newLegendItemEventFactory;\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    draw () {\r\n        var self = this;\r\n\r\n        // var color = self.color;\r\n\r\n        if (self._legendShow) {\r\n            // TODO: Remove these conditional checks by getData for general purposes\r\n            var legendDomain = [];\r\n\r\n            // var setEnableData = function(_data, _flag) {\r\n            //     return {\r\n            //         'data': _data,\r\n            //         'enable': _flag\r\n            //     };\r\n            // };\r\n\r\n            // if (self._body.type == \"line\") {\r\n\r\n            //     var dataGroup = d3.nest()\r\n            //         .key(function(d) { return d.Client; })\r\n            //         .entries(self._data);\r\n\r\n            //     dataGroup.forEach(function(d, i) {\r\n            //         legendDomain.push(d.key);\r\n            //     });\r\n\r\n            // } else if (self._body.type == \"bar\") {\r\n\r\n            //     legendDomain = self._data;\r\n\r\n\r\n\r\n            // } else if (self._body.type == \"pie\" || self._body.type == \"donut\" || self._body.type == \"timeline\") {\r\n\r\n            //     self._data.forEach(function(d) {\r\n            //         d.name ? legendDomain.push(d.name) : legendDomain.push(\"\");\r\n            //     });\r\n\r\n            // }\r\n\r\n\r\n\r\n            // Store for backup, and add enable flag to each data\r\n            // self.legendDomain = [];\r\n            // self._data.forEach(function(d) {\r\n            //     if (d) {\r\n            //         self.legendDomain.push(setEnableData(d, true));\r\n            //     }\r\n            // });\r\n\r\n            // var i;\r\n            // for (i = 0; i < legendDomain.length; i++) {\r\n            //     if (legendDomain[i] != \"\")\r\n            //         break;\r\n            // };\r\n\r\n            // if (i == legendDomain.length)\r\n            //     legendDomain = [];\r\n\r\n            // Calculate domain for color to draw\r\n            // color.domain(legendDomain);\r\n\r\n            if (self._body.type == \"bar\") {\r\n                self.data = self.data[self.data.reduce((p, c, i, a) => a[p].stack.length > c.stack.length ? p : i, 0)].stack;\r\n            }\r\n\r\n            // Legend will be appended in main SVG container\r\n            var legendContainer = d3.select(self._body[0][0].parentNode)\r\n                .append(\"g\")\r\n                .attr(\"class\", \"c9-custom-legend c9-custom-legend-container\")\r\n                .attr(\"transform\", \"translate(\" + self._legendPosition[0] + \",\" + self._legendPosition[1] + \")\");\r\n            \r\n            // var legendBox = legendContainer.selectAll(\".c9-custom-legend.c9-custom-legend-box\").data([true]).enter();\r\n\r\n            self.legendItem = legendContainer.selectAll(\"g.c9-custom-legend.c9-custom-legend-item\")\r\n                // .data(color.domain())\r\n                .data(self.data)\r\n                .enter().append(\"g\")\r\n                .attr(\"class\", \"c9-custom-legend c9-custom-legend-item\")\r\n                .attr('data-ref', function(d) { return d['data-ref']; })\r\n                .attr(\"transform\", function(d, i) {\r\n                    return \"translate(\" + (i * (self.legendSize + self.legendSpace) + self.legendMargin[0]) + \",\" + self.legendMargin[3] + \")\"\r\n                });\r\n\r\n            self.legendItem.append('rect')\r\n                .attr('class', 'c9-custom-legend c9-custom-legend-rect')\r\n                .attr('width', self.legendSize * 2)\r\n                .attr('height', self.legendSize)\r\n                .attr('r', self.legendSize)\r\n                .attr('fill', function(d){ return d.color; })\r\n                .attr('stroke', function(d){ return d.color; });\r\n\r\n            self.legendItem.append('text')\r\n                .attr('class', 'c9-custom-legend c9-custom-legend-text')\r\n                .attr('x', self._legendSize * 2 + 20)\r\n                .attr('y', 15)\r\n                // .attr('text-anchor', 'middle')\r\n                .text(function(d) { return self._body.type == \"bar\" ? d.group : d.name; });\r\n\r\n\r\n            // if (self._legendBox && legendDomain.length > 0) {\r\n            //     var box = legendContainer[0][0].getBBox();\r\n            //     legendBox.attr(\"class\", \".c9-custom-legend.c9-custom-legend-box\")\r\n            //         .attr(\"x\", 0)\r\n            //         .attr(\"y\", 0)\r\n            //         .attr(\"width\", box.width + self._legendMargin[1] + self._legendMargin[3])\r\n            //         .attr(\"height\", box.height + self._legendMargin[2] + self._legendMargin[0])\r\n            //         .style(\"fill\", \"none\")\r\n            //         .style(\"stroke\", color);\r\n            // }\r\n        \r\n        }\r\n    \r\n    }\r\n\r\n    /**\r\n     * Update interaction event dispatchers for legend\r\n     * For: Donut Chart, Pie Chart\r\n     */\r\n    updateInteractionForDonutPieChart(chart, path, pie, currentData, arc) {\r\n\r\n        var self = this;\r\n\r\n        var chartType = chart.chartType;\r\n\r\n        var chartInnerBefore    = chartType == 'pie' ?  0 : chart.innerRadius,\r\n            chartOuterBefore    = chartType == 'pie' ?  chart.radius : chart.outerRadius,\r\n            chartInnerAfter     = chartType == 'pie' ?  0 : chart.innerRadius,\r\n            chartOuterAfter     = chartType == 'pie' ?  chart.radius * 1.2 : chart.outerRadius * 1.2;\r\n\r\n        self.legendItemEventFactory = {\r\n\r\n            'click': function(item) {\r\n\r\n                var selector = d3.select(this);\r\n                var enable = true,\r\n                    dataSet = self.data;\r\n                var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                    return (d.enable) ? 1 : 0;\r\n                }));\r\n\r\n                // Add pointer to cursor\r\n                selector.style('cursor', 'pointer');\r\n\r\n                // If current selector is disabled, then turn it on back\r\n                // Else, set enable to false\r\n                if (selector.style('opacity') == '0.1') {\r\n                    selector.style('opacity', '1.0');\r\n                } else {\r\n                    if (totalEnable < 2) return;\r\n                    selector.style('opacity', '0.1');\r\n                    enable = false;\r\n                }\r\n\r\n                chart.pie.value(function(d) {\r\n                    if (d.name == item.name) d.enable = enable;\r\n                    return (d.enable) ? d.value : 0;\r\n                });\r\n\r\n                path = path.data(chart.pie(dataSet));\r\n\r\n                path.transition()\r\n                    .duration(500)\r\n                    .attrTween('d', function(d) {\r\n                        var interpolate = d3.interpolate(chart.currentData, d);\r\n                        // Returns an interpolator between the two arbitrary values a and b. \r\n                        // The interpolator implementation is based on the type of the end value b.\r\n                        chart.currentData = interpolate(0);\r\n                        return function(t) {\r\n                            return arc(interpolate(t));\r\n                        };\r\n                    })\r\n                    // Remove stroke when re-draw arcs to avoid duplicate strokes\r\n                    .attr('stroke', 'none');;\r\n                \r\n            },\r\n\r\n            'mouseover': function(item) {\r\n                var legendSelector = d3.select(this);\r\n                // Add pointer to cursor\r\n                legendSelector.style('cursor', 'pointer');\r\n\r\n                var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\r\n\r\n                selector\r\n                    .transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerAfter)\r\n                            .outerRadius(chartOuterAfter)\r\n                        )\r\n                        .attr('fill-opacity', '1.0');\r\n                // var enable = true,\r\n                //     dataSet = self.legendDomain,\r\n                //     isCurrentEnable = true;\r\n\r\n                // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n                //     return (d.enable) ? 1 : 0;\r\n                // }));\r\n\r\n                // // Add pointer to cursor\r\n                // selector.style('cursor', 'pointer');\r\n\r\n                // // If current selector is disabled, then remains it\r\n                // // Else, turn enabled to disabled\r\n                // if (!isCurrentEnable) {\r\n                //     return false;\r\n                // } else {\r\n                //     if (totalEnable < 2) return;\r\n                //     selector.style('opacity', '0.5');\r\n                //     enable = false;\r\n                // }\r\n\r\n                // chart.pie.value(function(d) {\r\n                //     if (d.data.name == item) d.tempEnable = enable;\r\n                //     else d.tempEnable = d.enable;\r\n\r\n                //     return (d.tempEnable) ? d.data.value : 0;\r\n                // });\r\n\r\n                // path = path.data(chart.pie(dataSet));\r\n\r\n                // path.transition()\r\n                //     .duration(200)\r\n                //     .attrTween('d', function(d) {\r\n                //         var interpolate = d3.interpolate(chart.currentData, d);\r\n                //         // Returns an interpolator between the two arbitrary values a and b. \r\n                //         // The interpolator implementation is based on the type of the end value b.\r\n                //         chart.currentData = interpolate(0);\r\n                //         return function(t) {\r\n                //             return arc(interpolate(t));\r\n                //         };\r\n                //     });\r\n\r\n            },\r\n\r\n            'mouseout': function(item) {\r\n\r\n                var legendSelector = d3.select(this);\r\n                // Add pointer to cursor\r\n                legendSelector.style('cursor', 'pointer');\r\n\r\n                var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\r\n\r\n                selector\r\n                    .transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        )\r\n                        .attr('fill-opacity', '0.5');\r\n                // var dataSet = self.legendDomain,\r\n                //     isCurrentEnable = true;\r\n\r\n                // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n                //     return (d.enable) ? 1 : 0;\r\n                // }));\r\n\r\n                // // Add pointer to cursor\r\n                // selector.style('cursor', 'pointer');\r\n\r\n                // chart.pie.value(function(d) {\r\n                //     if (d.data.name == item && !d.enable) d.enable = enable;\r\n                //     return (d.enable) ? d.data.value : 0;\r\n                // });\r\n\r\n                // if (!isCurrentEnable) {\r\n                //     return;\r\n                // } else {\r\n                //     if (totalEnable < 2 || selector.style('opacity') == '1') return;\r\n                //     selector.style('opacity', '1.0');\r\n                // }\r\n\r\n                // path = path.data(chart.pie(dataSet));\r\n\r\n                // path.transition()\r\n                //     .duration(200)\r\n                //     .attrTween('d', function(d) {\r\n                //         var interpolate = d3.interpolate(chart.currentData, d);\r\n                //         // Returns an interpolator between the two arbitrary values a and b. \r\n                //         // The interpolator implementation is based on the type of the end value b.\r\n                //         chart.currentData = interpolate(0);\r\n                //         return function(t) {\r\n                //             return arc(interpolate(t));\r\n                //         };\r\n                //     });\r\n\r\n            }\r\n        \r\n        };\r\n\r\n        if (self.legendShow) {\r\n            \r\n            self.legendItem.on(self.legendItemEventFactory);\r\n\r\n        }\r\n    \r\n    }\r\n\r\n    /**\r\n     * Update interaction for barchart\r\n     * @param  {[type]} chart       [description]\r\n     * @param  {[type]} path        [description]\r\n     * @param  {[type]} pie         [description]\r\n     * @param  {[type]} currentData [description]\r\n     * @param  {[type]} arc         [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    updateInteractionForBarChart(chart) {\r\n\r\n        var self = this;\r\n\r\n        self.legendItemEventFactory = {\r\n\r\n            'click': function(item) {\r\n                var selector = d3.select(this);\r\n                var enable = true,\r\n                    dataBackup = chart.dataTarget,\r\n                    dataSet = self.data;\r\n                var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                    return (d.enable) ? 1 : 0;\r\n                }));\r\n\r\n                var enableSet = [];\r\n                var enableSetOld = [];\r\n                var data = [];\r\n                // Add pointer to cursor\r\n                selector.style('cursor', 'pointer');\r\n\r\n                // If current selector is disabled, then turn it on back\r\n                // Else, set enable to false\r\n                if (selector.style('opacity') == '0.1') {\r\n                    selector.style('opacity', '1.0');\r\n                } else {\r\n                    if (totalEnable < 2) return;\r\n                    selector.style('opacity', '0.1');\r\n                    enable = false;\r\n                }\r\n\r\n                //set current data for legend\r\n                self.data.forEach(function(d, i) {\r\n                    if (d.enable)\r\n                        enableSetOld.push(d.group);\r\n                    if (d.group == item.group)\r\n                        d.enable = enable;\r\n                    if (d.enable)\r\n                        enableSet.push(d.group);\r\n                });\r\n\r\n                //TODO - handle total - use for axis\r\n                dataBackup.forEach(function(d, i) {\r\n                    var element = {stack: [], max: d.max};\r\n                    d.stack.forEach(function(s, j) {\r\n                        enableSet.forEach(function(e) {\r\n                            if (e == s.group) {\r\n                                element.stack.push(s);\r\n                            }\r\n                        })\r\n                    })\r\n                    data.push(element);\r\n                });\r\n\r\n                chart.updateLegendInteraction(data, enableSet, enableSetOld, item.group);\r\n                \r\n            },\r\n\r\n            // 'mouseover': function(item) {\r\n            //     var legendSelector = d3.select(this);\r\n            //     // Add pointer to cursor\r\n            //     legendSelector.style('cursor', 'pointer');\r\n\r\n            //     var selector = d3.select('.c9-custom-path.' + item);\r\n\r\n            //     selector\r\n            //         .transition()\r\n            //             .duration(500)\r\n            //             .ease('bounce')\r\n            //             .attr('d', d3.svg.arc()\r\n            //                 .innerRadius(chartInnerAfter)\r\n            //                 .outerRadius(chartOuterAfter)\r\n            //             )\r\n            //             .style('stroke', '#FFFFF3')\r\n            //             .style('fill-opacity', '1.0');\r\n            //     // var enable = true,\r\n            //     //     dataSet = self.legendDomain,\r\n            //     //     isCurrentEnable = true;\r\n\r\n            //     // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n            //     //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n            //     //     return (d.enable) ? 1 : 0;\r\n            //     // }));\r\n\r\n            //     // // Add pointer to cursor\r\n            //     // selector.style('cursor', 'pointer');\r\n\r\n            //     // // If current selector is disabled, then remains it\r\n            //     // // Else, turn enabled to disabled\r\n            //     // if (!isCurrentEnable) {\r\n            //     //     return false;\r\n            //     // } else {\r\n            //     //     if (totalEnable < 2) return;\r\n            //     //     selector.style('opacity', '0.5');\r\n            //     //     enable = false;\r\n            //     // }\r\n\r\n            //     // chart.pie.value(function(d) {\r\n            //     //     if (d.data.name == item) d.tempEnable = enable;\r\n            //     //     else d.tempEnable = d.enable;\r\n\r\n            //     //     return (d.tempEnable) ? d.data.value : 0;\r\n            //     // });\r\n\r\n            //     // path = path.data(chart.pie(dataSet));\r\n\r\n            //     // path.transition()\r\n            //     //     .duration(200)\r\n            //     //     .attrTween('d', function(d) {\r\n            //     //         var interpolate = d3.interpolate(chart.currentData, d);\r\n            //     //         // Returns an interpolator between the two arbitrary values a and b. \r\n            //     //         // The interpolator implementation is based on the type of the end value b.\r\n            //     //         chart.currentData = interpolate(0);\r\n            //     //         return function(t) {\r\n            //     //             return arc(interpolate(t));\r\n            //     //         };\r\n            //     //     });\r\n\r\n            // },\r\n\r\n            // 'mouseout': function(item) {\r\n\r\n            //     var legendSelector = d3.select(this);\r\n            //     // Add pointer to cursor\r\n            //     legendSelector.style('cursor', 'pointer');\r\n\r\n            //     var selector = d3.select('.c9-custom-path.' + item);\r\n\r\n            //     selector\r\n            //         .transition()\r\n            //             .duration(500)\r\n            //             .ease('bounce')\r\n            //             .attr('d', d3.svg.arc()\r\n            //                 .innerRadius(chartInnerBefore)\r\n            //                 .outerRadius(chartOuterBefore)\r\n            //             )\r\n            //             .style('stroke', '#ffffff')\r\n            //             .style('fill-opacity', '0.5');\r\n            //     // var dataSet = self.legendDomain,\r\n            //     //     isCurrentEnable = true;\r\n\r\n            //     // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n            //     //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n            //     //     return (d.enable) ? 1 : 0;\r\n            //     // }));\r\n\r\n            //     // // Add pointer to cursor\r\n            //     // selector.style('cursor', 'pointer');\r\n\r\n            //     // chart.pie.value(function(d) {\r\n            //     //     if (d.data.name == item && !d.enable) d.enable = enable;\r\n            //     //     return (d.enable) ? d.data.value : 0;\r\n            //     // });\r\n\r\n            //     // if (!isCurrentEnable) {\r\n            //     //     return;\r\n            //     // } else {\r\n            //     //     if (totalEnable < 2 || selector.style('opacity') == '1') return;\r\n            //     //     selector.style('opacity', '1.0');\r\n            //     // }\r\n\r\n            //     // path = path.data(chart.pie(dataSet));\r\n\r\n            //     // path.transition()\r\n            //     //     .duration(200)\r\n            //     //     .attrTween('d', function(d) {\r\n            //     //         var interpolate = d3.interpolate(chart.currentData, d);\r\n            //     //         // Returns an interpolator between the two arbitrary values a and b. \r\n            //     //         // The interpolator implementation is based on the type of the end value b.\r\n            //     //         chart.currentData = interpolate(0);\r\n            //     //         return function(t) {\r\n            //     //             return arc(interpolate(t));\r\n            //     //         };\r\n            //     //     });\r\n\r\n            // }\r\n        \r\n        };\r\n\r\n        if (self.legendShow) {\r\n            \r\n            self.legendItem.on(self.legendItemEventFactory);\r\n\r\n        }\r\n    \r\n    }\r\n\r\n    setYLocation (height, margin) {\r\n        if (this.legendPosition === 'top') {\r\n            return (margin.top / 2);\r\n        } else if (this.legendPosition === 'bottom') {\r\n            return (height - margin.bottom / 2);\r\n        }\r\n    \r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Legend.js\n **/","'use strict';\r\n\r\nexport default class Tooltip {\r\n    constructor(options, body, data) {\r\n        var config = {\r\n            show: true,\r\n            position: top,\r\n            offset: [-10, 0],\r\n            class: 'd3-tip',\r\n        };\r\n\r\n        this._show      = options.show || config.show;\r\n        this._position  = options.position || config.position;\r\n        this._offset    = options.offset || config.offset;\r\n        this._class     = options.class || config.class;\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get show() {\r\n        return this._show;\r\n    }\r\n\r\n\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set show(newShow) {\r\n        if (newShow) {\r\n            this._show = newShow;\r\n        }\r\n    }\r\n\r\n\r\n    /*=====  End of Setter  ======*/\r\n\r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Tooltip.js\n **/","import Helper from './C9.Helper';\r\n\r\nexport default class DataAdapter {\r\n\r\n    constructor(options) {\r\n\r\n        var self = this;\r\n\r\n        var config = {\r\n            // ALL OPTIONS AVAILABLE IN DATA CONFIG\r\n            keys: {\r\n                name: \"name\",\r\n                value: \"value\"\r\n            },\r\n            groups: [],\r\n            stacks: [],\r\n\r\n            // NO NEED TO ADD TO DATA OPTIONS\r\n            // Just use to define default parameters\r\n            colorRange: null,\r\n        };\r\n\r\n        self._keys      = Helper.merge(options.keys, config.keys);\r\n        self._groups    = options.groups    || config.groups;\r\n        self._stacks    = options.stacks    || config.stacks;\r\n        self._colorRange= options.colorRange|| config.colorRange;\r\n\r\n        self._dataSource = null;\r\n        self._dataTarget = []; // Initialize new Array to use Array methods\r\n        self.initDataSource(options);\r\n\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get keys() {\r\n        return this._keys;\r\n    }\r\n\r\n    get dataSource() {\r\n        return this._dataSource;\r\n    }\r\n\r\n    get dataTarget() {\r\n        return this._dataTarget;\r\n    }\r\n\r\n    get groups() {\r\n        return this._groups;\r\n    }\r\n\r\n    get stacks() {\r\n        return this._stacks;\r\n    }\r\n\r\n    get colorRange() {\r\n        return this._colorRange;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set keys(arg) {\r\n        if (arg) {\r\n            this._keys = arg;\r\n        }\r\n    }\r\n\r\n    set dataSource(arg) {\r\n        if (arg) {\r\n            this._dataSource = arg;\r\n        }\r\n    }\r\n\r\n    set dataTarget(arg) {\r\n        if (arg) {\r\n            this._dataTarget = arg;\r\n        }\r\n    }\r\n\r\n    set groups(arg) {\r\n        if (arg) {\r\n            this._groups = arg;\r\n        }\r\n    }\r\n\r\n    set stacks(arg) {\r\n        if (arg) {\r\n            this._stacks = arg;\r\n        }\r\n    }\r\n\r\n    set colorRange(arg) {\r\n        if (arg) {\r\n            this._colorRange = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n\r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    initDataSource(options) {\r\n        var self = this;\r\n\r\n        if (self.hasPlainData(options)) {\r\n            self.executePlainData(options);\r\n        } else if (self.hasFile(options)) {\r\n            self.executeFile(options);\r\n        }\r\n    }\r\n\r\n    hasPlainData(options) {\r\n        return options.plain && Helper.isArray(options.plain);\r\n    }\r\n\r\n    hasFile(options) {\r\n        return options.file && Helper.isObject(options.file);\r\n    }\r\n\r\n    executePlainData(options) {\r\n        var self = this;\r\n\r\n        self._dataSource = options.plain;\r\n    }\r\n\r\n    executeFile(options) {\r\n        var self = this;\r\n\r\n        self._file  = Helper.merge(options.file, config.file);\r\n\r\n        if (self._file && self._file.type) {\r\n\r\n            switch(self._file.type) {\r\n                case \"csv\":\r\n                    self._dataSource = self.getCsv();\r\n                    break;\r\n                case \"tsv\":\r\n                    self._dataSource = self.getTsv();\r\n                    break;\r\n                case \"text\":\r\n                    self._dataSource = self.getText();\r\n                    break;\r\n                case \"json\":\r\n                    self._dataSource = self.getJson();\r\n                    break;\r\n                case \"xml\":\r\n                    self._dataSource = self.getXml();\r\n                    break;\r\n                case \"xhr\":\r\n                    self._dataSource = self.getJson();\r\n                    break;\r\n                default:\r\n                    self._dataSource = self.getJson();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDataTypeForBarChart() {\r\n        var self = this;\r\n\r\n        if (!Helper.isEmpty(self.groups) && Helper.isArray(self.groups)) {\r\n            return \"group\";\r\n        } else if (!Helper.isEmpty(self.stacks) && Helper.isArray(self.stacks)) {\r\n            return \"stack\";\r\n        }\r\n\r\n        return \"single\";\r\n    }\r\n\r\n    getDataTarget(chartType) {\r\n        var self = this;\r\n\r\n        switch(chartType) {\r\n            case \"bar\":\r\n                return self.getDataTargetForBarChart();\r\n                break;\r\n\r\n            case \"line\":\r\n                \r\n                break;\r\n\r\n            case \"pie\":\r\n                return self.getDataTargetForPieChart();\r\n                break;\r\n\r\n            case \"donut\":\r\n                return self.getDataTargetForDonutChart();\r\n                break;\r\n\r\n            case \"timeline\":\r\n                return self.getDataTargetForTimelineChart();\r\n                break;\r\n            default:\r\n                return self.dataSource;\r\n                break;\r\n        }\r\n    }\r\n\r\n    getName(v) {\r\n        return v.name; \r\n    }\r\n\r\n    getValue(v) {\r\n        var self = this;\r\n\r\n        return Helper.get(self.keys, v);\r\n    }\r\n\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /*=================================================\r\n    =            Normalize Data For Charts            =\r\n    =================================================*/\r\n    getDataTargetForBarChart() {\r\n        var self = this;\r\n\r\n        switch(self.getDataTypeForBarChart()) {\r\n            case \"single\":\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _stack = [];\r\n                    let _data = {\r\n                        \"max\": Helper.get(self.keys.value, data),\r\n                        \"stack\": [{\r\n                            \"name\" : Helper.get(self.keys.name, data),\r\n                            \"y0\" : 0,\r\n                            \"y1\" : Helper.get(self.keys.value, data),\r\n                            \"enable\" : true,\r\n                        }]\r\n                    };\r\n                    self.dataTarget.push(_data);\r\n                });\r\n\r\n                return self.dataTarget;\r\n                break;\r\n\r\n            case \"group\":\r\n                var groups = self.groups;\r\n\r\n                // Iterate over each group\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _group      = {\r\n                            \"max\"   : null,\r\n                            \"stack\" : []\r\n                        },\r\n                        _dsArray    = Helper.get(self.keys.value, data);\r\n\r\n                    // If Group has only 1 value, so MAX = this.value\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        _group.max = Helper.max(_dsArray);\r\n                    } else {\r\n                        _group.max = _dsArray;\r\n                    }\r\n\r\n                    let _stack      = [],\r\n                        _stackItem = {\r\n                            \"color\": \"#ffffff\",\r\n                            \"y0\": 0,\r\n                            \"y1\": 1,\r\n                            \"group\": \"\",\r\n                            \"name\": \"\",\r\n                            \"data-ref\": \"\",\r\n                            \"enable\"    : true,\r\n                        },\r\n                        color = self.colorRange;\r\n\r\n                    // Iterate each single bar in a group\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        _dsArray.forEach(function(d, i) {\r\n                            _stackItem = {\r\n                                \"color\": color(i),\r\n                                \"y0\": 0,\r\n                                \"y1\": d,\r\n                                \"group\": groups[i] || i,\r\n                                \"name\": Helper.get(self.keys.name, data),\r\n                                \"data-ref\": Helper.guid(),\r\n                                \"enable\"    : true,\r\n                            };\r\n                            _stack.push(_stackItem);\r\n                        });\r\n                    } else {\r\n                        _stackItem = {\r\n                            \"color\": color(0),\r\n                            \"y0\": 0,\r\n                            \"y1\": _dsArray,\r\n                            \"group\": groups[0] || 0,\r\n                            \"name\": Helper.get(self.keys.name, data),\r\n                            \"data-ref\": Helper.guid(),\r\n                            \"enable\"    : true,\r\n                        };\r\n                        _stack.push(_stackItem);\r\n                    }\r\n                    _group.stack = _stack;\r\n\r\n                    self.dataTarget.push(_group);\r\n                });\r\n\r\n                return self.dataTarget;\r\n                break;\r\n\r\n            case \"stack\":\r\n                var stacks = self.stacks;\r\n\r\n                // Iterate over each group\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _group      = {\r\n                            \"max\"   : null,\r\n                            \"stack\" : []\r\n                        },\r\n                        _dsArray    = Helper.get(self.keys.value, data);\r\n\r\n                    // If Group has only 1 value, so MAX = this.value\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        _group.max = Helper.sum(_dsArray);\r\n                    } else {\r\n                        _group.max = _dsArray;\r\n                    }\r\n\r\n                    let _stack      = [],\r\n                        _stackItem = {\r\n                            \"color\": \"#ffffff\",\r\n                            \"y0\": 0,\r\n                            \"y1\": 1,\r\n                            \"group\": \"\",\r\n                            \"name\": \"\",\r\n                            \"data-ref\": \"\",\r\n                            \"enable\"    : true,\r\n                        },\r\n                        color = self.colorRange;\r\n\r\n                    // Iterate each single bar in a group\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        let _tempY0     = 0;\r\n                        _dsArray.forEach(function(d, i) {\r\n                            _stackItem = {\r\n                                \"color\": color(i),\r\n                                \"y0\": _tempY0,\r\n                                \"y1\": _tempY0 + d,\r\n                                \"group\": stacks[i] || i,\r\n                                \"name\": Helper.get(self.keys.name, data),\r\n                                \"data-ref\": Helper.guid(),\r\n                                \"enable\"    : true,\r\n                            };\r\n                            _stack.push(_stackItem);\r\n                            // Increase tempY0 by d to restore previous y0\r\n                            _tempY0 += d;\r\n                        });\r\n                    } else {\r\n                        _stackItem = {\r\n                            \"color\": color(0),\r\n                            \"y0\": 0,\r\n                            \"y1\": _dsArray,\r\n                            \"group\": stacks[0] || 0,\r\n                            \"name\": Helper.get(self.keys.name, data),\r\n                            \"data-ref\": Helper.guid(),\r\n                            \"enable\"    : true,\r\n                        };\r\n                        _stack.push(_stackItem);\r\n                    }\r\n                    _group.stack = _stack;\r\n\r\n                    self.dataTarget.push(_group);\r\n                });\r\n\r\n                return self.dataTarget;\r\n                break;\r\n\r\n            default:\r\n                return self.dataSource;\r\n                break;\r\n        }\r\n    \r\n    }\r\n\r\n    getDataTargetForPieChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n        self.dataSource.forEach(function(data, index) {\r\n            let _data = {\r\n                \"color\"     : color(index),\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : Helper.get(self.keys.value, data),\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n            self.dataTarget.push(_data);\r\n        });\r\n\r\n        return self.dataTarget;\r\n\r\n    }\r\n\r\n    getDataTargetForDonutChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n        self.dataSource.forEach(function(data, index) {\r\n            let _data = {\r\n                \"color\"     : color(index),\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : Helper.get(self.keys.value, data),\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n            self.dataTarget.push(_data);\r\n        });\r\n\r\n        return self.dataTarget;\r\n\r\n    }\r\n\r\n    getDataTargetForTimelineChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n\r\n        self.dataSource.forEach(function(data, index) {\r\n\r\n            let _data = {\r\n                // \"color\"     : color(index),\r\n                \"icon\"      : data.icon,\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : [],\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n\r\n            let _dsArray    = Helper.get(self.keys.value, data),\r\n                _valueArray = [],\r\n                _valueItem  = {\r\n                    \"start\": null ,\r\n                    \"end\": null ,\r\n                    \"color\": \"#fff\",\r\n                    \"data-ref\": null,\r\n                    \"enable\": true\r\n                };\r\n\r\n            if (Helper.isArray(_dsArray)) {\r\n                _dsArray.forEach(function(d, i) {\r\n                    _valueItem = {\r\n                        \"start\": d.start,\r\n                        \"end\": d.end ,\r\n                        \"color\": color(index),\r\n                        \"data-ref\": Helper.guid(),\r\n                        \"enable\": true,\r\n                    };\r\n                    _valueArray.push(_valueItem);\r\n                });\r\n            } else {\r\n                _valueItem = {\r\n                    \"start\": d.start,\r\n                    \"end\": d.end ,\r\n                    \"color\": color(index),\r\n                    \"data-ref\": Helper.guid(),\r\n                    \"enable\": true,\r\n                };\r\n                _valueArray.push(_valueItem);\r\n            }\r\n            _data.value = _valueArray;\r\n\r\n            self.dataTarget.push(_data);\r\n        });\r\n        return self.dataTarget;\r\n\r\n    }\r\n    \r\n    \r\n    /*=====  End of Normalize Data For Charts  ======*/\r\n    \r\n    /*=============================\r\n    =            Utils            =\r\n    =============================*/\r\n    // getBarColorForBarChart() {\r\n    //     var self = this;\r\n\r\n    //     var color = self.colorRange;\r\n    //     if (typeof color == 'string') {\r\n    //         try {\r\n    //             return d3.scale[color]();    \r\n    //         }\r\n    //         catch(err) {\r\n    //             return function(i) {\r\n    //                 return color;\r\n    //             };\r\n    //         }\r\n    //     } else if (typeof color == 'object') {\r\n    //         return d3.scale.ordinal().range(color);\r\n    //     }\r\n    // }\r\n    \r\n    \r\n    /*=====  End of Utils  ======*/\r\n    \r\n\r\n    /*=============================================\r\n    =            Data Input From Files            =\r\n    =============================================*/\r\n    \r\n    getCsv() {\r\n\r\n        var self = this;\r\n\r\n        d3.csv(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return data;\r\n        });\r\n\r\n    }\r\n\r\n    getTsv() {\r\n\r\n        var self = this;\r\n\r\n        d3.tsv(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return data;\r\n        });\r\n\r\n    }\r\n\r\n    getText() {\r\n\r\n        var self = this;\r\n\r\n        d3.text(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return JSON.parse(data);\r\n        });\r\n\r\n    }\r\n\r\n    getJson() {\r\n        var self = this;\r\n\r\n        d3.json(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return data;\r\n        });\r\n    }\r\n\r\n    getXml() {\r\n        var self = this;\r\n\r\n        d3.xml(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            // Convert the XML document to an array of objects.\r\n            // Note that querySelectorAll returns a NodeList, not a proper Array,\r\n            // so we must use map.call to invoke array methods.\r\n            data = [].map.call(data.querySelectorAll(\"data\"), function(d) {\r\n                return {\r\n                    name: d.querySelector(\"name\").textContent,\r\n                    value: d.querySelector(\"value\").textContent\r\n                };\r\n            });\r\n\r\n            return data;\r\n        });\r\n    }\r\n    \r\n    /*=====  End of Data Input From Files  ======*/\r\n    \r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/C9.DataAdapter.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class DonutChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self = this;\r\n        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\r\n        var config = {\r\n            outerRadius: R,\r\n            innerRadius: R > 80 ? R - 80 : R - 40,\r\n            showText: true // show/hide text on middle or each donut\r\n        };\r\n\r\n        self._outerRadius   = options.outerRadius || config.outerRadius;\r\n        self._innerRadius   = options.innerRadius || config.innerRadius;\r\n        self._showText      = options.showText || config.showText;\r\n        self.body.type      = 'donut';\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget     = da.getDataTarget(\"donut\");\r\n\r\n        self.updateConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get outerRadius() {\r\n        return this._outerRadius;\r\n    }\r\n\r\n    get innerRadius() {\r\n        return this._innerRadius;\r\n    }\r\n\r\n    get showText() {\r\n        return this._showText;\r\n    }\r\n\r\n    get eventFactory() {\r\n        return this._eventFactory;\r\n    }\r\n\r\n    get pathAnim() {\r\n        return this._pathAnim;\r\n    }\r\n\r\n    get tooltip() {\r\n        return this._tooltip;\r\n    }\r\n\r\n    get pie() {\r\n        return this._pie;\r\n    }\r\n\r\n    get arc() {\r\n        return this._arc;\r\n    }\r\n\r\n    get currentData() {\r\n        return this._currentData;\r\n    }\r\n\r\n    get chartType() {\r\n        return this._body.type;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set outerRadius(newOuterRadius) {\r\n        if (newOuterRadius) {\r\n            this._outerRadius = newOuterRadius;\r\n        }\r\n    }\r\n\r\n    set innerRadius(newInnerRadius) {\r\n        if (newInnerRadius) {\r\n            this._innerRadius = newInnerRadius;\r\n        }\r\n    }\r\n\r\n    set showText(newShowText) {\r\n        if (newShowText) {\r\n            this._showText = newShowText;\r\n        }\r\n    }\r\n\r\n    set eventFactory(newEventFactory) {\r\n        if (newEventFactory) {\r\n            this._eventFactory = newEventFactory;\r\n        }\r\n    }\r\n\r\n    set pathAnim(newPathAnim) {\r\n        if (newPathAnim) {\r\n            this._pathAnim = newPathAnim;\r\n        }\r\n    }\r\n\r\n    set tooltip(newTooltip) {\r\n        if (newTooltip) {\r\n            this._tooltip = newTooltip;\r\n        }\r\n    }\r\n\r\n    set pie(newPie) {\r\n        if (newPie) {\r\n            this._pie = newPie;\r\n        }\r\n    }\r\n\r\n    set arc(newArc) {\r\n        if (newArc) {\r\n            this._arc = newArc;\r\n        }\r\n    }\r\n\r\n    set currentData(newCurrentData) {\r\n        if (newCurrentData) {\r\n            this._currentData = newCurrentData;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Update Donut Chart Config\r\n     */\r\n    updateConfig() {\r\n        var self = this;\r\n\r\n        // chartInnerAfter, chartOuterAfter define easing radius of donut chart during animation\r\n        // TODO: Add configs allow users to define these radius\r\n        var width   = self.width - self.margin.left - self.margin.right,\r\n            height  = self.height - self.margin.top - self.margin.bottom,\r\n            color   = self.colorRange,\r\n            chartInnerBefore = self.innerRadius,\r\n            chartOuterBefore = self.outerRadius,\r\n            chartInnerAfter = self.innerRadius,\r\n            chartOuterAfter = self.outerRadius * 1.2;\r\n\r\n        var hoverOptions        = self.hover.options,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        // Define Animations for paths\r\n        self.pathAnim = function(path, dir) {\r\n            switch(dir) {\r\n                \r\n                case 'mouseover':\r\n                    path.transition()\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerAfter)\r\n                            .outerRadius(chartOuterAfter)\r\n                        )\r\n                        // .style('stroke', '#000')\r\n                        .attr('fill-opacity', '1.0');\r\n                    break;\r\n\r\n                case 'mouseout':\r\n                    path.transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        )\r\n                        // .style('stroke', '#000')\r\n                        .attr('fill-opacity', '0.5');\r\n                    break;\r\n                \r\n            }\r\n        \r\n        };\r\n\r\n        // Main Event Dispatch for paths in donut chart\r\n        self.eventFactory = {\r\n\r\n            'mouseover': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseover');\r\n                self.tooltip().mouseover(d);\r\n\r\n                // var thisDonut = self.body..select('.type' + j);\r\n                // thisDonut.select('.value').text(function(donut_d) {\r\n                //     return d.data.val.toFixed(1) + donut_d.unit;\r\n                // });\r\n                // thisDonut.select('.percentage').text(function(donut_d) {\r\n                //     return (d.data.val/donut_d.total*100).toFixed(2) + '%';\r\n                // });\r\n            },\r\n            \r\n            'mouseout': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseout');\r\n                self.tooltip().mouseout(d);\r\n\r\n                // var thisDonut = charts.select('.type' + j);\r\n                // setCenterText(thisDonut);\r\n            }\r\n\r\n        };\r\n\r\n        // Define the tooltip\r\n        // TODO: Define it as a individual CLASS, in C9.Tooltip\r\n        self.tooltip = function() {\r\n            // First, remove all before hover div\r\n            self.body.selectAll('g.c9-custom-tooltip-container').remove();\r\n\r\n            // TODO: Add margin to tooltip configs\r\n            // Default: (100, 100) relative to mouse coordinate and chart margin transformation\r\n            var divOnHover = self.body.append('g')\r\n                                .attr('class', 'c9-custom-tooltip-container')\r\n                                .attr(\"transform\", function() { return 'translate(' + (d3.mouse(this)[0] - 100) +\",\"+ (d3.mouse(this)[1]- 100) + ')'; })\r\n                                .style('display', 'none')\r\n\r\n            var arc = d3.svg.arc()\r\n                    .outerRadius(self.outerRadius)\r\n                    .innerRadius(self.innerRadius);\r\n\r\n            // Rect Container\r\n            divOnHover\r\n                .append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .attr('fill', '#FEE5E2')\r\n                    .attr('stroke', '#FDCCC6')\r\n                    .attr('stroke-width', 2);\r\n            // First line\r\n            var text_1 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 10)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n            // Second line\r\n            var text_2 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 20)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n\r\n            var tooltipEventFactory = {\r\n\r\n                'mouseover': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block');\r\n                        \r\n                   let name = d.data.name || d.data.data.name,\r\n                       value = d.data.value || d.data.data.value;\r\n\r\n                    text_1.text('Name: ' + name);\r\n                    text_2.text('Value: ' + value);\r\n                },\r\n\r\n                'mouseout': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style('display', 'none');\r\n\r\n                }\r\n\r\n            };\r\n\r\n            return tooltipEventFactory;\r\n\r\n        };\r\n\r\n        self.arc = d3.svg.arc()\r\n                    .outerRadius(self.outerRadius)\r\n                    .innerRadius(self.innerRadius);\r\n\r\n        //we can sort data here\r\n        self.pie = d3.layout.pie()\r\n                    .sort(null)\r\n                    .value(function(d) { return d.value; });\r\n\r\n        //draw chart\r\n        var arcs = self.body\r\n                    .append('g')\r\n                        .attr('class', 'c9-chart c9-custom-arc-container')\r\n                        .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\r\n                        .selectAll('.c9-chart-donut.c9-custom-arc')\r\n                        .data(self.pie(self.dataTarget)).enter()\r\n                        .append('g')\r\n                            .attr('class', 'c9-chart-donut c9-custom-arc');\r\n\r\n        // Append main path contains donut\r\n        // TODO: add a unique class to allow Legend could find selected donut/pie\r\n        arcs.append('path')\r\n                .attr('class', 'c9-chart-donut c9-custom-path')\r\n                .attr('data-ref', function(d) { return d.data['data-ref']; })\r\n                .attr('d', self.arc)\r\n                .attr('fill', function(d, i) { return color(i); })\r\n                .attr('stroke', '#ffffff')\r\n                .attr('fill-opacity', '0.5')\r\n                .each(function(d) { self._currentData = d; }); \r\n                // Current data used for calculate interpolation \r\n                // between current arc vs disabled arc\r\n\r\n\r\n        // Append middle text display name\r\n        // if (self.showText) {\r\n        //     arcs.append('text')\r\n        //             .attr('class', 'c9-chart-donut c9-custom-text')\r\n        //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\r\n        //             .attr('dy', '.35em')\r\n        //             .attr('text-anchor', 'middle')\r\n        //             .text(function(d) { return d.data.name; });\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Donut Chart\r\n     */\r\n    draw() {\r\n\r\n        var self = this;\r\n        \r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.dataTarget);\r\n\r\n        // Draw legend\r\n        legend.draw();\r\n        legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\r\n\r\n        // Update interaction of this own chart\r\n        self.updateInteraction();\r\n\r\n    }\r\n\r\n    /**\r\n     * Select all path as type PATH in Donut Chart via its CLASS\r\n     */\r\n    selectAllPath() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                // .selectAll('g')\r\n                    .selectAll('path.c9-chart-donut.c9-custom-path');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllPath(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            selector.on(self._eventFactory);\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.DonutChart.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\n\r\nexport default class LineChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self    = this;\r\n        var config  = {\r\n            pointShow: false,\r\n            pointFill: \"#fb8072\",\r\n            pointStroke: \"#d26b5f\",\r\n            pointOpacity: 1.0,\r\n            pointRadius: 5,\r\n            pointHoverEnable: false,\r\n            interpolate: \"linear\" // refer: https://www.dashingd3js.com/svg-paths-and-d3js\r\n        };\r\n\r\n        self._pointShow         = options.pointShow            ||  config.pointShow;\r\n        self._pointRadius       = options.pointRadius          ||  config.pointRadius;\r\n        self._pointFill         = options.pointFill            ||  config.pointFill;\r\n        self._pointStroke       = options.pointStroke          ||  config.pointStroke;\r\n        self._pointOpacity      = options.pointOpacity         ||  config.pointOpacity;\r\n        self._pointHoverEnable  = options.pointHoverEnable    ||  config.pointHoverEnable;\r\n        self._interpolate       = options.interpolate           ||  config.interpolate;\r\n        self.body.type = \"line\";\r\n\r\n        var width   = self.width - self.margin.left - self.margin.right;\r\n        var height  = self.height - self.margin.top - self.margin.bottom;\r\n\r\n        var x = d3.scale.linear().range([0, width]);\r\n        var y = d3.scale.linear().range([height, 0]);\r\n\r\n        self._x = x;\r\n        self._y = y;\r\n\r\n        self.updateConfig();\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n\r\n    get pointShow() {\r\n        return this._pointShow;\r\n    }\r\n\r\n    get pointFill() {\r\n        return this._pointFill;\r\n    }\r\n\r\n    get pointStroke() {\r\n        return this._pointStroke;\r\n    }\r\n\r\n    get pointOpacity() {\r\n        return this._pointOpacity;\r\n    }\r\n\r\n    get pointRadius() {\r\n        return this._pointRadius;\r\n    }\r\n\r\n    get pointHoverEnable() {\r\n        return this._pointHoverEnable;\r\n    }\r\n\r\n    get interpolate() {\r\n        return this._interpolate;\r\n    }\r\n    \r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    get dataGroup() {\r\n        return this._dataGroup;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n\r\n    set pointShow(newPointShow) {\r\n        if (newPointShow) {\r\n            this._pointShow = newPointShow;\r\n        }\r\n    }\r\n\r\n    set pointFill(newPointFill) {\r\n        if (newPointFill) {\r\n            this._pointFill = newPointFill;\r\n        }\r\n    }\r\n\r\n    set pointStroke(newPointStroke) {\r\n        if (newPointStroke) {\r\n            this._pointStroke = newPointStroke;\r\n        }\r\n    }\r\n\r\n    set pointOpacity(newPointOpacity) {\r\n        if (newPointOpacity) {\r\n            this._pointOpacity = newPointOpacity;\r\n        }\r\n    }\r\n\r\n    set pointRadius(newPointRadius) {\r\n        if (newPointRadius) {\r\n            this._pointRadius = newPointRadius;\r\n        }\r\n    }\r\n\r\n    set pointHoverEnable(newPointHoverEnable) {\r\n        if (newPointHoverEnable) {\r\n            this._pointHoverEnable = newPointHoverEnable;\r\n        }\r\n    }\r\n\r\n    set interpolate(newInterpolate) {\r\n        if (newInterpolate) {\r\n            this._interpolate = newInterpolate;\r\n        }\r\n    }\r\n\r\n    set x(newX) {\r\n        if (newX) {\r\n            this._x = newX;\r\n        }\r\n    }\r\n\r\n    set y(newY) {\r\n        if (newY) {\r\n            this._y = newY;\r\n        }\r\n    }\r\n\r\n    set dataGroup(newDataGroup) {\r\n        if (newDataGroup) {\r\n            this._dataGroup = newDataGroup;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n    /**\r\n     * First init Line Chart\r\n     */\r\n    updateConfig() {\r\n        var self = this,\r\n            x = self._x,\r\n            y = self._y;\r\n\r\n        self._dataGroup = d3.nest()\r\n                        .key(function(d) { return d.Client; })\r\n                        .entries(self.data);\r\n\r\n        var dataGroup = self._dataGroup;\r\n\r\n        x.domain([d3.min(self.data, function(d) {\r\n                    return d.year;\r\n                }), d3.max(self.data, function(d) {\r\n                    return d.year;\r\n                })]);\r\n        y.domain([d3.min(self.data, function(d) {\r\n                    return d.sale;\r\n                }), d3.max(self.data, function(d) {\r\n                    return d.sale;\r\n                })]);\r\n\r\n        self.xAxis = d3.svg.axis()\r\n                        .scale(x);\r\n        self.yAxis = d3.svg.axis()\r\n                        .scale(y)\r\n                        .orient(\"left\");\r\n\r\n        var lineGen = d3.svg.line()\r\n                        .x(function(d) { return x(d.year); })\r\n                        .y(function(d) { return y(d.sale); })\r\n                        .interpolate(self.interpolate);\r\n\r\n        var _body        = self.body,\r\n            _colorRange = self.colorRange,\r\n            _pointShow  = self.pointShow,\r\n            _pointRadius= self.pointRadius,\r\n            _pointFill  = self.pointFill,\r\n            _pointStroke= self.pointStroke,\r\n            _pointOpacity= self.pointOpacity;\r\n\r\n        dataGroup.forEach(function(d,i) {\r\n            _body.append('path')\r\n                .attr('d', lineGen(d.values))\r\n                .attr('stroke', _colorRange(i))\r\n                .attr('stroke-width', 2)\r\n                .attr('id', 'line_'+d.key)\r\n                .attr('fill', 'none');\r\n\r\n            if (_pointShow) {\r\n                _body.selectAll(\"dot\")\r\n                    .data(d.values)\r\n                    .enter()\r\n                    .append(\"circle\")\r\n                    .attr('class', 'c9-chart-line c9-circle-custom')\r\n                    .attr(\"r\", _pointRadius)\r\n                    .attr(\"cx\", function(_d) { return x(_d.year); })\r\n                    .attr(\"cy\", function(_d) { return y(_d.sale); })\r\n                    .style(\"fill\", _pointFill) \r\n                    .style(\"stroke\", _pointStroke)\r\n                    .style(\"opacity\", _pointOpacity);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Line Chart\r\n     */\r\n    draw() {\r\n        var self = this;\r\n\r\n        var axis    = new Axis(self.options, self.body, self.data, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom, self.xAxis, self.yAxis);\r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.colorRange, self.data);\r\n\r\n        // Draw legend\r\n        legend.draw();\r\n\r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * Select all circle as type CIRCLE in Line Chart via its CLASS\r\n     */\r\n    selectAllCircle() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                .selectAll('circle.c9-chart-line.c9-circle-custom');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllCircle(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            // Define the div for the tooltip\r\n            // TODO: Allow user to add custom DIV, CLASS\r\n            // Make sure that: \r\n            // - Rect not overflow the bar, if not, hover effect will be messed\r\n            // -> So, just align the rect to right/left (x: 25) to avoid it\r\n            // -> And, the text will be align also\r\n            var div = self.body\r\n                        .append('g')\r\n                        .style('display', 'none');\r\n                        // .style('opacity', 0);\r\n                // Rect Container\r\n                div.append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .style('fill', '#FEE5E2')\r\n                    .style('stroke', '#FDCCC6')\r\n                    .style('stroke-width', 2);\r\n                // First line\r\n                var text_1 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 10)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n                // Second line\r\n                var text_2 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 20)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n\r\n            selector\r\n                .on(\"mouseover\", function(d) {\r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block')\r\n                        .attr(\"transform\", \"translate(\" + self.x(d.year) + \",\" + self.y(d.sale) + \")\");\r\n\r\n                    text_1.text('Name: ' + d.year);\r\n                    text_2.text('Value: ' + d.sale);\r\n                })\r\n                .on(\"mouseout\", function(d) { \r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style(\"display\", 'none');\r\n                });\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\r\n// Backup - LOL\r\n// var _currentDataY = this.data;\r\n//         _currentDataY.forEach(function(_currentValue,_index,_arr) {\r\n//                                     _currentDataY[_index].coordinate.sort(function(a,b) {\r\n//                                         return (a.y > b.y) ? 1 : ((b.y > a.y) ? -1 : 0);\r\n//                                     });\r\n//                                 });\r\n//         this.sortedDataY         = _currentDataY;\r\n\r\n//         // Get maximum value of coordinate {x, y}\r\n//         var tempMaxY = [];\r\n\r\n//         for (var i=0; i<this.sortedDataY.length; i++) {\r\n//             tempMaxY[i] = this.sortedDataY[i].coordinate[this.sortedDataY[i].coordinate.length - 1].y;\r\n//         }\r\n\r\n//         var _maxY = Math.max(...tempMaxY);\r\n\r\n\r\n//         var _currentDataX = this.data;\r\n//         _currentDataX.forEach(function(currentValue,index,arr) {\r\n//                                     _currentDataX[index].coordinate.sort(function(a,b) {\r\n//                                         return (a.x > b.x) ? 1 : ((b.x > a.x) ? -1 : 0);\r\n//                                     });\r\n//                                 });\r\n//         this.sortedDataX         = _currentDataX;\r\n//         var tempMaxX = [];\r\n//         for (var i=0; i<this.sortedDataX.length; i++) {\r\n//             tempMaxX[i] = this.sortedDataX[i].coordinate[this.sortedDataX[i].coordinate.length - 1].x;\r\n//         }\r\n//         var _maxX = Math.max(...tempMaxX);\r\n\r\n//         // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\r\n//         var width   = this.width - this.margin.left - this.margin.right;\r\n//         var height  = this.height - this.margin.top - this.margin.bottom;\r\n\r\n//         var x = d3.scale.linear().range([0, width]);\r\n//         var y = d3.scale.linear().range([height, 0]);\r\n\r\n//         x.domain([_maxX, 0]);\r\n//         y.domain([_maxY, 0]);\r\n\r\n//         var lineFunc = d3.svg.line()\r\n//             .x(function(d, i) { return x(d.x); })\r\n//             .y(function(d, i) { return y(d.y); })\r\n//             .interpolate(\"linear\");\r\n\r\n//         // this.body.selectAll('g')\r\n//         //         .data(this.sortedDataX)\r\n//         //         .enter()\r\n//         //         .append('path')\r\n//         //         .attr('class', 'line')\r\n//         //         .attr('d', function(d){\r\n//         //             return lineFunc(d.coordinate);\r\n//         //         });\r\n//         this.body.selectAll('dot')\r\n//                 .data(this.sortedDataX)\r\n//                 .selectAll('dot')\r\n//                 .data(function(d,i) {return d;})\r\n//                 .enter()\r\n//                 .append(\"circle\")\r\n//                 .attr(\"r\", 3.5)\r\n//                 .attr(\"cx\", function(d, i) { console.log(d, i); return x(d.coordinate[i].x); })\r\n//                 .attr(\"cy\", function(d, i) { console.log(d, i); return y(d.coordinate[i].y); });\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.LineChart.js\n **/","import Chart from './C9.Chart';\r\n\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Table from './utils/C9.Table';\r\n\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class PieChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        var self = this;\r\n\r\n        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\r\n        var config = {\r\n            radius: R,\r\n            showText: true\r\n        };\r\n\r\n        self._radius    = options.radius || config.radius;\r\n        self._showText  = options.showText || config.showText;\r\n\r\n        self.body.type  = 'pie';\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget     = da.getDataTarget(\"pie\");\r\n\r\n        self.updateConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    get showText() {\r\n        return this._showText;\r\n    }\r\n\r\n    get eventFactory() {\r\n        return this._eventFactory;\r\n    }\r\n\r\n    get pathAnim() {\r\n        return this._pathAnim;\r\n    }\r\n\r\n    get tooltip() {\r\n        return this._tooltip;\r\n    }\r\n\r\n    get pie() {\r\n        return this._pie;\r\n    }\r\n\r\n    get arc() {\r\n        return this._arc;\r\n    }\r\n\r\n    get currentData() {\r\n        return this._currentData;\r\n    }\r\n\r\n    get chartType() {\r\n        return this._body.type;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set radius(newradius) {\r\n        if (newradius) {\r\n            this._radius = newradius;\r\n        }\r\n    }\r\n\r\n    set showText(newShowText) {\r\n        if (newShowText) {\r\n            this._showText = newShowText;\r\n        }\r\n    }\r\n\r\n    set eventFactory(newEventFactory) {\r\n        if (newEventFactory) {\r\n            this._eventFactory = newEventFactory;\r\n        }\r\n    }\r\n\r\n    set pathAnim(newPathAnim) {\r\n        if (newPathAnim) {\r\n            this._pathAnim = newPathAnim;\r\n        }\r\n    }\r\n\r\n    set tooltip(newTooltip) {\r\n        if (newTooltip) {\r\n            this._tooltip = newTooltip;\r\n        }\r\n    }\r\n\r\n    set pie(newPie) {\r\n        if (newPie) {\r\n            this._pie = newPie;\r\n        }\r\n    }\r\n\r\n    set arc(newArc) {\r\n        if (newArc) {\r\n            this._arc = newArc;\r\n        }\r\n    }\r\n\r\n    set currentData(newCurrentData) {\r\n        if (newCurrentData) {\r\n            this._currentData = newCurrentData;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Update Donut Chart Config\r\n     */\r\n    updateConfig() {\r\n        var self = this;\r\n\r\n        // chartInnerAfter, chartOuterAfter define easing radius of pie chart during animation\r\n        // TODO: Add configs allow users to define these radius\r\n        var width   = self.width - self.margin.left - self.margin.right,\r\n            height  = self.height - self.margin.top - self.margin.bottom,\r\n            color   = self.colorRange,\r\n            chartInnerBefore = 0,\r\n            chartOuterBefore = self.radius,\r\n            chartInnerAfter = 0,\r\n            chartOuterAfter = self.radius * 1.2;\r\n\r\n        var hoverOptions        = self.hover.options,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        // Define Animations for paths\r\n        self.pathAnim = function(path, dir) {\r\n            switch(dir) {\r\n\r\n                case 'mouseover':\r\n                    path.transition()\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerAfter)\r\n                            .outerRadius(chartOuterAfter)\r\n                        )\r\n                        // .style('stroke', '#FFFFF3')\r\n                        .attr('fill-opacity', '1.0');\r\n                    break;\r\n                    \r\n                case 'mouseout':\r\n                    path.transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        )\r\n                        // .style('stroke', '#ffffff')\r\n                        .attr('fill-opacity', '0.5');\r\n                    break;\r\n            }\r\n        };\r\n\r\n        // Main Event Dispatch for paths in pie chart\r\n        self.eventFactory = {\r\n\r\n            'mouseover': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseover');\r\n                self.tooltip().mouseover(d);\r\n\r\n                // var thisDonut = self.body..select('.type' + j);\r\n                // thisDonut.select('.value').text(function(pie_d) {\r\n                //     return d.data.val.toFixed(1) + pie_d.unit;\r\n                // });\r\n                // thisDonut.select('.percentage').text(function(pie_d) {\r\n                //     return (d.data.val/pie_d.total*100).toFixed(2) + '%';\r\n                // });\r\n            },\r\n            \r\n            'mouseout': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseout');\r\n                self.tooltip().mouseout(d);\r\n\r\n                // var thisDonut = charts.select('.type' + j);\r\n                // setCenterText(thisDonut);\r\n            }\r\n\r\n        };\r\n\r\n        // Define the tooltip\r\n        // TODO: Define it as a individual CLASS, in C9.Tooltip\r\n        self.tooltip = function() {\r\n            // First, remove all before hover div\r\n            self.body.selectAll('g.c9-custom-tooltip-container').remove();\r\n\r\n            // TODO: Add margin to tooltip configs\r\n            // Default: (100, 100) relative to mouse coordinate and chart margin transformation\r\n            var divOnHover = self.body.append('g')\r\n                                .attr('class', 'c9-custom-tooltip-container')\r\n                                .attr(\"transform\", function() { return 'translate(' + (d3.mouse(this)[0] - 100) +\",\"+ (d3.mouse(this)[1]- 100) + ')'; })\r\n                                .style('display', 'none')\r\n\r\n            var arc = d3.svg.arc()\r\n                    .innerRadius(0)\r\n                    .outerRadius(self.radius);\r\n\r\n            // Rect Container\r\n            divOnHover\r\n                .append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .style('fill', '#FEE5E2')\r\n                    .style('stroke', '#FDCCC6')\r\n                    .style('stroke-width', 2);\r\n            // First line\r\n            var text_1 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 10)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n            // Second line\r\n            var text_2 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 20)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n\r\n            var tooltipEventFactory = {\r\n\r\n                'mouseover': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block');\r\n\r\n                    let name = d.data.name || d.data.data.name,\r\n                        value = d.data.value || d.data.data.value;\r\n                        \r\n                    text_1.text('Name: ' + name);\r\n                    text_2.text('Value: ' + value);\r\n                },\r\n\r\n                'mouseout': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style('display', 'none');\r\n\r\n                }\r\n\r\n            };\r\n\r\n            return tooltipEventFactory;\r\n\r\n        };\r\n\r\n        self.arc = d3.svg.arc()\r\n                    .innerRadius(0)\r\n                    .outerRadius(self.radius);\r\n\r\n        //we can sort data here\r\n        self.pie = d3.layout.pie()\r\n                    .sort(null)\r\n                    .value(function(d) { return d.value; });\r\n\r\n        //draw chart\r\n        var arcs = self.body\r\n                    .append('g')\r\n                        .attr('class', 'c9-chart c9-custom-arc-container')\r\n                        .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\r\n                        .selectAll('.c9-chart-pie.c9-custom-arc')\r\n                        .data(self.pie(self.dataTarget)).enter()\r\n                        .append('g')\r\n                            .attr('class', 'c9-chart-pie c9-custom-arc');\r\n\r\n        // Append main path contains pie\r\n        arcs.append('path')\r\n                .attr('class', 'c9-chart-pie c9-custom-path')\r\n                .attr('data-ref', function(d) { return d.data['data-ref']; })\r\n                .attr('d', self.arc)\r\n                .attr('fill', function(d, i) { return color(i); })\r\n                .attr('stroke', '#ffffff')\r\n                .attr('fill-opacity', '0.5')\r\n                .each(function(d) { self._currentData = d; }); \r\n                // Current data used for calculate interpolation \r\n                // between current arc vs disabled arc\r\n\r\n\r\n        // Append middle text display name\r\n        // if (self.showText) {\r\n        //     arcs.append('text')\r\n        //             .attr('class', 'c9-chart-pie c9-custom-text')\r\n        //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\r\n        //             .attr('dy', '.35em')\r\n        //             .attr('text-anchor', 'middle')\r\n        //             .text(function(d) { return d.data.name; });\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Donut Chart\r\n     */\r\n    draw() {\r\n\r\n        var self = this;\r\n        \r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.dataTarget);\r\n        var table   = new Table(self.options.table, self.body, self.dataTarget);\r\n\r\n        // Draw legend\r\n        legend.draw();\r\n        legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\r\n\r\n        // Draw table\r\n        table.draw();\r\n\r\n        // Update interaction of this own chart\r\n        self.updateInteraction();\r\n\r\n    }\r\n\r\n    /**\r\n     * Select all path as type PATH in Donut Chart via its CLASS\r\n     */\r\n    selectAllPath() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                // .selectAll('g')\r\n                    .selectAll('path.c9-chart-pie.c9-custom-path');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllPath(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            selector.on(self.eventFactory);\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.PieChart.js\n **/","'use strict';\r\n\r\nimport Helper from '../../helper/C9.Helper';\r\n\r\nexport\r\ndefault class Table {\r\n    constructor(options, body, data) {\r\n        var config = {\r\n            container: \"body\",\r\n            show: false,\r\n            headings: [\"Name\", \"Value\"],\r\n            style: \"default\", // \"strip\", \"border\"\r\n            serial: true,\r\n            hover: {\r\n                enable: true,\r\n                callback: null\r\n            },\r\n            click: {\r\n                enable: true,\r\n                callback: null\r\n            }\r\n        };\r\n\r\n        var self = this;\r\n\r\n        self._container = options.container || config.container;\r\n        self._show = options.show ? options.show : config.show;\r\n        self._headings = options.headings || config.headings;\r\n        self._style = options.style || config.style;\r\n        self._serial = options.serial || config.serial;\r\n        self._hover = Helper.merge(options.hover, config.hover);\r\n        self._click = Helper.merge(options.click, config.click);\r\n\r\n        self._data = data;\r\n        self._body = body;\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get body() {\r\n        return this._body;\r\n    }\r\n\r\n    get container() {\r\n        return this._container;\r\n    }\r\n\r\n    get show() {\r\n        return this._show;\r\n    }\r\n\r\n    get headings() {\r\n        return this._headings;\r\n    }\r\n\r\n    get style() {\r\n        return this._style;\r\n    }\r\n\r\n    get serial() {\r\n        return this._serial;\r\n    }\r\n\r\n    get hover() {\r\n        return this._hover;\r\n    }\r\n\r\n    get click() {\r\n        return this._click;\r\n    }\r\n\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set data(arg) {\r\n        if (arg) {\r\n            this._data = arg;\r\n        }\r\n    }\r\n\r\n    set body(arg) {\r\n        if (arg) {\r\n            this._body = arg;\r\n        }\r\n    }\r\n\r\n    set container(arg) {\r\n        if (arg) {\r\n            this._container = arg;\r\n        }\r\n    }\r\n\r\n    set show(arg) {\r\n        if (arg) {\r\n            this._show = arg;\r\n        }\r\n    }\r\n\r\n    set headings(arg) {\r\n        if (arg) {\r\n            this._headings = arg;\r\n        }\r\n    }\r\n\r\n    set style(arg) {\r\n        if (arg) {\r\n            this._style = arg;\r\n        }\r\n    }\r\n\r\n    set serial(arg) {\r\n        if (arg) {\r\n            this._serial = arg;\r\n        }\r\n    }\r\n\r\n    set hover(arg) {\r\n        if (arg) {\r\n            this._hover = arg;\r\n        }\r\n    }\r\n\r\n    set click(arg) {\r\n        if (arg) {\r\n            this._click = arg;\r\n        }\r\n    }\r\n\r\n    /*=====  End of Setter  ======*/\r\n\r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    draw() {\r\n        var self = this;\r\n\r\n        if (self.show) {\r\n\r\n            var table = d3.select(self.container).append(\"table\");\r\n            var thead = table.append(\"thead\");\r\n            var tbody = table.append(\"tbody\");\r\n\r\n            // Append the headers\r\n            thead.append(\"tr\")\r\n                .selectAll(\"th\")\r\n                .append(\"th\")\r\n                    .text(\"No\")\r\n                .data(self.headings)\r\n                .enter()\r\n                    .append(\"th\")\r\n                        .text(function(d) {\r\n                            return d;\r\n                        });\r\n\r\n\r\n            // Bind each statistic to a line of the table\r\n            // Show serial no.\r\n            var rows = tbody\r\n                .selectAll(\"tr\")\r\n                .data(self.data)\r\n                    .enter()\r\n                        .append(\"tr\");\r\n\r\n            rows.append(\"td\")\r\n                    .text(function(d, i) {\r\n                        return i + 1;\r\n                    });\r\n\r\n\r\n            // Add statistic names to each row\r\n            rows.append(\"td\")\r\n                    .text(function(d) {\r\n                        return d.name;\r\n                    });\r\n\r\n\r\n            // Add values to each row\r\n            rows.append(\"td\")\r\n                    .text(function(d) {\r\n                        return d.value;\r\n                    });\r\n\r\n        }\r\n\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Table.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Helper from '../helper/C9.Helper';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class TimeLine extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self = this;\r\n\r\n        var config = {\r\n            rowSeparator: \"rgb(154, 154, 154)\",\r\n            backgroundColor: null,\r\n            starting: 0,\r\n            ending: 0,\r\n            stack: false, //test\r\n            // rotateTicks: false,\r\n            itemHeight: 25,\r\n            itemMargin: 20,\r\n            labelMargin: 20,\r\n            striped: null\r\n        };\r\n\r\n        self.body.type        = \"timeline\";\r\n        self._stack             = options.stack || config.stack;\r\n        self._starting          = options.starting || config.starting;\r\n        self._ending            = options.ending || config.ending;\r\n        self._rowSeparator      = options.rowSeparator || config.rowSeparator;\r\n        self._backgroundColor   = options.backgroundColor || config.backgroundColor;\r\n        self._itemHeight        = options.itemHeight || config.itemHeight;\r\n        self._itemMargin        = options.itemMargin || config.itemMargin;\r\n        self._labelMargin       = options.labelMargin || config.labelMargin;\r\n        self._maxStack          = 1;\r\n        self._striped           = options.striped || config.striped;\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget = da.getDataTarget(\"timeline\");\r\n\r\n        self.initTimelineConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get stack() {\r\n        return this._stack;\r\n    }\r\n\r\n    get backgroundColor() {\r\n        return this._backgroundColor;\r\n    }\r\n\r\n    get rowSeparator() {\r\n        return this._rowSeparator;\r\n    }\r\n\r\n    get starting() {\r\n        return this._starting;\r\n    }\r\n\r\n    get ending() {\r\n        return this._ending;\r\n    }\r\n\r\n    get itemHeight() {\r\n        return this._itemHeight;\r\n    }\r\n\r\n    get itemMargin() {\r\n        return this._itemMargin;\r\n    }\r\n\r\n    get labelMargin() {\r\n        return this._labelMargin;\r\n    }\r\n\r\n    get maxStack() {\r\n        return this._maxStack;\r\n    }\r\n\r\n    get striped() {\r\n        return this._striped;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set stack(newStack) {\r\n        if (newStack) {\r\n            this._stacked = newStack;\r\n        }\r\n    }\r\n\r\n    set backgroundColor(newBackgroundColor) {\r\n        if (newBackgroundColor) {\r\n            this._backgroundColor = newBackgroundColor;\r\n        }\r\n    }\r\n\r\n    set rowSeparator(newRowSeparator) {\r\n        if (newRowSeparator) {\r\n            this._rowSeparator = newRowSeparator;\r\n        }\r\n    }\r\n\r\n    set starting(newStarting) {\r\n        if (newStarting) {\r\n            this._starting = newStarting;\r\n        }\r\n    }\r\n\r\n    set ending(newEnding) {\r\n        if (newEnding) {\r\n            this._ending = newEnding;\r\n        }\r\n    }\r\n\r\n    set itemHeight(newItemHeight) {\r\n        if (newItemHeight) {\r\n            this._itemHeight = newItemHeight;\r\n        }\r\n    }\r\n\r\n    set itemMargin(newItemMargin) {\r\n        if (newItemMargin) {\r\n            this._itemMargin = newItemMargin;\r\n        }\r\n    }\r\n\r\n    set labelMargin(newLabelMargin) {\r\n        if (newLabelMargin) {\r\n            this._labelMargin = newLabelMargin;\r\n        }\r\n    }\r\n\r\n    set maxStack(newMaxStack) {\r\n        if (newMaxStack) {\r\n            this._maxStack = newMaxStack;\r\n        }\r\n    }\r\n\r\n    set striped(newStriped) {\r\n        if (newStriped) {\r\n            this._striped = newStriped;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n    initTimelineConfig() {\r\n        var self = this;\r\n        var color = self.colorRange;\r\n        var stackList = {},\r\n            maxStack = 0,\r\n            minTime = 0,\r\n            maxTime = 0,\r\n            width = self.width - self.margin.left - self.margin.right,\r\n            height = self.height - self.margin.top - self.margin.bottom;\r\n\r\n        // count number of stack and calculate min time, max time from data\r\n        if (self.stack || self.ending === 0 || self.starting === 0) {\r\n            \r\n            self.dataTarget.forEach(function (datum, index) {\r\n\r\n                if (self.stack && Object.keys(stackList).indexOf(index) == -1) {\r\n                    stackList[index] = maxStack;\r\n                    maxStack++;\r\n                }\r\n\r\n                datum.value.forEach(function (time, i) {\r\n                    if(self.starting === 0)\r\n                        if (time.start < minTime || minTime === 0)\r\n                            minTime = time.start;\r\n                    if(self.ending === 0) {\r\n                        if (time.start > maxTime)\r\n                            maxTime = time.start;\r\n                        if (time.end > maxTime)\r\n                            maxTime = time.end;\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (self.ending === 0) {\r\n              self.ending = maxTime;\r\n            }\r\n            if (self.starting === 0) {\r\n              self.starting = minTime;\r\n            }\r\n        }\r\n\r\n        self.maxStack = maxStack;\r\n        var scale = width / (self.ending - self.starting);\r\n\r\n        //draw border\r\n        self.body.append(\"rect\")\r\n            .attr(\"class\", \"timeline-border-bar\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"width\", width)\r\n            .attr(\"y\", 0 - self.itemMargin / 2)\r\n            .attr(\"height\", (self.itemHeight + self.itemMargin) * self.dataTarget.length)\r\n            .attr(\"stroke\", \"rgb(154, 154, 154)\")\r\n            .attr(\"stroke-width\", 2)\r\n            .attr(\"fill\", \"none\");\r\n\r\n        self.dataTarget.forEach( function(datum, index){\r\n            var data = datum.value;\r\n\r\n            //draw background\r\n            if (self.backgroundColor) { \r\n                var barYAxis = ((self.itemHeight + self.itemMargin) * stackList[index]);\r\n                self.body.selectAll(\"g\")\r\n                    .data(data).enter()\r\n                    .insert(\"rect\")\r\n                    .attr(\"class\", \"timeline-background-bar\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"width\", width)\r\n                    .attr(\"y\", barYAxis - self.itemMargin / 2)\r\n                    .attr(\"height\", self.itemHeight + self.itemMargin)\r\n                    .attr(\"fill\", Helper.isArray(self.backgroundColor) ? self.backgroundColor[index % (self.maxStack - 1)] : self.backgroundColor);\r\n            }\r\n\r\n            if (self.striped) { \r\n                var barYAxis = ((self.itemHeight + self.itemMargin) * stackList[index]);\r\n                self.body.selectAll(\"g\")\r\n                    .data(data).enter()\r\n                    .insert(\"rect\")\r\n                    .attr(\"class\", \"timeline-background-bar\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"width\", width)\r\n                    .attr(\"y\", barYAxis - self.itemMargin / 2)\r\n                    .attr(\"height\", self.itemHeight + self.itemMargin)\r\n                    .attr(\"fill\", index % 2 ? \"rgb(255, 255, 255)\" : \"rgb(230, 230, 230)\");\r\n            }\r\n\r\n            //draw item\r\n            self.body.selectAll(\"g\")\r\n                .data(data).enter()\r\n                .append(function (d, i) {\r\n                    return document.createElementNS(d3.ns.prefix.svg, d.end ? \"rect\" : \"circle\");\r\n                })\r\n                .attr(\"x\", getXPos)\r\n                .attr(\"y\", getStackPosition)\r\n                .attr(\"width\", function (d, i) {\r\n                    return (d.end - d.start) * scale;\r\n                })\r\n                .attr(\"cy\", function (d, i) {\r\n                    return getStackPosition(d, i) + self.itemHeight / 2;\r\n                })\r\n                .attr(\"cx\", getXPos)\r\n                .attr(\"r\", self.itemHeight / 2)\r\n                .attr(\"height\", self.itemHeight)\r\n                .style(\"fill\", color(index));\r\n\r\n            //draw label inside item\r\n            // self.body.selectAll(\"g\")\r\n            //     .data(data).enter()\r\n            //     .append(\"text\")\r\n            //     .attr(\"x\", getXTextPos)\r\n            //     .attr(\"y\", getStackTextPosition)\r\n            //     .text(function(d) {\r\n            //       return d.name;\r\n            //     });\r\n\r\n            if (self.rowSeparator && index < self.maxStack - 1) {\r\n                var lineYAxis = ( self.itemHeight + self.itemMargin / 2 + (self.itemHeight + self.itemMargin) * stackList[index]);\r\n                self.body.append(\"svg:line\")\r\n                  .attr(\"class\", \"timeline-row-separator\")\r\n                  .attr(\"x1\", 0)\r\n                  .attr(\"x2\", width)\r\n                  .attr(\"y1\", lineYAxis)\r\n                  .attr(\"y2\", lineYAxis)\r\n                  .attr(\"stroke-width\", 3)\r\n                  .attr(\"stroke\", Helper.isArray(self.rowSeparator) ? self.rowSeparator[index % (self.maxStack - 1)] : self.rowSeparator);\r\n            }\r\n\r\n            //draw the label left side item\r\n            if (!Helper.isEmpty(datum.name) && datum.name != \"\") { \r\n                var rowsDown = self.margin.top + (self.itemHeight + self.itemMargin) * (stackList[index] === undefined ? 0 : stackList[index]) + self.itemHeight * 0.75;\r\n\r\n                d3.select(self.body[0][0].parentNode).append(\"text\")\r\n                    .attr(\"class\", \"timeline-label\")\r\n                    .attr(\"transform\", \"translate(\" + self.labelMargin + \",\" + rowsDown + \")\")\r\n                    .text(datum.name);\r\n            }\r\n            //draw icon\r\n            else if (!Helper.isEmpty(datum.icon) && datum.icon != \"\") {\r\n                d3.select(self.body[0][0].parentNode).append(\"image\")\r\n                    .attr(\"class\", \"timeline-label\")\r\n                    .attr(\"transform\", \"translate(\"+ self.labelMargin +\",\"+ (self.margin.top + (self.itemHeight + self.itemMargin) * stackList[index])+\")\")\r\n                    .attr(\"xlink:href\", datum.icon)\r\n                    .attr(\"width\", self.itemHeight)\r\n                    .attr(\"height\", self.itemHeight);\r\n            }\r\n\r\n            function getStackPosition(d, i) {\r\n                if (self.stack) {\r\n                    return (self.itemHeight + self.itemMargin) * stackList[index];\r\n                }\r\n                return 0;\r\n            }\r\n            function getStackTextPosition(d, i) {\r\n                if (self.stack) {\r\n                    return (self.itemHeight + self.itemMargin) * stackList[index] + self.itemHeight * 0.75;\r\n                }\r\n                return self.itemHeight * 0.75;\r\n            }\r\n        });\r\n\r\n        function getXPos(d, i) {\r\n            return (d.start - self.starting) * scale;\r\n        }\r\n\r\n        function getXTextPos(d, i) {\r\n            return (d.start - self.starting) * scale + 5;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.options.starting = this.starting;\r\n        this.options.ending = this.ending;\r\n        // var axis    = new Axis(this.options, this.body, this.dataTarget, this.width - this.margin.left - this.margin.right, (this.itemHeight + this.itemMargin) * this.maxStack, null, null);\r\n        var title   = new Title(this.options, this.body, this.width, this.height, this.margin);    \r\n        var legend  = new Legend(this.options, this.body, this.colorRange, this.dataTarget);\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.TimeLine.js\n **/","export default class Map {\r\n    constructor(options) {\r\n        var self    = this;\r\n        var config  = {\r\n            // container\r\n            id: \"body\",\r\n            \r\n            // Layers:\r\n            // BingMaps, OSM, Raster, Tile, TileImage, Vector, VectorTile,...\r\n            // REF: http://openlayers.org/en/latest/apidoc/ol.source.html?stableonly=true\r\n            layers: {\r\n                type: \"Tile\",\r\n                source: {\r\n                    name: \"OSM\"\r\n                }\r\n            }, \r\n            view: {\r\n                lat: 0,\r\n                lon: 0,\r\n                zoom: 2\r\n            }\r\n        };\r\n\r\n        self._id        = options.id        || config.id;\r\n        self._data      = options.data      || config.data;\r\n        self._view      = options.view      || config.view;\r\n        self._markers   = options.markers   || [];\r\n        self._options   = options;\r\n        self._layers    = options.layers    || config.layers;\r\n        self.initMapConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get view() {\r\n        return this._view;\r\n    }\r\n\r\n    get markers() {\r\n        return this._markers;\r\n    }\r\n\r\n    get layers() {\r\n        return this._layers;\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n    \r\n    \r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n\r\n    set id(newId) {\r\n        if (newId) {\r\n            this._id = newId;\r\n        }\r\n    }\r\n\r\n    set height(newHeight) {\r\n        if (newHeight) {\r\n            this._height = newHeight;    \r\n        }\r\n    }\r\n\r\n    set width(newWidth) {\r\n        if (newWidth) {\r\n            this._width = newWidth;\r\n        }\r\n    }\r\n\r\n    set view(newView) {\r\n        if (newView) {\r\n            this._view = newView;\r\n        }\r\n    }\r\n\r\n    set markers(newMarkers) {\r\n        if (newMarkers) {\r\n            this._markers = newMarkers;\r\n        }\r\n    }\r\n\r\n    set layers(newLayers) {\r\n        if (newLayers) {\r\n            this._layers = newLayers;\r\n        }\r\n    }\r\n\r\n    set data(newData) {\r\n        if (newData) {\r\n            this._data = newData;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    \r\n    initMapConfig() {\r\n        var self = this;\r\n\r\n        //c9Layers contain all layers\r\n        self.c9Layers = [];\r\n        //c9Markers contain all markers\r\n        self.c9Markers = new ol.source.Vector({});\r\n\r\n        //init all thing relating to user's data\r\n\r\n        //layer\r\n        self.initLayer();\r\n        \r\n        //quick markers\r\n        self.initMarker();\r\n    }\r\n\r\n    draw() {\r\n        var self = this;\r\n        self.c9View = new ol.View({\r\n            center: ol.proj.fromLonLat([self.view.lon, self.view.lat]),\r\n            zoom: self.view.zoom > 2 ? self.view.zoom : 2,\r\n            minZoom: 2,\r\n        });\r\n        self.c9Map = new ol.Map({\r\n            target: self.id,\r\n            layers: self.c9Layers,\r\n            view: self.c9View,\r\n            interactions : ol.interaction.defaults({doubleClickZoom :false})\r\n        });\r\n\r\n        //TODO - Create a function to gather all these event function\r\n        self.updateInteraction();\r\n\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /**\r\n     * Create layer\r\n     * @param  {String} type of layer\r\n     * @param  {source} source data defined by C9\r\n     */\r\n    createLayer(type, source = undefined){\r\n        var self = this;\r\n        var layer = new ol.layer[type];\r\n        layer.setSource(self.setupSource(source));\r\n        self.c9Layers.push(layer);\r\n    }\r\n\r\n    /**\r\n     * Init Layer base on first user's data\r\n     */\r\n    initLayer() {\r\n        var self = this;\r\n        var layers = self.layers;\r\n\r\n        if (layers instanceof Array) {\r\n            layers.forEach(function(l, i) {\r\n                self.createLayer(l.type, l.source);\r\n            })\r\n        }\r\n        else {\r\n            self.createLayer(layers.type, layers.source);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create marker style\r\n     * @param  {String} image source\r\n     * @param  {Number} scale\r\n     * @return {ol.style.Style} return marker style\r\n     */\r\n    createMarkerStyle(imgSrc, scale){\r\n        return new ol.style.Style({\r\n            image: new ol.style.Icon({\r\n                anchor: [0.5, 1], //middle-width and bottom-height of image\r\n                src: imgSrc,\r\n                scale: scale\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create marker\r\n     * @param  {Number} latitude of marker\r\n     * @param  {Number} longitude of marker\r\n     * @param  {String} image source (support for both local and net)\r\n     * @param  {Number} scale image if its size is too large - default = 1\r\n     */\r\n    createMarker(lat, lon, imgSrc = 'http://s21.postimg.org/blklb8scn/marker_icon.png', scale = 1){\r\n        var self = this;\r\n\r\n        var marker = new ol.Feature({\r\n            type: 'c9GeoMarker',\r\n            geometry: new ol.geom.Point(ol.proj.fromLonLat([lon, lat]))\r\n        });\r\n        marker.setStyle(self.createMarkerStyle(imgSrc, scale));\r\n\r\n        //add this marker to marker list (c9Markers)\r\n        self.c9Markers.addFeature(marker);\r\n    }\r\n\r\n    /**\r\n     * marker first set up\r\n     */\r\n    initMarker() {\r\n        var self = this;\r\n        //data\r\n        var markers = self.markers;\r\n        //add marker layer to layer list (c9Layers)\r\n        self.c9Layers.push(new ol.layer.Vector({\r\n            source: self.c9Markers\r\n        }));\r\n\r\n        if (markers.length === 0) return;\r\n\r\n        if (markers instanceof Array) {\r\n            markers.forEach(function(m, i) {\r\n                self.createMarker(m.lat, m.lon, m.img, m.scale);\r\n            });\r\n        }\r\n        else {\r\n            self.createMarker(markers.lat, markers.lon, markers.img, markers.scale);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setup source for layer\r\n     * @param  {Object} source data style defined by c9\r\n     * @return {String} return source (ol.source)\r\n     */\r\n    setupSource(s){\r\n        var source = undefined;\r\n        switch (s.name) {\r\n            case 'BingMaps':\r\n                source = new ol.source.BingMaps({\r\n                    key: s.key,\r\n                    imagerySet: s.imagerySet || 'Road'\r\n                });\r\n                break;\r\n            case 'Stamen':\r\n                source = new ol.source.Stamen({\r\n                    layer: s.layer || 'watercolor'\r\n                });\r\n                break;\r\n            /********** TileJSON require ol >= v3.8.2 **********/\r\n            case 'TileJSON':\r\n                source = new ol.source.TileJSON({\r\n                    url: s.url,\r\n                    crossOrigin: s.crossOrigin || 'anonymous'\r\n                });\r\n                break;\r\n            case 'TileArcGISRest':\r\n                source = new ol.source.TileArcGISRest({\r\n                    url: s.url\r\n                });\r\n                break;\r\n            case 'Vector':\r\n                source = new ol.source.Vector({\r\n                    url: s.url,\r\n                    format: s.format === undefined ? null : new ol.format[s.format]({\r\n                        extractStyles: s.extractStyles || false\r\n                    })\r\n                });\r\n                break;\r\n            case 'Cluster':\r\n                source = new ol.source.Cluster({\r\n                    distance: s.distance || 20,\r\n                    source: this.setupSource(s.source)\r\n                });\r\n                break;\r\n            case 'ImageVector':\r\n                source = new ol.source.ImageVector({\r\n                    source: this.setupSource(s.source)\r\n                });\r\n                break;\r\n            default: \r\n                source = new ol.source.OSM();\r\n                break;\r\n\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Create marker's flash effect\r\n     * @param  {ol.Feature}\r\n     */\r\n    createMarkerEffect(feature){\r\n        var self = this;\r\n        var duration = 3000;\r\n        var start = new Date().getTime();\r\n        var listenerKey;\r\n\r\n        function animate(event) {\r\n            var vectorContext = event.vectorContext;\r\n            var frameState = event.frameState;\r\n            var flashGeom = feature.getGeometry().clone();\r\n            var elapsed = frameState.time - start;\r\n            var elapsedRatio = elapsed / duration;\r\n            // radius will be 5 at start and 30 at end.\r\n            var radius = ol.easing.easeOut(elapsedRatio) * 25 + 5;\r\n            var opacity = ol.easing.easeOut(1 - elapsedRatio);\r\n\r\n            var style = new ol.style.Style({\r\n                image: new ol.style.Circle({\r\n                    radius: radius,\r\n                    snapToPixel: false,\r\n                    stroke: new ol.style.Stroke({\r\n                        color: 'rgba(255, 0, 0, ' + opacity + ')',\r\n                        width: 0.25 + opacity\r\n                    })\r\n                })\r\n            });\r\n\r\n            vectorContext.setStyle(style);\r\n            vectorContext.drawGeometry(flashGeom);\r\n            if (elapsed > duration) {\r\n                ol.Observable.unByKey(listenerKey);\r\n                return;\r\n            }\r\n            // tell OL3 to continue postcompose animation\r\n            self.c9Map.render();\r\n        }\r\n        listenerKey = self.c9Map.on('postcompose', animate);\r\n    }\r\n\r\n    updateInteraction(){\r\n        var self = this;\r\n        const LEFT_KEY = 37, RIGHT_KEY = 39, DURATION = 1000, LOAD_MAP_DELAY = 500;\r\n\r\n        var getCoordinatesLonLat = function(f) {\r\n            return ol.proj.transform(f.getGeometry().getCoordinates(), 'EPSG:3857', 'EPSG:4326');\r\n        }\r\n        var getCoordinates = function(f) {\r\n            return f.getGeometry().getCoordinates();\r\n        }\r\n        var transformCoordinates = function(c) {\r\n            return ol.proj.transform(c, 'EPSG:3857', 'EPSG:4326');\r\n        }\r\n        var panAnimation = function(f){\r\n            var pan = ol.animation.pan({\r\n                duration: DURATION,\r\n                source: (self.c9View.getCenter())\r\n            });\r\n            self.c9Map.beforeRender(pan);\r\n            self.c9View.setCenter(getCoordinates(f));\r\n        }\r\n        /**\r\n         * Caculate distance between marker and center view, plus direction compare with center\r\n         * @param  {ol.Feature}\r\n         * @return {[Number, Boolean]} Array of distance value and direction value (left if true, right if false)\r\n         */\r\n        var distanceAndDirection = function(f) {\r\n            var center = transformCoordinates(self.c9View.getCenter());\r\n            var fCoordinates = getCoordinatesLonLat(f);\r\n            return [Math.sqrt(Math.pow(fCoordinates[0] - center[0], 2) + Math.pow(fCoordinates[1] - center[1], 2)), (fCoordinates[0] - center[0]) <= 0];\r\n        }\r\n        //register pointer move event to show cursor as pointer if user hover on markers\r\n        self.c9Map.on('pointermove', function(evt) {\r\n            self.c9Map.getTargetElement().style.cursor = self.c9Map.hasFeatureAtPixel(evt.pixel) ? 'pointer' : '';\r\n        });\r\n\r\n        //register map first render's event to show marker's effect\r\n        self.c9Map.once('postrender', function(evt) {\r\n            setTimeout(function(){\r\n                self.c9Markers.getFeatures().forEach(function(f, i){\r\n                    self.createMarkerEffect(f);\r\n                })\r\n            }, LOAD_MAP_DELAY);\r\n        });\r\n\r\n        //register click event to show effect on markers\r\n        self.c9Map.on('click', function(evt){\r\n            var f = self.c9Map.forEachFeatureAtPixel(evt.pixel, function(feature, layer){\r\n                return feature;\r\n            });\r\n            if (f && f.get('type') == 'c9GeoMarker') {\r\n                // self.createMarkerEffect(f);\r\n                //test\r\n                panAnimation(f)\r\n            }\r\n        });\r\n\r\n        //register keydown event to change center view\r\n        $(document).keydown(function(e) {\r\n            var keydownAnimate = function(k) {\r\n                var selectedFeature = undefined;\r\n                var minDistance = Infinity;\r\n                self.c9Markers.getFeatures().forEach(function(f, i) {\r\n                    var checkAnimate = distanceAndDirection(f);\r\n\r\n                    if (((checkAnimate[1] && k == LEFT_KEY) || (!checkAnimate[1] && k == RIGHT_KEY)) && checkAnimate[0] < minDistance && checkAnimate[0] != 0) {\r\n                        minDistance = checkAnimate[0];\r\n                        selectedFeature = f;\r\n                    }\r\n                });\r\n                if (selectedFeature) {\r\n                    setTimeout(self.createMarkerEffect(selectedFeature), LOAD_MAP_DELAY);\r\n                    panAnimation(selectedFeature);\r\n                }\r\n            }\r\n            switch(e.keyCode) {\r\n                case LEFT_KEY:\r\n                    keydownAnimate(LEFT_KEY);\r\n                    break;\r\n                case RIGHT_KEY:\r\n                    keydownAnimate(RIGHT_KEY);\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/map/C9.Map.js\n **/"],"sourceRoot":""}
>>>>>>> 8843023b70c0caa162702fd88a151b37efc0f65e
