{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///C9.min.js","webpack:///webpack/bootstrap 091a70226f9c9b72d6c8","webpack:///./src/index.js","webpack:///./src/charts/C9.Chart.js","webpack:///./src/charts/utils/C9.Axis.js","webpack:///./src/charts/utils/C9.Legend.js","webpack:///./src/charts/utils/C9.Title.js","webpack:///./src/helper/C9.DataAdapter.js","webpack:///./src/helper/C9.Helper.js","webpack:///./src/charts/C9.BarChart.js","webpack:///./src/charts/C9.DonutChart.js","webpack:///./src/charts/C9.LineChart.js","webpack:///./src/charts/C9.PieChart.js","webpack:///./src/charts/C9.TimeLine.js","webpack:///./src/charts/utils/C9.Tooltip.js","webpack:///./src/map/C9.Map.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_C","_C2","_C3","_C4","_C5","_C6","_C7","_C8","_C9","_C10","_C11","_C12","_C13","_C15","_C16","BarChart","DonutChart","LineChart","PieChart","TimeLine","Map","DataAdapter","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_typeof","Symbol","iterator","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","Chart","options","self","config","width","height","margin","top","right","bottom","left","hover","enable","template","onMouseOver","fadeIn","onMouseOut","fadeOut","legendShow","legendPosition","legendInsetAnchor","legendPadding","tooltipShow","tooltipPosition","undefined","colorRange","data","plain","file","type","url","keys","name","groups","stacks","_id","_width","_height","_colorRange","_hover","_dataOption","merge","_dataTarget","_margin","_svg","_body","_options","initConfig","container","d3","select","svg","append","style","attr","body","get","_container","set","newContainer","newId","newWidth","newHeight","scale","ordinal","range","newColorRange","newMargin","arg","newSvg","newBody","newOptions","newHover","Axis","xAxe","yAxe","xAxisShow","xAxisPadding","xAxisText","yAxisShow","yAxisPadding","yAxisText","numOfTickY","tickFormat","isLogaric","y2AxisShow","y2AxisPadding","y2AxisText","gridXShow","gridYShow","_xAxisShow","_xAxisPadding","_xAxisText","_yAxisShow","_yAxisPadding","_yAxisText","_isLogaricVariant","_tickFormat","_numOfTickY","_y2AxisShow","_y2AxisPadding","_y2AxisText","_gridXShow","_gridYShow","y","x","rangeRoundBands","log","linear","domain","map","d","stack","min","max","xScale","time","starting","ending","_xAxis","axis","orient","format","tickSize","ticks","hours","tickTime","tickInterval","_yAxis","innerTickSize","outerTickSize","_data","text","newXAxis","newYAxis","newXAxisShow","newXAxisPadding","newYAxisShow","newYAxisPadding","newIsLogaricVariant","newY2AxisShow","newY2AxisPadding","Legend","legendBox","legendSize","legendTextSize","legendMargin","legendSpace","_legendShow","_legendTextSize","_legendPosition","_legendSize","_legendBox","_legendMargin","_legendSpace","reduce","a","legendContainer","parentNode","legendItem","selectAll","enter","color","group","chart","path","pie","currentData","arc","chartType","chartInnerBefore","innerRadius","chartOuterBefore","radius","outerRadius","chartInnerAfter","chartOuterAfter","legendItemEventFactory","click","item","selector","dataSet","totalEnable","sum","transition","duration","attrTween","interpolate","t","mouseover","legendSelector","ease","mouseout","on","dataBackup","dataTarget","enableSet","enableSetOld","forEach","push","element","s","j","e","updateLegendInteraction","_color","newlegendShow","_legendText","newlegendText","newlegendPosition","newlegendSize","_legendItem","newLegendItem","_legendDomain","newLegendDomain","_legendItemEventFactory","newLegendItemEventFactory","Title","titleShow","titleText","titlePosition","titleSize","_titleShow","_titleText","_titlePosition","_titleSize","node","getComputedTextLength","setYLocation","newTitleShow","newTitleText","newTitlePosition","newTitleSize","newtitleSize","_keys","_groups","_stacks","_dataSource","initDataSource","hasPlainData","executePlainData","hasFile","executeFile","isArray","isObject","_file","getCsv","getTsv","getText","getJson","getXml","isEmpty","getDataTargetForBarChart","getDataTargetForPieChart","getDataTargetForDonutChart","getDataTargetForTimelineChart","dataSource","v","getDataTypeForBarChart","index","y0","y1","_group","_dsArray","_stack","_stackItem","data-ref","guid","_tempY0","icon","_valueArray","_valueItem","start","end","csv","err","tsv","JSON","parse","json","xml","querySelectorAll","querySelector","textContent","_toConsumableArray","arr","Array","arr2","from","Helper","each","loopable","callback","reverse","len","setValue","setPrefix","constPrefix","Util","object","array","toString","isFunction","func","obj1","obj2","obj3","attrname","_key","split","_current","_fun","filter","Math","apply","b","replace","r","random","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_C14","_Chart","_this","getPrototypeOf","barWidth","dataOption","da","getDataTarget","barChartType","_groupNames","_isGroup","_xGroup","rangeBand","_barWidth","_x","_y","updateConfig","xGroup","bar","bars","isGroup","groupNames","groupNamesOld","newLabel","groupType","xGroupOld","midGroup","indexOf","exit","remove","updateInteraction","legend","draw","updateInteractionForBarChart","lower","upper","d1","floor","d2","toFixed","hoverEnable","hoverOptions","selectAllBar","div","text_1","text_2","retrieveValue","newBarWidth","newBarColor","_groupType","newGroupType","newX","newY","newXGroup","newGroupNames","R","showText","_outerRadius","_innerRadius","_showText","pathAnim","dir","eventFactory","tooltip","divOnHover","mouse","tooltipEventFactory","layout","sort","arcs","_currentData","updateInteractionForDonutPieChart","selectAllPath","_eventFactory","newOuterRadius","newInnerRadius","newShowText","newEventFactory","_pathAnim","newPathAnim","_tooltip","newTooltip","_pie","newPie","_arc","newArc","newCurrentData","pointShow","pointFill","pointStroke","pointOpacity","pointRadius","pointHoverEnable","_pointShow","_pointRadius","_pointFill","_pointStroke","_pointOpacity","_pointHoverEnable","_interpolate","_dataGroup","nest","Client","entries","dataGroup","year","sale","xAxis","yAxis","lineGen","line","values","_d","selectAllCircle","newPointShow","newPointFill","newPointStroke","newPointOpacity","newPointRadius","newPointHoverEnable","newInterpolate","newDataGroup","_radius","newradius","rowSeparator","backgroundColor","itemHeight","itemMargin","labelMargin","striped","_starting","_ending","_rowSeparator","_backgroundColor","_itemHeight","_itemMargin","_labelMargin","_maxStack","_striped","initTimelineConfig","getXPos","stackList","maxStack","minTime","maxTime","datum","getStackPosition","barYAxis","insert","document","createElementNS","ns","prefix","lineYAxis","rowsDown","newStack","_stacked","newBackgroundColor","newRowSeparator","newStarting","newEnding","newItemHeight","newItemMargin","newLabelMargin","newMaxStack","newStriped","Tooltip","show","position","offset","class","_show","_position","_offset","_class","newShow","layers","source","view","lat","lon","zoom","_view","_markers","markers","_layers","initMapConfig","c9Layers","c9Markers","ol","Vector","initLayer","initMarker","c9View","View","center","proj","fromLonLat","minZoom","c9Map","interactions","interaction","defaults","doubleClickZoom","arguments","layer","setSource","setupSource","l","createLayer","imgSrc","Style","image","Icon","anchor","src","marker","Feature","geometry","geom","Point","setStyle","createMarkerStyle","addFeature","createMarker","img","BingMaps","imagerySet","Stamen","TileJSON","crossOrigin","TileArcGISRest","extractStyles","Cluster","distance","ImageVector","OSM","feature","animate","event","vectorContext","frameState","flashGeom","getGeometry","clone","elapsed","elapsedRatio","easing","easeOut","opacity","Circle","snapToPixel","stroke","Stroke","drawGeometry","Observable","unByKey","listenerKey","render","Date","getTime","LEFT_KEY","RIGHT_KEY","DURATION","LOAD_MAP_DELAY","getCoordinatesLonLat","f","transform","getCoordinates","transformCoordinates","panAnimation","pan","animation","getCenter","beforeRender","setCenter","distanceAndDirection","fCoordinates","sqrt","pow","evt","getTargetElement","cursor","hasFeatureAtPixel","pixel","once","setTimeout","getFeatures","createMarkerEffect","forEachFeatureAtPixel","$","keydown","keydownAnimate","k","selectedFeature","minDistance","Infinity","checkAnimate","keyCode","newView","newMarkers","newLayers","newData"],"mappings":"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","file":"C9.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"C9\"] = factory();\n\telse\n\t\troot[\"C9\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"C9\"] = factory();\n\telse\n\t\troot[\"C9\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _C = __webpack_require__(7);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(8);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(9);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(10);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(11);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(13);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tvar _C13 = __webpack_require__(6);\n\t\n\tvar _C14 = _interopRequireDefault(_C13);\n\t\n\tvar _C15 = __webpack_require__(5);\n\t\n\tvar _C16 = _interopRequireDefault(_C15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Helper Importer\n\t// Chart Importer\n\tmodule.exports = {\n\t\tBarChart: _C2.default,\n\t\tDonutChart: _C4.default,\n\t\tLineChart: _C6.default,\n\t\tPieChart: _C8.default,\n\t\tTimeLine: _C10.default,\n\t\n\t\tMap: _C12.default,\n\t\n\t\tDataAdapter: _C16.default\n\t};\n\t\n\t// Map Importer\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(6);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Chart = function () {\n\t    function Chart(options) {\n\t        _classCallCheck(this, Chart);\n\t\n\t        var self = this;\n\t        var config = {\n\t            // container\n\t            id: \"body\",\n\t            // size (width, height), margin, padding\n\t            width: 960,\n\t            height: 480,\n\t            margin: {\n\t                top: 20,\n\t                right: 20,\n\t                bottom: 70,\n\t                left: 40\n\t            },\n\t            // interaction in chart\n\t            hover: {\n\t                enable: true,\n\t                options: {\n\t                    template: '',\n\t                    onMouseOver: {\n\t                        fadeIn: 200\n\t                    },\n\t                    onMouseOut: {\n\t                        fadeOut: 500\n\t                    }\n\t                }\n\t            },\n\t\n\t            // legend\n\t            legendShow: true,\n\t            legendPosition: \"bottom\",\n\t            legendInsetAnchor: \"top-left\",\n\t            legendPadding: 0,\n\t            // tooltip - show when mouseover on each data\n\t            tooltipShow: true,\n\t            tooltipPosition: undefined,\n\t            // color range\n\t            colorRange: \"category20\",\n\t            // data\n\t            data: {\n\t                // ALL OPTIONS AVAILABLE IN DATA CONFIG\n\t                plain: [],\n\t                file: {\n\t                    type: null,\n\t                    url: null\n\t                },\n\t                keys: {\n\t                    name: \"name\",\n\t                    value: \"value\"\n\t                },\n\t                groups: [],\n\t                stacks: []\n\t            }\n\t        };\n\t\n\t        self._id = options.id || config.id;\n\t        self._width = options.width || config.width;\n\t        self._height = options.height || config.height;\n\t        self._colorRange = options.colorRange || config.colorRange;\n\t        self._hover = options.hover || config.hover;\n\t\n\t        self._dataOption = _C2.default.merge(options.data, config.data);\n\t        self._dataTarget = null;\n\t        self._margin = _C2.default.merge(options.margin, config.margin);\n\t\n\t        // Skeleton: \n\t        // SVG\n\t        // ---BODY (g)\n\t        // -------BlaBla\n\t        self._svg = null;\n\t        self._body = null;\n\t        self._options = options;\n\t\n\t        self.initConfig();\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Chart, [{\n\t        key: 'initConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /**\r\n\t         * Init & Update Parent Chart Config\r\n\t         */\n\t        value: function initConfig() {\n\t            var margin = this.margin,\n\t                id = this.id,\n\t                width = this.width - margin.left - margin.right,\n\t                height = this.height - margin.top - margin.bottom;\n\t\n\t            this.container = d3.select(id);\n\t\n\t            this.svg = d3.select(id).append(\"svg\").style('overflow', 'visible') // to overwrite overflow: hidden by Boostrap as default\n\t            .attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom);\n\t\n\t            this.body = this.svg.append(\"g\").attr('class', 'c9-chart c9-custom-container').attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'container',\n\t        get: function get() {\n\t            return this._container;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(newContainer) {\n\t            if (newContainer) {\n\t                this._container = newContainer;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'id',\n\t        get: function get() {\n\t            return this._id;\n\t        },\n\t        set: function set(newId) {\n\t            if (newId) {\n\t                this._id = newId;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'width',\n\t        get: function get() {\n\t            return this._width;\n\t        },\n\t        set: function set(newWidth) {\n\t            if (newWidth) {\n\t                this._width = newWidth;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'height',\n\t        get: function get() {\n\t            return this._height;\n\t        }\n\t\n\t        /**\r\n\t         * If colorRange is Array of color then scale range according to it\r\n\t         * If colorRange is a String like \"category20\", \"category20b\", etc. then scale using d3.scale.category\r\n\t         */\n\t        ,\n\t        set: function set(newHeight) {\n\t            if (newHeight) {\n\t                this._height = newHeight;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'colorRange',\n\t        get: function get() {\n\t            if (typeof this._colorRange == 'string') {\n\t                return d3.scale[this._colorRange]();\n\t            } else if (_typeof(this._colorRange) == 'object') {\n\t                return d3.scale.ordinal().range(this._colorRange);\n\t            }\n\t        },\n\t        set: function set(newColorRange) {\n\t            if (newColorRange) {\n\t                this._colorRange = newColorRange;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'margin',\n\t        get: function get() {\n\t            return this._margin;\n\t        },\n\t        set: function set(newMargin) {\n\t            if (newMargin) {\n\t                this._margin = newMargin;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dataOption',\n\t        get: function get() {\n\t            return this._dataOption;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataOption = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'svg',\n\t        get: function get() {\n\t            return this._svg;\n\t        },\n\t        set: function set(newSvg) {\n\t            if (newSvg) {\n\t                this._svg = newSvg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'body',\n\t        get: function get() {\n\t            return this._body;\n\t        },\n\t        set: function set(newBody) {\n\t            if (newBody) {\n\t                this._body = newBody;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'options',\n\t        get: function get() {\n\t            return this._options;\n\t        },\n\t        set: function set(newOptions) {\n\t            if (newOptions) {\n\t                this._options = newOptions;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'hover',\n\t        get: function get() {\n\t            return this._hover;\n\t        },\n\t        set: function set(newHover) {\n\t            if (newHover) {\n\t                this._hover = newHover;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dataTarget',\n\t        get: function get() {\n\t            return this._dataTarget;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataTarget = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Chart;\n\t}();\n\t\n\texports.default = Chart;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Axis = function () {\n\t    function Axis(options, body, data, width, height, xAxe, yAxe) {\n\t        _classCallCheck(this, Axis);\n\t\n\t        var config = {\n\t            xAxisShow: true,\n\t            xAxisPadding: {}, // TODO\n\t            xAxisText: 'Name',\n\t            yAxisShow: true,\n\t            yAxisPadding: {}, // TODO\n\t            yAxisText: 'Value',\n\t            numOfTickY: 5,\n\t            tickFormat: \"s\", // refer: https://github.com/d3/d3-format\n\t            isLogaric: false, // TODO: Add isPower, isNormal(default), isLogaric\n\t            y2AxisShow: true,\n\t            y2AxisPadding: {}, // TODO\n\t            y2AxisText: 'Value',\n\t            gridXShow: false,\n\t            gridYShow: false\n\t        };\n\t\n\t        this._xAxisShow = options.xAxisShow || config.xAxisShow;\n\t        this._xAxisPadding = options.xAxisPadding || config.xAxisPadding;\n\t        this._xAxisText = options.xAxisText || config.xAxisText;\n\t        this._yAxisShow = options.yAxisShow || (body.type == \"timeline\" ? false : config.yAxisShow);\n\t        this._yAxisPadding = options.yAxisPadding || config.yAxisPadding;\n\t        this._yAxisText = options.yAxisText || config.yAxisText;\n\t        this._isLogaricVariant = options.isLogaric || config.isLogaric;\n\t        this._tickFormat = options.tickFormat || config.tickFormat;\n\t        this._numOfTickY = options.numOfTickY || config.numOfTickY;\n\t        this._y2AxisShow = options.y2AxisShow || config.y2AxisShow;\n\t        this._y2AxisPadding = options.y2AxisPadding || config.y2AxisPadding;\n\t        this._y2AxisText = options.y2AxisText || config.y2AxisText;\n\t        this._gridXShow = options.gridXShow || config.gridXShow;\n\t        this._gridYShow = options.gridYShow || config.gridYShow;\n\t\n\t        var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\n\t        var y;\n\t\n\t        if (this._isLogaricVariant) {\n\t            y = d3.scale.log().range([height, 0]);\n\t        } else {\n\t            y = d3.scale.linear().range([height, 0]);\n\t        }\n\t\n\t        x.domain(data.map(function (d) {\n\t            return d.name || d.stack[0].name;\n\t        }));\n\t\n\t        if (body.type == \"bar\") {\n\t            y.domain([d3.min(data, function (d) {\n\t                return d.max;\n\t            }), d3.max(data, function (d) {\n\t                return d.max;\n\t            })]);\n\t        } else y.domain([d3.min(data, function (d) {\n\t            return d.value;\n\t        }), d3.max(data, function (d) {\n\t            return d.value;\n\t        })]);\n\t\n\t        if (body.type == \"timeline\") {\n\t\n\t            var xScale = d3.time.scale().domain([options.starting, options.ending]).range([0, width]);\n\t            this._xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\").tickFormat(options.tickFormat === undefined ? d3.time.format(\"%I %p\") : options.tickFormat.format).tickSize(options.tickFormat === undefined ? 6 : options.tickFormat.tickSize).ticks(options.tickFormat === undefined ? d3.time.hours : options.tickFormat.tickTime, options.tickFormat === undefined ? 1 : options.tickFormat.tickInterval);\n\t            delete options.starting;\n\t            delete options.ending;\n\t        } else if (body.type == \"line\") {\n\t\n\t            this._xAxis = xAxe;\n\t            this._yAxis = yAxe;\n\t        } else {\n\t            // Currently, support logaric axis only for y-axis on bar-chart\n\t            // TODO: add for line-chart too\n\t            var _tickFormat = d3.format(this._tickFormat);\n\t            var _numOfTickY = this._numOfTickY;\n\t\n\t            this._xAxis = d3.svg.axis().scale(x).orient(\"bottom\").ticks(10);\n\t\n\t            // In LOG scale, can't specify default number of ticks\n\t            // must be filter with tickFormat instead\n\t            // refer: https://github.com/d3/d3/wiki/Quantitative-Scales#log_ticks\n\t            if (this._isLogaricVariant) {\n\t                this._yAxis = d3.svg.axis().scale(y).orient(\"left\").ticks(_numOfTickY, _tickFormat).tickSize(10, 0);\n\t            } else {\n\t                this._yAxis = d3.svg.axis().scale(y).orient(\"left\").ticks(_numOfTickY).tickSize(10, 0).tickFormat(_tickFormat);\n\t            }\n\t        }\n\t\n\t        // Grid\n\t        if (this._gridXShow) {\n\t            // Select CURRENT svg container, to make this axis outside\n\t            // as a SEPARATED component, just like AXIS, of CHART\n\t            // d3.select(this._svg[0][0].parentNode)\n\t            this._xAxis.innerTickSize(-height).outerTickSize(0);\n\t        }\n\t\n\t        if (this._gridYShow) {\n\t            // Select CURRENT svg container, to make this axis outside\n\t            // as a SEPARATED component, just like AXIS, of CHART\n\t            // d3.select(this._svg[0][0].parentNode)\n\t            this._yAxis.innerTickSize(-width).outerTickSize(0);\n\t        }\n\t\n\t        this._body = body;\n\t        this._data = data;\n\t        this._width = width; // TODO : ADD Getter/setter\n\t        this._height = height;\n\t\n\t        if (this._xAxisShow) {\n\t            this._body.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(this._xAxis).append(\"text\").attr(\"dx\", \"-.8em\").attr(\"dy\", \"-.55em\").attr(\"x\", width).attr(\"y\", \"20\").style(\"text-anchor\", \"start\").text(this._xAxisText);\n\t            // .attr(\"transform\", \"rotate(-90)\" );\n\t        }\n\t\n\t        if (this._yAxisShow) {\n\t            this._body.append(\"g\").attr(\"class\", \"y axis\").call(this._yAxis).append(\"text\")\n\t            // .attr(\"transform\", \"rotate(-90)\")\n\t            .attr(\"y\", -10).attr(\"dy\", \".10\").style(\"text-anchor\", \"end\").text(this._yAxisText);\n\t        }\n\t\n\t        /**\r\n\t            TODO:\r\n\t            - Add y2-axis\r\n\t        **/\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t    _createClass(Axis, [{\n\t        key: 'xAxis',\n\t        get: function get() {\n\t            return this._xAxis;\n\t        },\n\t\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t\n\t        set: function set(newXAxis) {\n\t            if (newXAxis) {\n\t                this._xAxis = newXAxis;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'yAxis',\n\t        get: function get() {\n\t            return this._yAxis;\n\t        },\n\t        set: function set(newYAxis) {\n\t            if (newYAxis) {\n\t                this._yAxis = newYAxis;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'xAxisShow',\n\t        get: function get() {\n\t            return this._xAxisShow;\n\t        },\n\t        set: function set(newXAxisShow) {\n\t            if (newXAxisShow) {\n\t                this._xAxisShow = newXAxisShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'xAxisPadding',\n\t        get: function get() {\n\t            return this._xAxisPadding;\n\t        },\n\t        set: function set(newXAxisPadding) {\n\t            if (newXAxisPadding) {\n\t                this._xAxisPadding = newXAxisPadding;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'yAxisShow',\n\t        get: function get() {\n\t            return this._yAxisShow;\n\t        },\n\t        set: function set(newYAxisShow) {\n\t            if (newYAxisShow) {\n\t                this._yAxisShow = newYAxisShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'yAxisPadding',\n\t        get: function get() {\n\t            return this._yAxisPadding;\n\t        },\n\t        set: function set(newYAxisPadding) {\n\t            if (newYAxisPadding) {\n\t                this._yAxisPadding = newYAxisPadding;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'isLogaricVariant',\n\t        get: function get() {\n\t            return this._isLogaricVariant;\n\t        },\n\t        set: function set(newIsLogaricVariant) {\n\t            if (newIsLogaricVariant) {\n\t                this._isLogaricVariant = newIsLogaricVariant;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'y2AxisShow',\n\t        get: function get() {\n\t            return this._y2AxisShow;\n\t        },\n\t        set: function set(newY2AxisShow) {\n\t            if (newY2AxisShow) {\n\t                this._y2AxisShow = newY2AxisShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'y2AxisPadding',\n\t        get: function get() {\n\t            return this._y2AxisPadding;\n\t        },\n\t        set: function set(newY2AxisPadding) {\n\t            if (newY2AxisPadding) {\n\t                this._y2AxisPadding = newY2AxisPadding;\n\t            }\n\t        }\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }]);\n\t\n\t    return Axis;\n\t}();\n\t\n\texports.default = Axis;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Legend = function () {\n\t    function Legend(options, body, data) {\n\t        _classCallCheck(this, Legend);\n\t\n\t        var config = {\n\t            legendShow: false,\n\t            legendPosition: [0, 0],\n\t            legendBox: false,\n\t            legendSize: 18,\n\t            legendTextSize: \"14px\",\n\t            legendMargin: [50, 5, 5, 5],\n\t            legendSpace: 150\n\t        };\n\t\n\t        var self = this;\n\t\n\t        self._legendShow = options.legendShow || config.legendShow;\n\t        self._legendTextSize = options.legendTextSize || config.legendTextSize;\n\t        self._legendPosition = options.legendPosition || config.legendPosition;\n\t        self._legendSize = options.legendSize || config.legendSize;\n\t        self._legendBox = options.legendBox || config.legendBox;\n\t        self._legendMargin = options.legendMargin || config.legendMargin;\n\t        self._legendSpace = options.legendSpace || config.legendSpace;\n\t        // self._legendStyle        = options.legendStyle      || config.legendStyle;\n\t\n\t        self._options = options;\n\t        self._body = body;\n\t        // self._color     = color;\n\t        self._data = data;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Legend, [{\n\t        key: \"draw\",\n\t\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function draw() {\n\t            var self = this;\n\t\n\t            // var color = self.color;\n\t\n\t            if (self._legendShow) {\n\t                // TODO: Remove these conditional checks by getData for general purposes\n\t                var legendDomain = [];\n\t\n\t                // var setEnableData = function(_data, _flag) {\n\t                //     return {\n\t                //         'data': _data,\n\t                //         'enable': _flag\n\t                //     };\n\t                // };\n\t\n\t                // if (self._body.type == \"line\") {\n\t\n\t                //     var dataGroup = d3.nest()\n\t                //         .key(function(d) { return d.Client; })\n\t                //         .entries(self._data);\n\t\n\t                //     dataGroup.forEach(function(d, i) {\n\t                //         legendDomain.push(d.key);\n\t                //     });\n\t\n\t                // } else if (self._body.type == \"bar\") {\n\t\n\t                //     legendDomain = self._data;\n\t\n\t\n\t                // } else if (self._body.type == \"pie\" || self._body.type == \"donut\" || self._body.type == \"timeline\") {\n\t\n\t                //     self._data.forEach(function(d) {\n\t                //         d.name ? legendDomain.push(d.name) : legendDomain.push(\"\");\n\t                //     });\n\t\n\t                // }\n\t\n\t\n\t                // Store for backup, and add enable flag to each data\n\t                // self.legendDomain = [];\n\t                // self._data.forEach(function(d) {\n\t                //     if (d) {\n\t                //         self.legendDomain.push(setEnableData(d, true));\n\t                //     }\n\t                // });\n\t\n\t                // var i;\n\t                // for (i = 0; i < legendDomain.length; i++) {\n\t                //     if (legendDomain[i] != \"\")\n\t                //         break;\n\t                // };\n\t\n\t                // if (i == legendDomain.length)\n\t                //     legendDomain = [];\n\t\n\t                // Calculate domain for color to draw\n\t                // color.domain(legendDomain);\n\t\n\t                if (self._body.type == \"bar\") {\n\t                    self.data = self.data[self.data.reduce(function (p, c, i, a) {\n\t                        return a[p].stack.length > c.stack.length ? p : i;\n\t                    }, 0)].stack;\n\t                }\n\t\n\t                // Legend will be appended in main SVG container\n\t                var legendContainer = d3.select(self._body[0][0].parentNode).append(\"g\").attr(\"class\", \"c9-custom-legend c9-custom-legend-container\").attr(\"transform\", \"translate(\" + self._legendPosition[0] + \",\" + self._legendPosition[1] + \")\");\n\t\n\t                // var legendBox = legendContainer.selectAll(\".c9-custom-legend.c9-custom-legend-box\").data([true]).enter();\n\t\n\t                self.legendItem = legendContainer.selectAll(\"g.c9-custom-legend.c9-custom-legend-item\")\n\t                // .data(color.domain())\n\t                .data(self.data).enter().append(\"g\").attr(\"class\", \"c9-custom-legend c9-custom-legend-item\").attr('data-ref', function (d) {\n\t                    return d['data-ref'];\n\t                }).attr(\"transform\", function (d, i) {\n\t                    return \"translate(\" + (i * (self.legendSize + self.legendSpace) + self.legendMargin[0]) + \",\" + self.legendMargin[3] + \")\";\n\t                });\n\t\n\t                self.legendItem.append('rect').attr('class', 'c9-custom-legend c9-custom-legend-rect').attr('width', self.legendSize * 2).attr('height', self.legendSize).attr('r', self.legendSize).attr('fill', function (d) {\n\t                    return d.color;\n\t                }).attr('stroke', function (d) {\n\t                    return d.color;\n\t                });\n\t\n\t                self.legendItem.append('text').attr('class', 'c9-custom-legend c9-custom-legend-text').attr('x', self._legendSize * 2 + 20).attr('y', 15)\n\t                // .attr('text-anchor', 'middle')\n\t                .text(function (d) {\n\t                    return self._body.type == \"bar\" ? d.group : d.name;\n\t                });\n\t\n\t                // if (self._legendBox && legendDomain.length > 0) {\n\t                //     var box = legendContainer[0][0].getBBox();\n\t                //     legendBox.attr(\"class\", \".c9-custom-legend.c9-custom-legend-box\")\n\t                //         .attr(\"x\", 0)\n\t                //         .attr(\"y\", 0)\n\t                //         .attr(\"width\", box.width + self._legendMargin[1] + self._legendMargin[3])\n\t                //         .attr(\"height\", box.height + self._legendMargin[2] + self._legendMargin[0])\n\t                //         .style(\"fill\", \"none\")\n\t                //         .style(\"stroke\", color);\n\t                // }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Update interaction event dispatchers for legend\r\n\t         * For: Donut Chart, Pie Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: \"updateInteractionForDonutPieChart\",\n\t        value: function updateInteractionForDonutPieChart(chart, path, pie, currentData, arc) {\n\t\n\t            var self = this;\n\t\n\t            var chartType = chart.chartType;\n\t\n\t            var chartInnerBefore = chartType == 'pie' ? 0 : chart.innerRadius,\n\t                chartOuterBefore = chartType == 'pie' ? chart.radius : chart.outerRadius,\n\t                chartInnerAfter = chartType == 'pie' ? 0 : chart.innerRadius,\n\t                chartOuterAfter = chartType == 'pie' ? chart.radius * 1.2 : chart.outerRadius * 1.2;\n\t\n\t            self.legendItemEventFactory = {\n\t\n\t                'click': function click(item) {\n\t\n\t                    var selector = d3.select(this);\n\t                    var enable = true,\n\t                        dataSet = self.data;\n\t                    var totalEnable = d3.sum(dataSet.map(function (d) {\n\t                        return d.enable ? 1 : 0;\n\t                    }));\n\t\n\t                    // Add pointer to cursor\n\t                    selector.style('cursor', 'pointer');\n\t\n\t                    // If current selector is disabled, then turn it on back\n\t                    // Else, set enable to false\n\t                    if (selector.style('opacity') == '0.1') {\n\t                        selector.style('opacity', '1.0');\n\t                    } else {\n\t                        if (totalEnable < 2) return;\n\t                        selector.style('opacity', '0.1');\n\t                        enable = false;\n\t                    }\n\t\n\t                    chart.pie.value(function (d) {\n\t                        if (d.name == item.name) d.enable = enable;\n\t                        return d.enable ? d.value : 0;\n\t                    });\n\t\n\t                    path = path.data(chart.pie(dataSet));\n\t\n\t                    path.transition().duration(500).attrTween('d', function (d) {\n\t                        var interpolate = d3.interpolate(chart.currentData, d);\n\t                        // Returns an interpolator between the two arbitrary values a and b. \n\t                        // The interpolator implementation is based on the type of the end value b.\n\t                        chart.currentData = interpolate(0);\n\t                        return function (t) {\n\t                            return arc(interpolate(t));\n\t                        };\n\t                    })\n\t                    // Remove stroke when re-draw arcs to avoid duplicate strokes\n\t                    .attr('stroke', 'none');;\n\t                },\n\t\n\t                'mouseover': function mouseover(item) {\n\t                    var legendSelector = d3.select(this);\n\t                    // Add pointer to cursor\n\t                    legendSelector.style('cursor', 'pointer');\n\t\n\t                    var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\n\t\n\t                    selector.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerAfter).outerRadius(chartOuterAfter)).attr('fill-opacity', '1.0');\n\t                    // var enable = true,\n\t                    //     dataSet = self.legendDomain,\n\t                    //     isCurrentEnable = true;\n\t\n\t                    // var totalEnable = d3.sum(dataSet.map(function(d) {\n\t                    //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\n\t                    //     return (d.enable) ? 1 : 0;\n\t                    // }));\n\t\n\t                    // // Add pointer to cursor\n\t                    // selector.style('cursor', 'pointer');\n\t\n\t                    // // If current selector is disabled, then remains it\n\t                    // // Else, turn enabled to disabled\n\t                    // if (!isCurrentEnable) {\n\t                    //     return false;\n\t                    // } else {\n\t                    //     if (totalEnable < 2) return;\n\t                    //     selector.style('opacity', '0.5');\n\t                    //     enable = false;\n\t                    // }\n\t\n\t                    // chart.pie.value(function(d) {\n\t                    //     if (d.data.name == item) d.tempEnable = enable;\n\t                    //     else d.tempEnable = d.enable;\n\t\n\t                    //     return (d.tempEnable) ? d.data.value : 0;\n\t                    // });\n\t\n\t                    // path = path.data(chart.pie(dataSet));\n\t\n\t                    // path.transition()\n\t                    //     .duration(200)\n\t                    //     .attrTween('d', function(d) {\n\t                    //         var interpolate = d3.interpolate(chart.currentData, d);\n\t                    //         // Returns an interpolator between the two arbitrary values a and b. \n\t                    //         // The interpolator implementation is based on the type of the end value b.\n\t                    //         chart.currentData = interpolate(0);\n\t                    //         return function(t) {\n\t                    //             return arc(interpolate(t));\n\t                    //         };\n\t                    //     });\n\t                },\n\t\n\t                'mouseout': function mouseout(item) {\n\t\n\t                    var legendSelector = d3.select(this);\n\t                    // Add pointer to cursor\n\t                    legendSelector.style('cursor', 'pointer');\n\t\n\t                    var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\n\t\n\t                    selector.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerBefore).outerRadius(chartOuterBefore)).attr('fill-opacity', '0.5');\n\t                    // var dataSet = self.legendDomain,\n\t                    //     isCurrentEnable = true;\n\t\n\t                    // var totalEnable = d3.sum(dataSet.map(function(d) {\n\t                    //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\n\t                    //     return (d.enable) ? 1 : 0;\n\t                    // }));\n\t\n\t                    // // Add pointer to cursor\n\t                    // selector.style('cursor', 'pointer');\n\t\n\t                    // chart.pie.value(function(d) {\n\t                    //     if (d.data.name == item && !d.enable) d.enable = enable;\n\t                    //     return (d.enable) ? d.data.value : 0;\n\t                    // });\n\t\n\t                    // if (!isCurrentEnable) {\n\t                    //     return;\n\t                    // } else {\n\t                    //     if (totalEnable < 2 || selector.style('opacity') == '1') return;\n\t                    //     selector.style('opacity', '1.0');\n\t                    // }\n\t\n\t                    // path = path.data(chart.pie(dataSet));\n\t\n\t                    // path.transition()\n\t                    //     .duration(200)\n\t                    //     .attrTween('d', function(d) {\n\t                    //         var interpolate = d3.interpolate(chart.currentData, d);\n\t                    //         // Returns an interpolator between the two arbitrary values a and b. \n\t                    //         // The interpolator implementation is based on the type of the end value b.\n\t                    //         chart.currentData = interpolate(0);\n\t                    //         return function(t) {\n\t                    //             return arc(interpolate(t));\n\t                    //         };\n\t                    //     });\n\t                }\n\t\n\t            };\n\t\n\t            if (self.legendShow) {\n\t\n\t                self.legendItem.on(self.legendItemEventFactory);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Update interaction for barchart\r\n\t         * @param  {[type]} chart       [description]\r\n\t         * @param  {[type]} path        [description]\r\n\t         * @param  {[type]} pie         [description]\r\n\t         * @param  {[type]} currentData [description]\r\n\t         * @param  {[type]} arc         [description]\r\n\t         * @return {[type]}             [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: \"updateInteractionForBarChart\",\n\t        value: function updateInteractionForBarChart(chart) {\n\t\n\t            var self = this;\n\t\n\t            self.legendItemEventFactory = {\n\t\n\t                'click': function click(item) {\n\t                    var selector = d3.select(this);\n\t                    var enable = true,\n\t                        dataBackup = chart.dataTarget,\n\t                        dataSet = self.data;\n\t                    var totalEnable = d3.sum(dataSet.map(function (d) {\n\t                        return d.enable ? 1 : 0;\n\t                    }));\n\t\n\t                    var enableSet = [];\n\t                    var enableSetOld = [];\n\t                    var data = [];\n\t                    // Add pointer to cursor\n\t                    selector.style('cursor', 'pointer');\n\t\n\t                    // If current selector is disabled, then turn it on back\n\t                    // Else, set enable to false\n\t                    if (selector.style('opacity') == '0.1') {\n\t                        selector.style('opacity', '1.0');\n\t                    } else {\n\t                        if (totalEnable < 2) return;\n\t                        selector.style('opacity', '0.1');\n\t                        enable = false;\n\t                    }\n\t\n\t                    //set current data for legend\n\t                    self.data.forEach(function (d, i) {\n\t                        if (d.enable) enableSetOld.push(d.group);\n\t                        if (d.group == item.group) d.enable = enable;\n\t                        if (d.enable) enableSet.push(d.group);\n\t                    });\n\t\n\t                    //TODO - handle total - use for axis\n\t                    dataBackup.forEach(function (d, i) {\n\t                        var element = { stack: [], max: d.max };\n\t                        d.stack.forEach(function (s, j) {\n\t                            enableSet.forEach(function (e) {\n\t                                if (e == s.group) {\n\t                                    element.stack.push(s);\n\t                                }\n\t                            });\n\t                        });\n\t                        data.push(element);\n\t                    });\n\t\n\t                    chart.updateLegendInteraction(data, enableSet, enableSetOld, item.group);\n\t                }\n\t\n\t            };\n\t\n\t            if (self.legendShow) {\n\t\n\t                self.legendItem.on(self.legendItemEventFactory);\n\t            }\n\t        }\n\t    }, {\n\t        key: \"setYLocation\",\n\t        value: function setYLocation(height, margin) {\n\t            if (this.legendPosition === 'top') {\n\t                return margin.top / 2;\n\t            } else if (this.legendPosition === 'bottom') {\n\t                return height - margin.bottom / 2;\n\t            }\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: \"data\",\n\t        get: function get() {\n\t            return this._data;\n\t        },\n\t\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._data = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"body\",\n\t        get: function get() {\n\t            return this._body;\n\t        }\n\t    }, {\n\t        key: \"color\",\n\t        get: function get() {\n\t            return this._color;\n\t        }\n\t    }, {\n\t        key: \"legendShow\",\n\t        get: function get() {\n\t            return this._legendShow;\n\t        },\n\t        set: function set(newlegendShow) {\n\t            if (newlegendShow) {\n\t                this._legendShow = newlegendShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendText\",\n\t        get: function get() {\n\t            return this._legendText;\n\t        },\n\t        set: function set(newlegendText) {\n\t            if (newlegendText) {\n\t                this._legendText = newlegendText;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendPosition\",\n\t        get: function get() {\n\t            return this._legendPosition;\n\t        },\n\t        set: function set(newlegendPosition) {\n\t            if (newlegendPosition) {\n\t                this._legendPosition = newlegendPosition;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendSize\",\n\t        get: function get() {\n\t            return this._legendSize;\n\t        },\n\t        set: function set(newlegendSize) {\n\t            if (newlegendSize) {\n\t                this._legendSize = newlegendSize;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendMargin\",\n\t        get: function get() {\n\t            return this._legendMargin;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._legendMargin = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendSpace\",\n\t        get: function get() {\n\t            return this._legendSpace;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._legendSpace = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendItem\",\n\t        get: function get() {\n\t            return this._legendItem;\n\t        },\n\t        set: function set(newLegendItem) {\n\t            if (newLegendItem) {\n\t                this._legendItem = newLegendItem;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendDomain\",\n\t        get: function get() {\n\t            return this._legendDomain;\n\t        },\n\t        set: function set(newLegendDomain) {\n\t            if (newLegendDomain) {\n\t                this._legendDomain = newLegendDomain;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"legendItemEventFactory\",\n\t        get: function get() {\n\t            return this._legendItemEventFactory;\n\t        },\n\t        set: function set(newLegendItemEventFactory) {\n\t            if (newLegendItemEventFactory) {\n\t                this._legendItemEventFactory = newLegendItemEventFactory;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Legend;\n\t}();\n\t\n\texports.default = Legend;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Title = function () {\n\t    function Title(options, body, width, height, margin) {\n\t        _classCallCheck(this, Title);\n\t\n\t        var config = {\n\t            titleShow: true,\n\t            titleText: \"Sample Chart\",\n\t            titlePosition: 'top',\n\t            titleSize: \"14px\"\n\t        };\n\t\n\t        this._titleShow = options.titleShow || config.titleShow;\n\t        this._titleText = options.titleText || config.titleText;\n\t        this._titlePosition = options.titlePosition || config.titlePosition;\n\t        this._titleSize = options.titleSize || config.titleSize;\n\t\n\t        this._body = body;\n\t\n\t        if (this._titleShow) {\n\t            var self = this;\n\t            // Select CURRENT body container, to make this axis outside\n\t            // as a SEPARATED component, just like AXIS, of CHART\n\t            var text = d3.select(self._body[0][0].parentNode).append(\"g\").attr('class', 'c9-custom-title c9-custom-title-container').append(\"text\").attr(\"class\", \"c9-custom-title c9-custom-title-text\");\n\t\n\t            // Get title width: text.node().getComputedTextLength()           \n\t            text.attr(\"x\", (width - text.node().getComputedTextLength()) / 2).attr(\"y\", this.setYLocation(height, margin)).attr(\"text-anchor\", \"middle\").style(\"font-size\", this._titleSize).text(this._titleText);\n\t        }\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t    _createClass(Title, [{\n\t        key: 'setYLocation',\n\t\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function setYLocation(height, margin) {\n\t            if (this.titlePosition === 'top') {\n\t                return margin.top / 2;\n\t            } else if (this.titlePosition === 'bottom') {\n\t                return height - margin.bottom / 2;\n\t            }\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'titleShow',\n\t        get: function get() {\n\t            return this._titleShow;\n\t        },\n\t\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t\n\t        set: function set(newTitleShow) {\n\t            if (newTitleShow) {\n\t                this._titleShow = newTitleShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'titleText',\n\t        get: function get() {\n\t            return this._titleText;\n\t        },\n\t        set: function set(newTitleText) {\n\t            if (newTitleText) {\n\t                this._titleText = newTitleText;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'titlePosition',\n\t        get: function get() {\n\t            return this._titlePosition;\n\t        },\n\t        set: function set(newTitlePosition) {\n\t            if (newTitlePosition) {\n\t                this._titlePosition = newTitlePosition;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'titleSize',\n\t        get: function get() {\n\t            return this._titleSize;\n\t        },\n\t        set: function set(newTitleSize) {\n\t            if (newTitleSize) {\n\t                this._titleSize = newtitleSize;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Title;\n\t}();\n\t\n\texports.default = Title;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(6);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DataAdapter = function () {\n\t    function DataAdapter(options) {\n\t        _classCallCheck(this, DataAdapter);\n\t\n\t        var self = this;\n\t\n\t        var config = {\n\t            // ALL OPTIONS AVAILABLE IN DATA CONFIG\n\t            keys: {\n\t                name: \"name\",\n\t                value: \"value\"\n\t            },\n\t            groups: [],\n\t            stacks: [],\n\t\n\t            // NO NEED TO ADD TO DATA OPTIONS\n\t            // Just use to define default parameters\n\t            colorRange: null\n\t        };\n\t\n\t        self._keys = _C2.default.merge(options.keys, config.keys);\n\t        self._groups = options.groups || config.groups;\n\t        self._stacks = options.stacks || config.stacks;\n\t        self._colorRange = options.colorRange || config.colorRange;\n\t\n\t        self._dataSource = null;\n\t        self._dataTarget = []; // Initialize new Array to use Array methods\n\t        self.initDataSource(options);\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(DataAdapter, [{\n\t        key: \"initDataSource\",\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function initDataSource(options) {\n\t            var self = this;\n\t\n\t            if (self.hasPlainData(options)) {\n\t                self.executePlainData(options);\n\t            } else if (self.hasFile(options)) {\n\t                self.executeFile(options);\n\t            }\n\t        }\n\t    }, {\n\t        key: \"hasPlainData\",\n\t        value: function hasPlainData(options) {\n\t            return options.plain && _C2.default.isArray(options.plain);\n\t        }\n\t    }, {\n\t        key: \"hasFile\",\n\t        value: function hasFile(options) {\n\t            return options.file && _C2.default.isObject(options.file);\n\t        }\n\t    }, {\n\t        key: \"executePlainData\",\n\t        value: function executePlainData(options) {\n\t            var self = this;\n\t\n\t            self._dataSource = options.plain;\n\t        }\n\t    }, {\n\t        key: \"executeFile\",\n\t        value: function executeFile(options) {\n\t            var self = this;\n\t\n\t            self._file = _C2.default.merge(options.file, config.file);\n\t\n\t            if (self._file && self._file.type) {\n\t\n\t                switch (self._file.type) {\n\t                    case \"csv\":\n\t                        self._dataSource = self.getCsv();\n\t                        break;\n\t                    case \"tsv\":\n\t                        self._dataSource = self.getTsv();\n\t                        break;\n\t                    case \"text\":\n\t                        self._dataSource = self.getText();\n\t                        break;\n\t                    case \"json\":\n\t                        self._dataSource = self.getJson();\n\t                        break;\n\t                    case \"xml\":\n\t                        self._dataSource = self.getXml();\n\t                        break;\n\t                    case \"xhr\":\n\t                        self._dataSource = self.getJson();\n\t                        break;\n\t                    default:\n\t                        self._dataSource = self.getJson();\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: \"getDataTypeForBarChart\",\n\t        value: function getDataTypeForBarChart() {\n\t            var self = this;\n\t\n\t            if (!_C2.default.isEmpty(self.groups) && _C2.default.isArray(self.groups)) {\n\t                return \"group\";\n\t            } else if (!_C2.default.isEmpty(self.stacks) && _C2.default.isArray(self.stacks)) {\n\t                return \"stack\";\n\t            }\n\t\n\t            return \"single\";\n\t        }\n\t    }, {\n\t        key: \"getDataTarget\",\n\t        value: function getDataTarget(chartType) {\n\t            var self = this;\n\t\n\t            switch (chartType) {\n\t                case \"bar\":\n\t                    return self.getDataTargetForBarChart();\n\t                    break;\n\t\n\t                case \"line\":\n\t\n\t                    break;\n\t\n\t                case \"pie\":\n\t                    return self.getDataTargetForPieChart();\n\t                    break;\n\t\n\t                case \"donut\":\n\t                    return self.getDataTargetForDonutChart();\n\t                    break;\n\t\n\t                case \"timeline\":\n\t                    return self.getDataTargetForTimelineChart();\n\t                    break;\n\t                default:\n\t                    return self.dataSource;\n\t                    break;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"getName\",\n\t        value: function getName(v) {\n\t            return v.name;\n\t        }\n\t    }, {\n\t        key: \"getValue\",\n\t        value: function getValue(v) {\n\t            var self = this;\n\t\n\t            return _C2.default.get(self.keys, v);\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /*=================================================\r\n\t        =            Normalize Data For Charts            =\r\n\t        =================================================*/\n\t\n\t    }, {\n\t        key: \"getDataTargetForBarChart\",\n\t        value: function getDataTargetForBarChart() {\n\t            var self = this;\n\t\n\t            switch (self.getDataTypeForBarChart()) {\n\t                case \"single\":\n\t                    self.dataSource.forEach(function (data, index) {\n\t                        var _stack = [];\n\t                        var _data = {\n\t                            \"max\": _C2.default.get(self.keys.value, data),\n\t                            \"stack\": [{\n\t                                \"name\": _C2.default.get(self.keys.name, data),\n\t                                \"y0\": 0,\n\t                                \"y1\": _C2.default.get(self.keys.value, data),\n\t                                \"enable\": true\n\t                            }]\n\t                        };\n\t                        self.dataTarget.push(_data);\n\t                    });\n\t\n\t                    return self.dataTarget;\n\t                    break;\n\t\n\t                case \"group\":\n\t                    var groups = self.groups;\n\t\n\t                    // Iterate over each group\n\t                    self.dataSource.forEach(function (data, index) {\n\t                        var _group = {\n\t                            \"max\": null,\n\t                            \"stack\": []\n\t                        },\n\t                            _dsArray = _C2.default.get(self.keys.value, data);\n\t\n\t                        // If Group has only 1 value, so MAX = this.value\n\t                        if (_C2.default.isArray(_dsArray)) {\n\t                            _group.max = _C2.default.max(_dsArray);\n\t                        } else {\n\t                            _group.max = _dsArray;\n\t                        }\n\t\n\t                        var _stack = [],\n\t                            _stackItem = {\n\t                            \"color\": \"#ffffff\",\n\t                            \"y0\": 0,\n\t                            \"y1\": 1,\n\t                            \"group\": \"\",\n\t                            \"name\": \"\",\n\t                            \"data-ref\": \"\",\n\t                            \"enable\": true\n\t                        },\n\t                            color = self.colorRange;\n\t\n\t                        // Iterate each single bar in a group\n\t                        if (_C2.default.isArray(_dsArray)) {\n\t                            _dsArray.forEach(function (d, i) {\n\t                                _stackItem = {\n\t                                    \"color\": color(i),\n\t                                    \"y0\": 0,\n\t                                    \"y1\": d,\n\t                                    \"group\": groups[i] || i,\n\t                                    \"name\": _C2.default.get(self.keys.name, data),\n\t                                    \"data-ref\": _C2.default.guid(),\n\t                                    \"enable\": true\n\t                                };\n\t                                _stack.push(_stackItem);\n\t                            });\n\t                        } else {\n\t                            _stackItem = {\n\t                                \"color\": color(0),\n\t                                \"y0\": 0,\n\t                                \"y1\": _dsArray,\n\t                                \"group\": groups[0] || 0,\n\t                                \"name\": _C2.default.get(self.keys.name, data),\n\t                                \"data-ref\": _C2.default.guid(),\n\t                                \"enable\": true\n\t                            };\n\t                            _stack.push(_stackItem);\n\t                        }\n\t                        _group.stack = _stack;\n\t\n\t                        self.dataTarget.push(_group);\n\t                    });\n\t\n\t                    return self.dataTarget;\n\t                    break;\n\t\n\t                case \"stack\":\n\t                    var stacks = self.stacks;\n\t\n\t                    // Iterate over each group\n\t                    self.dataSource.forEach(function (data, index) {\n\t                        var _group = {\n\t                            \"max\": null,\n\t                            \"stack\": []\n\t                        },\n\t                            _dsArray = _C2.default.get(self.keys.value, data);\n\t\n\t                        // If Group has only 1 value, so MAX = this.value\n\t                        if (_C2.default.isArray(_dsArray)) {\n\t                            _group.max = _C2.default.sum(_dsArray);\n\t                        } else {\n\t                            _group.max = _dsArray;\n\t                        }\n\t\n\t                        var _stack = [],\n\t                            _stackItem = {\n\t                            \"color\": \"#ffffff\",\n\t                            \"y0\": 0,\n\t                            \"y1\": 1,\n\t                            \"group\": \"\",\n\t                            \"name\": \"\",\n\t                            \"data-ref\": \"\",\n\t                            \"enable\": true\n\t                        },\n\t                            color = self.colorRange;\n\t\n\t                        // Iterate each single bar in a group\n\t                        if (_C2.default.isArray(_dsArray)) {\n\t                            (function () {\n\t                                var _tempY0 = 0;\n\t                                _dsArray.forEach(function (d, i) {\n\t                                    _stackItem = {\n\t                                        \"color\": color(i),\n\t                                        \"y0\": _tempY0,\n\t                                        \"y1\": _tempY0 + d,\n\t                                        \"group\": stacks[i] || i,\n\t                                        \"name\": _C2.default.get(self.keys.name, data),\n\t                                        \"data-ref\": _C2.default.guid(),\n\t                                        \"enable\": true\n\t                                    };\n\t                                    _stack.push(_stackItem);\n\t                                    // Increase tempY0 by d to restore previous y0\n\t                                    _tempY0 += d;\n\t                                });\n\t                            })();\n\t                        } else {\n\t                            _stackItem = {\n\t                                \"color\": color(0),\n\t                                \"y0\": 0,\n\t                                \"y1\": _dsArray,\n\t                                \"group\": stacks[0] || 0,\n\t                                \"name\": _C2.default.get(self.keys.name, data),\n\t                                \"data-ref\": _C2.default.guid(),\n\t                                \"enable\": true\n\t                            };\n\t                            _stack.push(_stackItem);\n\t                        }\n\t                        _group.stack = _stack;\n\t\n\t                        self.dataTarget.push(_group);\n\t                    });\n\t\n\t                    return self.dataTarget;\n\t                    break;\n\t\n\t                default:\n\t                    return self.dataSource;\n\t                    break;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"getDataTargetForPieChart\",\n\t        value: function getDataTargetForPieChart() {\n\t            var self = this;\n\t\n\t            var color = self.colorRange;\n\t            self.dataSource.forEach(function (data, index) {\n\t                var _data = {\n\t                    \"color\": color(index),\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"value\": _C2.default.get(self.keys.value, data),\n\t                    \"data-ref\": _C2.default.guid(),\n\t                    \"enable\": true\n\t                };\n\t                self.dataTarget.push(_data);\n\t            });\n\t\n\t            return self.dataTarget;\n\t        }\n\t    }, {\n\t        key: \"getDataTargetForDonutChart\",\n\t        value: function getDataTargetForDonutChart() {\n\t            var self = this;\n\t\n\t            var color = self.colorRange;\n\t            self.dataSource.forEach(function (data, index) {\n\t                var _data = {\n\t                    \"color\": color(index),\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"value\": _C2.default.get(self.keys.value, data),\n\t                    \"data-ref\": _C2.default.guid(),\n\t                    \"enable\": true\n\t                };\n\t                self.dataTarget.push(_data);\n\t            });\n\t\n\t            return self.dataTarget;\n\t        }\n\t    }, {\n\t        key: \"getDataTargetForTimelineChart\",\n\t        value: function getDataTargetForTimelineChart() {\n\t            var self = this;\n\t\n\t            var color = self.colorRange;\n\t\n\t            self.dataSource.forEach(function (data, index) {\n\t\n\t                var _data = {\n\t                    // \"color\"     : color(index),\n\t                    \"icon\": data.icon,\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"value\": [],\n\t                    \"data-ref\": _C2.default.guid(),\n\t                    \"enable\": true\n\t                };\n\t\n\t                var _dsArray = _C2.default.get(self.keys.value, data),\n\t                    _valueArray = [],\n\t                    _valueItem = {\n\t                    \"start\": null,\n\t                    \"end\": null,\n\t                    \"color\": \"#fff\",\n\t                    \"data-ref\": null,\n\t                    \"enable\": true\n\t                };\n\t\n\t                if (_C2.default.isArray(_dsArray)) {\n\t                    _dsArray.forEach(function (d, i) {\n\t                        _valueItem = {\n\t                            \"start\": d.start,\n\t                            \"end\": d.end,\n\t                            \"color\": color(index),\n\t                            \"data-ref\": _C2.default.guid(),\n\t                            \"enable\": true\n\t                        };\n\t                        _valueArray.push(_valueItem);\n\t                    });\n\t                } else {\n\t                    _valueItem = {\n\t                        \"start\": d.start,\n\t                        \"end\": d.end,\n\t                        \"color\": color(index),\n\t                        \"data-ref\": _C2.default.guid(),\n\t                        \"enable\": true\n\t                    };\n\t                    _valueArray.push(_valueItem);\n\t                }\n\t                _data.value = _valueArray;\n\t\n\t                self.dataTarget.push(_data);\n\t            });\n\t            return self.dataTarget;\n\t        }\n\t\n\t        /*=====  End of Normalize Data For Charts  ======*/\n\t\n\t        /*=============================\r\n\t        =            Utils            =\r\n\t        =============================*/\n\t        // getBarColorForBarChart() {\n\t        //     var self = this;\n\t\n\t        //     var color = self.colorRange;\n\t        //     if (typeof color == 'string') {\n\t        //         try {\n\t        //             return d3.scale[color]();    \n\t        //         }\n\t        //         catch(err) {\n\t        //             return function(i) {\n\t        //                 return color;\n\t        //             };\n\t        //         }\n\t        //     } else if (typeof color == 'object') {\n\t        //         return d3.scale.ordinal().range(color);\n\t        //     }\n\t        // }\n\t\n\t\n\t        /*=====  End of Utils  ======*/\n\t\n\t        /*=============================================\r\n\t        =            Data Input From Files            =\r\n\t        =============================================*/\n\t\n\t    }, {\n\t        key: \"getCsv\",\n\t        value: function getCsv() {\n\t\n\t            var self = this;\n\t\n\t            d3.csv(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                return data;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getTsv\",\n\t        value: function getTsv() {\n\t\n\t            var self = this;\n\t\n\t            d3.tsv(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                return data;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getText\",\n\t        value: function getText() {\n\t\n\t            var self = this;\n\t\n\t            d3.text(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                return JSON.parse(data);\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getJson\",\n\t        value: function getJson() {\n\t            var self = this;\n\t\n\t            d3.json(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                return data;\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getXml\",\n\t        value: function getXml() {\n\t            var self = this;\n\t\n\t            d3.xml(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                // Convert the XML document to an array of objects.\n\t                // Note that querySelectorAll returns a NodeList, not a proper Array,\n\t                // so we must use map.call to invoke array methods.\n\t                data = [].map.call(data.querySelectorAll(\"data\"), function (d) {\n\t                    return {\n\t                        name: d.querySelector(\"name\").textContent,\n\t                        value: d.querySelector(\"value\").textContent\n\t                    };\n\t                });\n\t\n\t                return data;\n\t            });\n\t        }\n\t\n\t        /*=====  End of Data Input From Files  ======*/\n\t\n\t    }, {\n\t        key: \"keys\",\n\t        get: function get() {\n\t            return this._keys;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._keys = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"dataSource\",\n\t        get: function get() {\n\t            return this._dataSource;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataSource = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"dataTarget\",\n\t        get: function get() {\n\t            return this._dataTarget;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataTarget = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"groups\",\n\t        get: function get() {\n\t            return this._groups;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._groups = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"stacks\",\n\t        get: function get() {\n\t            return this._stacks;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._stacks = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"colorRange\",\n\t        get: function get() {\n\t            return this._colorRange;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._colorRange = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return DataAdapter;\n\t}();\n\t\n\texports.default = DataAdapter;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar Helper = {\n\t\n\t    each: function each(loopable, callback, self, reverse) {\n\t        // Check to see if null or undefined firstly.\n\t        var i, len;\n\t        if (self.isArray(loopable)) {\n\t            len = loopable.length;\n\t            if (reverse) {\n\t                for (i = len - 1; i >= 0; i--) {\n\t                    callback.call(self, loopable[i], i);\n\t                }\n\t            } else {\n\t                for (i = 0; i < len; i++) {\n\t                    callback.call(self, loopable[i], i);\n\t                }\n\t            }\n\t        } else if ((typeof loopable === 'undefined' ? 'undefined' : _typeof(loopable)) === 'object') {\n\t            var keys = Object.keys(loopable);\n\t            len = keys.length;\n\t            for (i = 0; i < len; i++) {\n\t                callback.call(self, loopable[keys[i]], keys[i]);\n\t            }\n\t        }\n\t    },\n\t\n\t    // setDefaultConfig: function() {\n\t    //     var self = this;\n\t\n\t    //     if (self.defaultConfig == null || self.defaultConfig === undefined) {\n\t    //         return;\n\t    //     } else {\n\t    //         self.lastConfig = self.merge(Chart._options, Chart);\n\t    //         self.each(self.lastConfig, function(value, index) {\n\t    //             // var prefixCfg = self.setPrefix(index);\n\t    //             self.setValue(self.lastConfig[index], index);\n\t    //         }, self);\n\t    //     }\n\t    // }\n\t\n\t    setValue: function setValue(value, key) {\n\t        var self = this;\n\t        self[key] = value;\n\t    },\n\t\n\t    setPrefix: function setPrefix(config) {\n\t        var constPrefix = '_';\n\t        if (config) {\n\t            return constPrefix + config;\n\t        }\n\t    },\n\t\n\t    isEmpty: function isEmpty(value) {\n\t        return value === null || value === undefined || Util.isArray(value) && value.length === 0;\n\t    },\n\t\n\t    isObject: function isObject(object) {\n\t        return !Util.isEmpty(object) && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';\n\t    },\n\t\n\t    isArray: function isArray(array) {\n\t        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\n\t    },\n\t\n\t    isFunction: function isFunction(func) {\n\t        return !Util.isEmpty(func) && typeof func === 'function';\n\t    },\n\t\n\t    merge: function merge(obj1, obj2) {\n\t        var obj3 = {};\n\t        for (var attrname in obj2) {\n\t            obj3[attrname] = obj2[attrname];\n\t        }\n\t        for (var attrname in obj1) {\n\t            obj3[attrname] = obj1[attrname];\n\t        }\n\t        return obj3;\n\t    },\n\t\n\t    get: function get(_key, _data) {\n\t        var _keys = _key.split(\".\");\n\t        var _current = _data;\n\t        var self = this;\n\t\n\t        for (var i = 0, len = _keys.length; i < len; i++) {\n\t            var _fun = _keys[i].split(\"|\");\n\t\n\t            if (_fun && _fun.length == 2) {\n\t                _keys[i] = _fun[0];\n\t                _fun = _fun[1];\n\t            } else {\n\t                _fun = null;\n\t            }\n\t\n\t            if ('undefined' == typeof _current[_keys[i]]) {\n\t                return '';\n\t            } else {\n\t                _current = _current[_keys[i]];\n\t            }\n\t\n\t            if (null !== _fun) {\n\t                _current = self.filter[_fun].call(this, _current);\n\t            }\n\t        }\n\t\n\t        return _current;\n\t    },\n\t\n\t    max: function max(arr) {\n\t        return Math.max.apply(Math, _toConsumableArray(arr));\n\t    },\n\t\n\t    sum: function sum(arr) {\n\t        return arr.reduce(function (a, b) {\n\t            return a + b;\n\t        }, 0);\n\t    },\n\t\n\t    guid: function guid() {\n\t        return 'c9-xxxxxx-4xxx-yxxx'.replace(/[xy]/g, function (c) {\n\t            var r = Math.random() * 16 | 0,\n\t                v = c == 'x' ? r : r & 0x3 | 0x8;\n\t            return v.toString(16);\n\t        });\n\t    }\n\t\n\t};\n\t\n\tvar Util = {\n\t    isEmpty: function isEmpty(value) {\n\t        return value === null || value === undefined;\n\t    },\n\t\n\t    isArray: function isArray(array) {\n\t        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\n\t    }\n\t};\n\t\n\tmodule.exports = Helper;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(2);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(4);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(3);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(12);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(6);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tvar _C13 = __webpack_require__(5);\n\t\n\tvar _C14 = _interopRequireDefault(_C13);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BarChart = function (_Chart) {\n\t    _inherits(BarChart, _Chart);\n\t\n\t    function BarChart(options) {\n\t        _classCallCheck(this, BarChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (BarChart.__proto__ || Object.getPrototypeOf(BarChart)).call(this, options));\n\t\n\t        var self = _this;\n\t        var config = {\n\t            barWidth: undefined\n\t        };\n\t\n\t        var width = self.width - self.margin.left - self.margin.right;\n\t        var height = self.height - self.margin.top - self.margin.bottom;\n\t        // var groupCount   = 0; // use to count how many element in group\n\t        // var groupStart   = 0; // calculate the number of those first element that just have only 1 value\n\t\n\t        self.body.type = \"bar\";\n\t        // self._groupType     = options.groupType     ||  config.groupType;\n\t\n\t        var dataOption = self.dataOption;\n\t        dataOption.colorRange = self.colorRange;\n\t\n\t        var da = new _C14.default(dataOption);\n\t        self.dataTarget = da.getDataTarget(\"bar\");\n\t        var barChartType = da.getDataTypeForBarChart();\n\t        if (barChartType != \"single\") {\n\t            self._groupNames = da.groups || da.stacks; //define group names use for showing legend\n\t            self._isGroup = barChartType == \"group\";\n\t        }\n\t\n\t        // self.data.forEach(function(d, i) {\n\t        //     var y0 = 0; // calculate stacked data (top of each bar)\n\t        //     var count = 0; // count number of group\n\t        //     groupStart = i; \n\t        //     if (typeof d.value === \"object\") {\n\t        //         if (self.groupType == \"stack\") {\n\t        //             d.stack = d.value.map(function(v) {\n\t        //                 count++;\n\t        //                 return {name: d.name, y0: y0, y1: y0 += v, group: self._groupNames.length > 0 ? self._groupNames[count - 1] : \"Group \" + count};\n\t        //             });\n\t        //             d.total = d.stack[d.stack.length - 1].y1;\n\t        //         }\n\t        //         else if (self.groupType == \"group\") {\n\t        //             var total = -Infinity;\n\t        //             d.stack = d.value.map(function(v) {\n\t        //                 count++;\n\t        //                 total = v > total ? v : total;\n\t        //                 return {name: d.name, y0: y0, y1: v, group: self._groupNames.length > 0 ? self._groupNames[count - 1] : \"Group \" + count};\n\t        //             });\n\t        //             d.total = total;\n\t        //         }\n\t        //     }\n\t        //     else {\n\t        //         d.stack = [{name: d.name, y0: y0, y1: d.value, group: count > 0 ? self._groupNames.length > 0 ? self._groupNames[count] : \"Group \" + ++count : undefined}];\n\t        //         d.total = d.stack[d.stack.length - 1].y1;\n\t        //     }\n\t        //     if (count > groupCount)\n\t        //         groupCount = count;\n\t        // });\n\t\n\t        // // assign group to those first elements in data if they don't have\n\t        // for (var i = 0; i < groupStart - 1; i++) {\n\t        //     self.data[i].stack[0].group = self._groupNames.length > 0 ? self._groupNames[0] : \"Group 1\";\n\t        // };\n\t\n\t        // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\n\t        var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\n\t        var y = d3.scale.linear().range([height, 0]);\n\t\n\t        x.domain(self.dataTarget.map(function (d) {\n\t            return d.stack[0].name;\n\t        }));\n\t\n\t        y.domain([0, d3.max(self.dataTarget, function (d) {\n\t            return d.max;\n\t        })]);\n\t\n\t        /******** Handle for grouped, stacked bar chart ********/\n\t        if (self._groupNames) {\n\t            self._xGroup = d3.scale.ordinal();\n\t            self._xGroup.domain(self._groupNames).rangeRoundBands([0, x.rangeBand()]);\n\t        }\n\t\n\t        //self-define group names if user do not define\n\t        // if (self._groupNames.length == 0)\n\t        //     for (var i = 1; i <= groupCount; i++) {\n\t        //         self._groupNames.push(\"Group \" + i);\n\t        //     };\n\t\n\t        /**********************************************/\n\t\n\t        // Make flexible width according to barWidth\n\t        config.barWidth = x.rangeBand();\n\t        self._barWidth = options.barWidth || config.barWidth;\n\t        self._x = x;\n\t        self._y = y;\n\t        self.updateConfig();\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(BarChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        /**\r\n\t         * Init Bar Chart Config\r\n\t         */\n\t        value: function updateConfig() {\n\t            var self = this,\n\t                color = self.colorRange,\n\t                x = self._x,\n\t                y = self._y,\n\t                xGroup = self._xGroup;\n\t\n\t            var bar = self.body.selectAll(\".bar\").data(self.dataTarget).enter().append(\"g\").attr(\"class\", \"c9-chart-bar c9-custom-bar\").attr(\"transform\", function (d) {\n\t                return \"translate(\" + x(d.stack[0].name) + \",0)\";\n\t            });\n\t\n\t            var bars = bar.selectAll(\".c9-custom-rect\").data(function (d) {\n\t                return d.stack;\n\t            });\n\t\n\t            bars.enter().append(\"rect\").attr(\"class\", \"c9-custom-rect\").style(\"fill\", function (d, i) {\n\t                return d.color || color(i);\n\t            }).attr(\"x\", function (d) {\n\t                return self.isGroup ? xGroup(d.group) : undefined;\n\t            }).attr(\"y\", function (d) {\n\t                return y(d.y1);\n\t            }).attr(\"width\", function (d) {\n\t                return self.isGroup ? xGroup.rangeBand() : x.rangeBand();\n\t            }).attr(\"height\", function (d) {\n\t                return y(d.y0) - y(d.y1);\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * [updateLegendInteraction description]\r\n\t         * @param  {[type]} data          [description]\r\n\t         * @param  {[type]} groupNames    [description]\r\n\t         * @param  {[type]} groupNamesOld [description]\r\n\t         * @param  {[type]} newLabel      [description]\r\n\t         * @return {[type]}               [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateLegendInteraction',\n\t        value: function updateLegendInteraction(data, groupNames, groupNamesOld, newLabel) {\n\t            var self = this;\n\t            var type = self.groupType;\n\t\n\t            var xGroup = d3.scale.ordinal();\n\t            xGroup.domain(groupNames).rangeRoundBands([0, self.x.rangeBand()]);\n\t\n\t            var xGroupOld = d3.scale.ordinal();\n\t            xGroupOld.domain(groupNamesOld).rangeRoundBands([0, self.x.rangeBand()]);\n\t\n\t            var midGroup = undefined;\n\t            //check add new label in the middle\n\t            if (groupNames.length > groupNamesOld.length && 0 < groupNames.indexOf(newLabel) && groupNames.indexOf(newLabel) < groupNames.length - 1) midGroup = groupNamesOld[groupNames.indexOf(newLabel)];\n\t\n\t            // self.body.selectAll(\".c9-custom-rect\").transition().duration(750).attr(\"height\", 0).remove();\n\t            self.body.selectAll(\".c9-custom-rect\").data([]).exit().remove();\n\t\n\t            var bar = self.body.selectAll(\".bar\").data(data).enter().append(\"g\").attr(\"class\", \"c9-chart-bar c9-custom-bar\").attr(\"transform\", function (d, i) {\n\t                return \"translate(\" + self.x(self.dataTarget[i].stack[0].name) + \",0)\";\n\t            });\n\t\n\t            var bars = bar.selectAll(\".c9-custom-rect\").data(function (d) {\n\t                return d.stack;\n\t            });\n\t\n\t            bars.enter().append(\"rect\").attr(\"class\", \"c9-custom-rect\").style(\"fill\", function (d) {\n\t                return d.color;\n\t            }).attr(\"x\", function (d) {\n\t                // use for stack\n\t                if (!self.isGroup) return undefined;\n\t                // use for group\n\t                // group member positioning at the end of groups, so its x is the position of right edge of bar\n\t                if (groupNames.length > groupNamesOld.length && d.group == newLabel && groupNames.indexOf(newLabel) == groupNames.length - 1) return self.x.rangeBand();\n\t                return midGroup ? d.group == newLabel ? xGroupOld(midGroup) : xGroupOld(d.group) : xGroupOld(d.group);\n\t            }).attr(\"y\", function (d) {\n\t                return self.y(d.y1);\n\t            }).attr(\"width\", function (d) {\n\t                return !self.isGroup ? self.x.rangeBand() : d.group == newLabel ? 0 : xGroupOld.rangeBand();\n\t            }).attr(\"height\", function (d) {\n\t                return self.y(d.y0) - self.y(d.y1);\n\t            });\n\t\n\t            bars.transition().duration(750).attr(\"x\", function (d) {\n\t                return !self.isGroup ? undefined : xGroup(d.group);\n\t            }).attr(\"width\", function (d) {\n\t                return !self.isGroup ? self.x.rangeBand() : xGroup.rangeBand();\n\t            });\n\t\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * [Main draw function of Bar Chart]\r\n\t         * @return {[type]} [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            var self = this;\n\t            var axis = new _C4.default(self.options, self.body, self.dataTarget, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom, null, null);\n\t            var title = new _C6.default(self.options, self.body, self.width, self.height, self.margin);\n\t            var legend = new _C8.default(self.options, self.body, self.dataTarget);\n\t\n\t            legend.draw();\n\t            legend.updateInteractionForBarChart(self);\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Retrieve value from upper and lower bounds of each stack\r\n\t         * @param  {String} lower Lower bound of value\r\n\t         * @param  {String} upper Upper bound of value\r\n\t         * @return {String}       Value to return\r\n\t         */\n\t\n\t    }, {\n\t        key: 'retrieveValue',\n\t        value: function retrieveValue(lower, upper) {\n\t            var d1 = Math.floor(lower) === lower ? 0 : lower.toString().split(\".\")[1].length;\n\t            var d2 = Math.floor(upper) === upper ? 0 : upper.toString().split(\".\")[1].length;\n\t            return d1 > d2 ? (upper - lower).toFixed(d1) : (upper - lower).toFixed(d2);\n\t        }\n\t\n\t        /**\r\n\t         * Select all bars as type RECT in Bar Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllBar',\n\t        value: function selectAllBar() {\n\t            var self = this;\n\t\n\t            return self.body.selectAll('.c9-custom-rect');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         * @return {} \r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                hoverEnable = self.hover.enable,\n\t                hoverOptions = self.hover.options,\n\t                selector = self.selectAllBar(),\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            if (hoverEnable) {\n\t                // Define the div for the tooltip\n\t                // TODO: Allow user to add custom DIV, CLASS\n\t                // Make sure that: \n\t                // - Rect not overflow the bar, if not, hover effect will be messed\n\t                // -> So, just align the rect to right/left (x: 25) to avoid it\n\t                // -> And, the text will be align also\n\t                var div = self.body.append('g').style('display', 'none');\n\t                // Rect Container\n\t                div.append('rect').attr('class', 'c9-custom-tooltip-box').attr('x', 25).attr('rx', 5).attr('ry', 5).style('position', 'absolute').style('width', '100px').style('height', '50px').style('fill', '#FEE5E2').style('stroke', '#FDCCC6').style('stroke-width', 2);\n\t                // First line\n\t                var text_1 = div.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 10).style('font-family', 'sans-serif').style('font-size', '10px');\n\t                // Second line\n\t                var text_2 = div.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 20).style('font-family', 'sans-serif').style('font-size', '10px');\n\t\n\t                selector.on(\"mouseover\", function (d) {\n\t                    div.transition().duration(hoverOptions.onMouseOver.fadeIn).style(\"display\", 'block').attr(\"transform\", \"translate(\" + self.x(d.name) + \",\" + self.y(self.retrieveValue(d.y0, d.y1)) + \")\");\n\t\n\t                    text_1.text('Name: ' + d.name);\n\t                    text_2.text('Value: ' + self.retrieveValue(d.y0, d.y1));\n\t                }).on(\"mouseout\", function (d) {\n\t                    div.transition().duration(hoverOptions.onMouseOut.fadeOut).style('display', 'none');\n\t                });\n\t            }\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'barWidth',\n\t        get: function get() {\n\t            return this._barWidth;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(newBarWidth) {\n\t            if (newBarWidth) {\n\t                this._barWidth = newBarWidth;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'colorRange',\n\t        get: function get() {\n\t            var color = this._colorRange;\n\t            if (typeof color == 'string') {\n\t                try {\n\t                    return d3.scale[color]();\n\t                } catch (err) {\n\t                    return function (i) {\n\t                        return color;\n\t                    };\n\t                }\n\t            } else if ((typeof color === 'undefined' ? 'undefined' : _typeof(color)) == 'object') {\n\t                return d3.scale.ordinal().range(color);\n\t            }\n\t        },\n\t        set: function set(newBarColor) {\n\t            if (newBarColor) {\n\t                this._colorRange = newBarColor;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'groupType',\n\t        get: function get() {\n\t            return this._groupType;\n\t        },\n\t        set: function set(newGroupType) {\n\t            if (newGroupType) {\n\t                this._groupType = newGroupType;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'x',\n\t        get: function get() {\n\t            return this._x;\n\t        },\n\t        set: function set(newX) {\n\t            if (newX) {\n\t                this._x = newX;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'y',\n\t        get: function get() {\n\t            return this._y;\n\t        },\n\t        set: function set(newY) {\n\t            if (newY) {\n\t                this._y = newY;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'xGroup',\n\t        get: function get() {\n\t            return this._xGroup;\n\t        },\n\t        set: function set(newXGroup) {\n\t            if (newXGroup) {\n\t                this._xGroup = newXGroup;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'groupNames',\n\t        get: function get() {\n\t            return this._groupNames;\n\t        },\n\t        set: function set(newGroupNames) {\n\t            if (newGroupNames) {\n\t                this._groupNames = newGroupNames;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'chartType',\n\t        get: function get() {\n\t            return this._body.type;\n\t        }\n\t    }, {\n\t        key: 'isGroup',\n\t        get: function get() {\n\t            return this._isGroup;\n\t        }\n\t    }]);\n\t\n\t    return BarChart;\n\t}(_C2.default);\n\t\n\texports.default = BarChart;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(2);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(4);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(3);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(5);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar DonutChart = function (_Chart) {\n\t    _inherits(DonutChart, _Chart);\n\t\n\t    function DonutChart(options) {\n\t        _classCallCheck(this, DonutChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (DonutChart.__proto__ || Object.getPrototypeOf(DonutChart)).call(this, options));\n\t\n\t        var self = _this;\n\t        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\n\t        var config = {\n\t            outerRadius: R,\n\t            innerRadius: R > 80 ? R - 80 : R - 40,\n\t            showText: true // show/hide text on middle or each donut\n\t        };\n\t\n\t        self._outerRadius = options.outerRadius || config.outerRadius;\n\t        self._innerRadius = options.innerRadius || config.innerRadius;\n\t        self._showText = options.showText || config.showText;\n\t        self.body.type = 'donut';\n\t\n\t        var dataOption = self.dataOption;\n\t        dataOption.colorRange = self.colorRange;\n\t\n\t        var da = new _C10.default(dataOption);\n\t        self.dataTarget = da.getDataTarget(\"donut\");\n\t\n\t        self.updateConfig();\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(DonutChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /**\r\n\t         * Update Donut Chart Config\r\n\t         */\n\t        value: function updateConfig() {\n\t            var self = this;\n\t\n\t            // chartInnerAfter, chartOuterAfter define easing radius of donut chart during animation\n\t            // TODO: Add configs allow users to define these radius\n\t            var width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom,\n\t                color = self.colorRange,\n\t                chartInnerBefore = self.innerRadius,\n\t                chartOuterBefore = self.outerRadius,\n\t                chartInnerAfter = self.innerRadius,\n\t                chartOuterAfter = self.outerRadius * 1.2;\n\t\n\t            var hoverOptions = self.hover.options,\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            // Define Animations for paths\n\t            self.pathAnim = function (path, dir) {\n\t                switch (dir) {\n\t\n\t                    case 'mouseover':\n\t                        path.transition().attr('d', d3.svg.arc().innerRadius(chartInnerAfter).outerRadius(chartOuterAfter))\n\t                        // .style('stroke', '#000')\n\t                        .attr('fill-opacity', '1.0');\n\t                        break;\n\t\n\t                    case 'mouseout':\n\t                        path.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerBefore).outerRadius(chartOuterBefore))\n\t                        // .style('stroke', '#000')\n\t                        .attr('fill-opacity', '0.5');\n\t                        break;\n\t\n\t                }\n\t            };\n\t\n\t            // Main Event Dispatch for paths in donut chart\n\t            self.eventFactory = {\n\t\n\t                'mouseover': function mouseover(d, i, j) {\n\t                    self.pathAnim(d3.select(this), 'mouseover');\n\t                    self.tooltip().mouseover(d);\n\t\n\t                    // var thisDonut = self.body..select('.type' + j);\n\t                    // thisDonut.select('.value').text(function(donut_d) {\n\t                    //     return d.data.val.toFixed(1) + donut_d.unit;\n\t                    // });\n\t                    // thisDonut.select('.percentage').text(function(donut_d) {\n\t                    //     return (d.data.val/donut_d.total*100).toFixed(2) + '%';\n\t                    // });\n\t                },\n\t\n\t                'mouseout': function mouseout(d, i, j) {\n\t                    self.pathAnim(d3.select(this), 'mouseout');\n\t                    self.tooltip().mouseout(d);\n\t\n\t                    // var thisDonut = charts.select('.type' + j);\n\t                    // setCenterText(thisDonut);\n\t                }\n\t\n\t            };\n\t\n\t            // Define the tooltip\n\t            // TODO: Define it as a individual CLASS, in C9.Tooltip\n\t            self.tooltip = function () {\n\t                // First, remove all before hover div\n\t                self.body.selectAll('g.c9-custom-tooltip-container').remove();\n\t\n\t                // TODO: Add margin to tooltip configs\n\t                // Default: (100, 100) relative to mouse coordinate and chart margin transformation\n\t                var divOnHover = self.body.append('g').attr('class', 'c9-custom-tooltip-container').attr(\"transform\", function () {\n\t                    return 'translate(' + (d3.mouse(this)[0] - 100) + \",\" + (d3.mouse(this)[1] - 100) + ')';\n\t                }).style('display', 'none');\n\t\n\t                var arc = d3.svg.arc().outerRadius(self.outerRadius).innerRadius(self.innerRadius);\n\t\n\t                // Rect Container\n\t                divOnHover.append('rect').attr('class', 'c9-custom-tooltip-box').attr('x', 25).attr('rx', 5).attr('ry', 5).style('position', 'absolute').style('width', '100px').style('height', '50px').attr('fill', '#FEE5E2').attr('stroke', '#FDCCC6').attr('stroke-width', 2);\n\t                // First line\n\t                var text_1 = divOnHover.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 10).style('font-family', 'sans-serif').style('font-size', '10px');\n\t                // Second line\n\t                var text_2 = divOnHover.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 20).style('font-family', 'sans-serif').style('font-size', '10px');\n\t\n\t                var tooltipEventFactory = {\n\t\n\t                    'mouseover': function mouseover(d) {\n\t                        divOnHover.transition().duration(hoverOptions.onMouseOver.fadeIn).style(\"display\", 'block');\n\t\n\t                        var name = d.data.name || d.data.data.name,\n\t                            value = d.data.value || d.data.data.value;\n\t\n\t                        text_1.text('Name: ' + name);\n\t                        text_2.text('Value: ' + value);\n\t                    },\n\t\n\t                    'mouseout': function mouseout(d) {\n\t                        divOnHover.transition().duration(hoverOptions.onMouseOut.fadeOut).style('display', 'none');\n\t                    }\n\t\n\t                };\n\t\n\t                return tooltipEventFactory;\n\t            };\n\t\n\t            self.arc = d3.svg.arc().outerRadius(self.outerRadius).innerRadius(self.innerRadius);\n\t\n\t            //we can sort data here\n\t            self.pie = d3.layout.pie().sort(null).value(function (d) {\n\t                return d.value;\n\t            });\n\t\n\t            //draw chart\n\t            var arcs = self.body.append('g').attr('class', 'c9-chart c9-custom-arc-container').attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')').selectAll('.c9-chart-donut.c9-custom-arc').data(self.pie(self.dataTarget)).enter().append('g').attr('class', 'c9-chart-donut c9-custom-arc');\n\t\n\t            // Append main path contains donut\n\t            // TODO: add a unique class to allow Legend could find selected donut/pie\n\t            arcs.append('path').attr('class', 'c9-chart-donut c9-custom-path').attr('data-ref', function (d) {\n\t                return d.data['data-ref'];\n\t            }).attr('d', self.arc).attr('fill', function (d, i) {\n\t                return color(i);\n\t            }).attr('stroke', '#ffffff').attr('fill-opacity', '0.5').each(function (d) {\n\t                self._currentData = d;\n\t            });\n\t            // Current data used for calculate interpolation \n\t            // between current arc vs disabled arc\n\t\n\t\n\t            // Append middle text display name\n\t            // if (self.showText) {\n\t            //     arcs.append('text')\n\t            //             .attr('class', 'c9-chart-donut c9-custom-text')\n\t            //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\n\t            //             .attr('dy', '.35em')\n\t            //             .attr('text-anchor', 'middle')\n\t            //             .text(function(d) { return d.data.name; });\n\t            // }\n\t        }\n\t\n\t        /**\r\n\t         * Main draw function of Donut Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t\n\t            var self = this;\n\t\n\t            var title = new _C6.default(self.options, self.body, self.width, self.height, self.margin);\n\t            var legend = new _C8.default(self.options, self.body, self.dataTarget);\n\t\n\t            // Draw legend\n\t            legend.draw();\n\t            legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\n\t\n\t            // Update interaction of this own chart\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Select all path as type PATH in Donut Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllPath',\n\t        value: function selectAllPath() {\n\t            var self = this;\n\t\n\t            return self.body\n\t            // .selectAll('g')\n\t            .selectAll('path.c9-chart-donut.c9-custom-path');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         * @return {} \r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                hoverEnable = self.hover.enable,\n\t                hoverOptions = self.hover.options,\n\t                selector = self.selectAllPath(),\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            if (hoverEnable) {\n\t                selector.on(self._eventFactory);\n\t            }\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'outerRadius',\n\t        get: function get() {\n\t            return this._outerRadius;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(newOuterRadius) {\n\t            if (newOuterRadius) {\n\t                this._outerRadius = newOuterRadius;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'innerRadius',\n\t        get: function get() {\n\t            return this._innerRadius;\n\t        },\n\t        set: function set(newInnerRadius) {\n\t            if (newInnerRadius) {\n\t                this._innerRadius = newInnerRadius;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'showText',\n\t        get: function get() {\n\t            return this._showText;\n\t        },\n\t        set: function set(newShowText) {\n\t            if (newShowText) {\n\t                this._showText = newShowText;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'eventFactory',\n\t        get: function get() {\n\t            return this._eventFactory;\n\t        },\n\t        set: function set(newEventFactory) {\n\t            if (newEventFactory) {\n\t                this._eventFactory = newEventFactory;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pathAnim',\n\t        get: function get() {\n\t            return this._pathAnim;\n\t        },\n\t        set: function set(newPathAnim) {\n\t            if (newPathAnim) {\n\t                this._pathAnim = newPathAnim;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'tooltip',\n\t        get: function get() {\n\t            return this._tooltip;\n\t        },\n\t        set: function set(newTooltip) {\n\t            if (newTooltip) {\n\t                this._tooltip = newTooltip;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pie',\n\t        get: function get() {\n\t            return this._pie;\n\t        },\n\t        set: function set(newPie) {\n\t            if (newPie) {\n\t                this._pie = newPie;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'arc',\n\t        get: function get() {\n\t            return this._arc;\n\t        },\n\t        set: function set(newArc) {\n\t            if (newArc) {\n\t                this._arc = newArc;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'currentData',\n\t        get: function get() {\n\t            return this._currentData;\n\t        },\n\t        set: function set(newCurrentData) {\n\t            if (newCurrentData) {\n\t                this._currentData = newCurrentData;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'chartType',\n\t        get: function get() {\n\t            return this._body.type;\n\t        }\n\t    }]);\n\t\n\t    return DonutChart;\n\t}(_C2.default);\n\t\n\texports.default = DonutChart;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(2);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(4);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(3);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar LineChart = function (_Chart) {\n\t    _inherits(LineChart, _Chart);\n\t\n\t    function LineChart(options) {\n\t        _classCallCheck(this, LineChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (LineChart.__proto__ || Object.getPrototypeOf(LineChart)).call(this, options));\n\t\n\t        var self = _this;\n\t        var config = {\n\t            pointShow: false,\n\t            pointFill: \"#fb8072\",\n\t            pointStroke: \"#d26b5f\",\n\t            pointOpacity: 1.0,\n\t            pointRadius: 5,\n\t            pointHoverEnable: false,\n\t            interpolate: \"linear\" // refer: https://www.dashingd3js.com/svg-paths-and-d3js\n\t        };\n\t\n\t        self._pointShow = options.pointShow || config.pointShow;\n\t        self._pointRadius = options.pointRadius || config.pointRadius;\n\t        self._pointFill = options.pointFill || config.pointFill;\n\t        self._pointStroke = options.pointStroke || config.pointStroke;\n\t        self._pointOpacity = options.pointOpacity || config.pointOpacity;\n\t        self._pointHoverEnable = options.pointHoverEnable || config.pointHoverEnable;\n\t        self._interpolate = options.interpolate || config.interpolate;\n\t        self.body.type = \"line\";\n\t\n\t        var width = self.width - self.margin.left - self.margin.right;\n\t        var height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t        var x = d3.scale.linear().range([0, width]);\n\t        var y = d3.scale.linear().range([height, 0]);\n\t\n\t        self._x = x;\n\t        self._y = y;\n\t\n\t        self.updateConfig();\n\t\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t    _createClass(LineChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        /**\r\n\t         * First init Line Chart\r\n\t         */\n\t        value: function updateConfig() {\n\t            var self = this,\n\t                x = self._x,\n\t                y = self._y;\n\t\n\t            self._dataGroup = d3.nest().key(function (d) {\n\t                return d.Client;\n\t            }).entries(self.data);\n\t\n\t            var dataGroup = self._dataGroup;\n\t\n\t            x.domain([d3.min(self.data, function (d) {\n\t                return d.year;\n\t            }), d3.max(self.data, function (d) {\n\t                return d.year;\n\t            })]);\n\t            y.domain([d3.min(self.data, function (d) {\n\t                return d.sale;\n\t            }), d3.max(self.data, function (d) {\n\t                return d.sale;\n\t            })]);\n\t\n\t            self.xAxis = d3.svg.axis().scale(x);\n\t            self.yAxis = d3.svg.axis().scale(y).orient(\"left\");\n\t\n\t            var lineGen = d3.svg.line().x(function (d) {\n\t                return x(d.year);\n\t            }).y(function (d) {\n\t                return y(d.sale);\n\t            }).interpolate(self.interpolate);\n\t\n\t            var _body = self.body,\n\t                _colorRange = self.colorRange,\n\t                _pointShow = self.pointShow,\n\t                _pointRadius = self.pointRadius,\n\t                _pointFill = self.pointFill,\n\t                _pointStroke = self.pointStroke,\n\t                _pointOpacity = self.pointOpacity;\n\t\n\t            dataGroup.forEach(function (d, i) {\n\t                _body.append('path').attr('d', lineGen(d.values)).attr('stroke', _colorRange(i)).attr('stroke-width', 2).attr('id', 'line_' + d.key).attr('fill', 'none');\n\t\n\t                if (_pointShow) {\n\t                    _body.selectAll(\"dot\").data(d.values).enter().append(\"circle\").attr('class', 'c9-chart-line c9-circle-custom').attr(\"r\", _pointRadius).attr(\"cx\", function (_d) {\n\t                        return x(_d.year);\n\t                    }).attr(\"cy\", function (_d) {\n\t                        return y(_d.sale);\n\t                    }).style(\"fill\", _pointFill).style(\"stroke\", _pointStroke).style(\"opacity\", _pointOpacity);\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Main draw function of Line Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            var self = this;\n\t\n\t            var axis = new _C4.default(self.options, self.body, self.data, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom, self.xAxis, self.yAxis);\n\t            var title = new _C6.default(self.options, self.body, self.width, self.height, self.margin);\n\t            var legend = new _C8.default(self.options, self.body, self.colorRange, self.data);\n\t\n\t            // Draw legend\n\t            legend.draw();\n\t\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Select all circle as type CIRCLE in Line Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllCircle',\n\t        value: function selectAllCircle() {\n\t            var self = this;\n\t\n\t            return self.body.selectAll('circle.c9-chart-line.c9-circle-custom');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                hoverEnable = self.hover.enable,\n\t                hoverOptions = self.hover.options,\n\t                selector = self.selectAllCircle(),\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            if (hoverEnable) {\n\t                // Define the div for the tooltip\n\t                // TODO: Allow user to add custom DIV, CLASS\n\t                // Make sure that: \n\t                // - Rect not overflow the bar, if not, hover effect will be messed\n\t                // -> So, just align the rect to right/left (x: 25) to avoid it\n\t                // -> And, the text will be align also\n\t                var div = self.body.append('g').style('display', 'none');\n\t                // .style('opacity', 0);\n\t                // Rect Container\n\t                div.append('rect').attr('class', 'c9-custom-tooltip-box').attr('x', 25).attr('rx', 5).attr('ry', 5).style('position', 'absolute').style('width', '100px').style('height', '50px').style('fill', '#FEE5E2').style('stroke', '#FDCCC6').style('stroke-width', 2);\n\t                // First line\n\t                var text_1 = div.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 10).style('font-family', 'sans-serif').style('font-size', '10px');\n\t                // Second line\n\t                var text_2 = div.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 20).style('font-family', 'sans-serif').style('font-size', '10px');\n\t\n\t                selector.on(\"mouseover\", function (d) {\n\t                    div.transition().duration(hoverOptions.onMouseOver.fadeIn).style(\"display\", 'block').attr(\"transform\", \"translate(\" + self.x(d.year) + \",\" + self.y(d.sale) + \")\");\n\t\n\t                    text_1.text('Name: ' + d.year);\n\t                    text_2.text('Value: ' + d.sale);\n\t                }).on(\"mouseout\", function (d) {\n\t                    div.transition().duration(hoverOptions.onMouseOut.fadeOut).style(\"display\", 'none');\n\t                });\n\t            }\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'pointShow',\n\t        get: function get() {\n\t            return this._pointShow;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t\n\t        set: function set(newPointShow) {\n\t            if (newPointShow) {\n\t                this._pointShow = newPointShow;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pointFill',\n\t        get: function get() {\n\t            return this._pointFill;\n\t        },\n\t        set: function set(newPointFill) {\n\t            if (newPointFill) {\n\t                this._pointFill = newPointFill;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pointStroke',\n\t        get: function get() {\n\t            return this._pointStroke;\n\t        },\n\t        set: function set(newPointStroke) {\n\t            if (newPointStroke) {\n\t                this._pointStroke = newPointStroke;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pointOpacity',\n\t        get: function get() {\n\t            return this._pointOpacity;\n\t        },\n\t        set: function set(newPointOpacity) {\n\t            if (newPointOpacity) {\n\t                this._pointOpacity = newPointOpacity;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pointRadius',\n\t        get: function get() {\n\t            return this._pointRadius;\n\t        },\n\t        set: function set(newPointRadius) {\n\t            if (newPointRadius) {\n\t                this._pointRadius = newPointRadius;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pointHoverEnable',\n\t        get: function get() {\n\t            return this._pointHoverEnable;\n\t        },\n\t        set: function set(newPointHoverEnable) {\n\t            if (newPointHoverEnable) {\n\t                this._pointHoverEnable = newPointHoverEnable;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'interpolate',\n\t        get: function get() {\n\t            return this._interpolate;\n\t        },\n\t        set: function set(newInterpolate) {\n\t            if (newInterpolate) {\n\t                this._interpolate = newInterpolate;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'x',\n\t        get: function get() {\n\t            return this._x;\n\t        },\n\t        set: function set(newX) {\n\t            if (newX) {\n\t                this._x = newX;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'y',\n\t        get: function get() {\n\t            return this._y;\n\t        },\n\t        set: function set(newY) {\n\t            if (newY) {\n\t                this._y = newY;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dataGroup',\n\t        get: function get() {\n\t            return this._dataGroup;\n\t        },\n\t        set: function set(newDataGroup) {\n\t            if (newDataGroup) {\n\t                this._dataGroup = newDataGroup;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return LineChart;\n\t}(_C2.default);\n\t\n\t// Backup - LOL\n\t// var _currentDataY = this.data;\n\t//         _currentDataY.forEach(function(_currentValue,_index,_arr) {\n\t//                                     _currentDataY[_index].coordinate.sort(function(a,b) {\n\t//                                         return (a.y > b.y) ? 1 : ((b.y > a.y) ? -1 : 0);\n\t//                                     });\n\t//                                 });\n\t//         this.sortedDataY         = _currentDataY;\n\t\n\t//         // Get maximum value of coordinate {x, y}\n\t//         var tempMaxY = [];\n\t\n\t//         for (var i=0; i<this.sortedDataY.length; i++) {\n\t//             tempMaxY[i] = this.sortedDataY[i].coordinate[this.sortedDataY[i].coordinate.length - 1].y;\n\t//         }\n\t\n\t//         var _maxY = Math.max(...tempMaxY);\n\t\n\t\n\t//         var _currentDataX = this.data;\n\t//         _currentDataX.forEach(function(currentValue,index,arr) {\n\t//                                     _currentDataX[index].coordinate.sort(function(a,b) {\n\t//                                         return (a.x > b.x) ? 1 : ((b.x > a.x) ? -1 : 0);\n\t//                                     });\n\t//                                 });\n\t//         this.sortedDataX         = _currentDataX;\n\t//         var tempMaxX = [];\n\t//         for (var i=0; i<this.sortedDataX.length; i++) {\n\t//             tempMaxX[i] = this.sortedDataX[i].coordinate[this.sortedDataX[i].coordinate.length - 1].x;\n\t//         }\n\t//         var _maxX = Math.max(...tempMaxX);\n\t\n\t//         // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\n\t//         var width   = this.width - this.margin.left - this.margin.right;\n\t//         var height  = this.height - this.margin.top - this.margin.bottom;\n\t\n\t//         var x = d3.scale.linear().range([0, width]);\n\t//         var y = d3.scale.linear().range([height, 0]);\n\t\n\t//         x.domain([_maxX, 0]);\n\t//         y.domain([_maxY, 0]);\n\t\n\t//         var lineFunc = d3.svg.line()\n\t//             .x(function(d, i) { return x(d.x); })\n\t//             .y(function(d, i) { return y(d.y); })\n\t//             .interpolate(\"linear\");\n\t\n\t//         // this.body.selectAll('g')\n\t//         //         .data(this.sortedDataX)\n\t//         //         .enter()\n\t//         //         .append('path')\n\t//         //         .attr('class', 'line')\n\t//         //         .attr('d', function(d){\n\t//         //             return lineFunc(d.coordinate);\n\t//         //         });\n\t//         this.body.selectAll('dot')\n\t//                 .data(this.sortedDataX)\n\t//                 .selectAll('dot')\n\t//                 .data(function(d,i) {return d;})\n\t//                 .enter()\n\t//                 .append(\"circle\")\n\t//                 .attr(\"r\", 3.5)\n\t//                 .attr(\"cx\", function(d, i) { console.log(d, i); return x(d.coordinate[i].x); })\n\t//                 .attr(\"cy\", function(d, i) { console.log(d, i); return y(d.coordinate[i].y); });\n\t\n\t\n\texports.default = LineChart;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(2);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(4);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(3);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(5);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PieChart = function (_Chart) {\n\t    _inherits(PieChart, _Chart);\n\t\n\t    function PieChart(options) {\n\t        _classCallCheck(this, PieChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (PieChart.__proto__ || Object.getPrototypeOf(PieChart)).call(this, options));\n\t\n\t        var self = _this;\n\t        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\n\t        var config = {\n\t            radius: R,\n\t            // innerRadius: R > 80 ? R - 80 : R - 40,\n\t            showText: true // show/hide text on middle or each pie\n\t        };\n\t\n\t        self._radius = options.radius || config.radius;\n\t        // self._innerRadius    = options.innerRadius || config.innerRadius;\n\t        self._showText = options.showText || config.showText;\n\t        self.body.type = 'pie';\n\t\n\t        var dataOption = self.dataOption;\n\t        dataOption.colorRange = self.colorRange;\n\t\n\t        var da = new _C10.default(dataOption);\n\t        self.dataTarget = da.getDataTarget(\"pie\");\n\t\n\t        self.updateConfig();\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(PieChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /**\r\n\t         * Update Donut Chart Config\r\n\t         */\n\t        value: function updateConfig() {\n\t            var self = this;\n\t\n\t            // chartInnerAfter, chartOuterAfter define easing radius of pie chart during animation\n\t            // TODO: Add configs allow users to define these radius\n\t            var width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom,\n\t                color = self.colorRange,\n\t                chartInnerBefore = 0,\n\t                chartOuterBefore = self.radius,\n\t                chartInnerAfter = 0,\n\t                chartOuterAfter = self.radius * 1.2;\n\t\n\t            var hoverOptions = self.hover.options,\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            // Define Animations for paths\n\t            self.pathAnim = function (path, dir) {\n\t                switch (dir) {\n\t\n\t                    case 'mouseover':\n\t                        path.transition().attr('d', d3.svg.arc().innerRadius(chartInnerAfter).outerRadius(chartOuterAfter))\n\t                        // .style('stroke', '#FFFFF3')\n\t                        .attr('fill-opacity', '1.0');\n\t                        break;\n\t\n\t                    case 'mouseout':\n\t                        path.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerBefore).outerRadius(chartOuterBefore))\n\t                        // .style('stroke', '#ffffff')\n\t                        .attr('fill-opacity', '0.5');\n\t                        break;\n\t                }\n\t            };\n\t\n\t            // Main Event Dispatch for paths in pie chart\n\t            self.eventFactory = {\n\t\n\t                'mouseover': function mouseover(d, i, j) {\n\t                    self.pathAnim(d3.select(this), 'mouseover');\n\t                    self.tooltip().mouseover(d);\n\t\n\t                    // var thisDonut = self.body..select('.type' + j);\n\t                    // thisDonut.select('.value').text(function(pie_d) {\n\t                    //     return d.data.val.toFixed(1) + pie_d.unit;\n\t                    // });\n\t                    // thisDonut.select('.percentage').text(function(pie_d) {\n\t                    //     return (d.data.val/pie_d.total*100).toFixed(2) + '%';\n\t                    // });\n\t                },\n\t\n\t                'mouseout': function mouseout(d, i, j) {\n\t                    self.pathAnim(d3.select(this), 'mouseout');\n\t                    self.tooltip().mouseout(d);\n\t\n\t                    // var thisDonut = charts.select('.type' + j);\n\t                    // setCenterText(thisDonut);\n\t                }\n\t\n\t            };\n\t\n\t            // Define the tooltip\n\t            // TODO: Define it as a individual CLASS, in C9.Tooltip\n\t            self.tooltip = function () {\n\t                // First, remove all before hover div\n\t                self.body.selectAll('g.c9-custom-tooltip-container').remove();\n\t\n\t                // TODO: Add margin to tooltip configs\n\t                // Default: (100, 100) relative to mouse coordinate and chart margin transformation\n\t                var divOnHover = self.body.append('g').attr('class', 'c9-custom-tooltip-container').attr(\"transform\", function () {\n\t                    return 'translate(' + (d3.mouse(this)[0] - 100) + \",\" + (d3.mouse(this)[1] - 100) + ')';\n\t                }).style('display', 'none');\n\t\n\t                var arc = d3.svg.arc().innerRadius(0).outerRadius(self.radius);\n\t\n\t                // Rect Container\n\t                divOnHover.append('rect').attr('class', 'c9-custom-tooltip-box').attr('x', 25).attr('rx', 5).attr('ry', 5).style('position', 'absolute').style('width', '100px').style('height', '50px').style('fill', '#FEE5E2').style('stroke', '#FDCCC6').style('stroke-width', 2);\n\t                // First line\n\t                var text_1 = divOnHover.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 10).style('font-family', 'sans-serif').style('font-size', '10px');\n\t                // Second line\n\t                var text_2 = divOnHover.append('text').attr('class', 'c9-custom-tooltip-label').attr('x', 30).attr('y', 20).style('font-family', 'sans-serif').style('font-size', '10px');\n\t\n\t                var tooltipEventFactory = {\n\t\n\t                    'mouseover': function mouseover(d) {\n\t                        divOnHover.transition().duration(hoverOptions.onMouseOver.fadeIn).style(\"display\", 'block');\n\t\n\t                        var name = d.data.name || d.data.data.name,\n\t                            value = d.data.value || d.data.data.value;\n\t\n\t                        text_1.text('Name: ' + name);\n\t                        text_2.text('Value: ' + value);\n\t                    },\n\t\n\t                    'mouseout': function mouseout(d) {\n\t                        divOnHover.transition().duration(hoverOptions.onMouseOut.fadeOut).style('display', 'none');\n\t                    }\n\t\n\t                };\n\t\n\t                return tooltipEventFactory;\n\t            };\n\t\n\t            self.arc = d3.svg.arc().innerRadius(0).outerRadius(self.radius);\n\t\n\t            //we can sort data here\n\t            self.pie = d3.layout.pie().sort(null).value(function (d) {\n\t                return d.value;\n\t            });\n\t\n\t            //draw chart\n\t            var arcs = self.body.append('g').attr('class', 'c9-chart c9-custom-arc-container').attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')').selectAll('.c9-chart-pie.c9-custom-arc').data(self.pie(self.dataTarget)).enter().append('g').attr('class', 'c9-chart-pie c9-custom-arc');\n\t\n\t            // Append main path contains pie\n\t            arcs.append('path').attr('class', 'c9-chart-pie c9-custom-path').attr('data-ref', function (d) {\n\t                return d.data['data-ref'];\n\t            }).attr('d', self.arc).attr('fill', function (d, i) {\n\t                return color(i);\n\t            }).attr('stroke', '#ffffff').attr('fill-opacity', '0.5').each(function (d) {\n\t                self._currentData = d;\n\t            });\n\t            // Current data used for calculate interpolation \n\t            // between current arc vs disabled arc\n\t\n\t\n\t            // Append middle text display name\n\t            // if (self.showText) {\n\t            //     arcs.append('text')\n\t            //             .attr('class', 'c9-chart-pie c9-custom-text')\n\t            //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\n\t            //             .attr('dy', '.35em')\n\t            //             .attr('text-anchor', 'middle')\n\t            //             .text(function(d) { return d.data.name; });\n\t            // }\n\t        }\n\t\n\t        /**\r\n\t         * Main draw function of Donut Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t\n\t            var self = this;\n\t\n\t            var title = new _C6.default(self.options, self.body, self.width, self.height, self.margin);\n\t            var legend = new _C8.default(self.options, self.body, self.dataTarget);\n\t\n\t            // Draw legend\n\t            legend.draw();\n\t            legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\n\t\n\t            // Update interaction of this own chart\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Select all path as type PATH in Donut Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllPath',\n\t        value: function selectAllPath() {\n\t            var self = this;\n\t\n\t            return self.body\n\t            // .selectAll('g')\n\t            .selectAll('path.c9-chart-pie.c9-custom-path');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         * @return {} \r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                hoverEnable = self.hover.enable,\n\t                hoverOptions = self.hover.options,\n\t                selector = self.selectAllPath(),\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback;\n\t\n\t            if (hoverEnable) {\n\t                selector.on(self.eventFactory);\n\t            }\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'radius',\n\t        get: function get() {\n\t            return this._radius;\n\t        }\n\t\n\t        // get innerRadius() {\n\t        //     return this._innerRadius;\n\t        // }\n\t\n\t        ,\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(newradius) {\n\t            if (newradius) {\n\t                this._radius = newradius;\n\t            }\n\t        }\n\t\n\t        // set innerRadius(newInnerRadius) {\n\t        //     if (newInnerRadius) {\n\t        //         this._innerRadius = newInnerRadius;\n\t        //     }\n\t        // }\n\t\n\t    }, {\n\t        key: 'showText',\n\t        get: function get() {\n\t            return this._showText;\n\t        },\n\t        set: function set(newShowText) {\n\t            if (newShowText) {\n\t                this._showText = newShowText;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'eventFactory',\n\t        get: function get() {\n\t            return this._eventFactory;\n\t        },\n\t        set: function set(newEventFactory) {\n\t            if (newEventFactory) {\n\t                this._eventFactory = newEventFactory;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pathAnim',\n\t        get: function get() {\n\t            return this._pathAnim;\n\t        },\n\t        set: function set(newPathAnim) {\n\t            if (newPathAnim) {\n\t                this._pathAnim = newPathAnim;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'tooltip',\n\t        get: function get() {\n\t            return this._tooltip;\n\t        },\n\t        set: function set(newTooltip) {\n\t            if (newTooltip) {\n\t                this._tooltip = newTooltip;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'pie',\n\t        get: function get() {\n\t            return this._pie;\n\t        },\n\t        set: function set(newPie) {\n\t            if (newPie) {\n\t                this._pie = newPie;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'arc',\n\t        get: function get() {\n\t            return this._arc;\n\t        },\n\t        set: function set(newArc) {\n\t            if (newArc) {\n\t                this._arc = newArc;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'currentData',\n\t        get: function get() {\n\t            return this._currentData;\n\t        },\n\t        set: function set(newCurrentData) {\n\t            if (newCurrentData) {\n\t                this._currentData = newCurrentData;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'chartType',\n\t        get: function get() {\n\t            return this._body.type;\n\t        }\n\t    }]);\n\t\n\t    return PieChart;\n\t}(_C2.default);\n\t\n\texports.default = PieChart;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(2);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(4);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(3);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(6);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(5);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar TimeLine = function (_Chart) {\n\t    _inherits(TimeLine, _Chart);\n\t\n\t    function TimeLine(options) {\n\t        _classCallCheck(this, TimeLine);\n\t\n\t        var _this = _possibleConstructorReturn(this, (TimeLine.__proto__ || Object.getPrototypeOf(TimeLine)).call(this, options));\n\t\n\t        var self = _this;\n\t\n\t        var config = {\n\t            rowSeparator: \"rgb(154, 154, 154)\",\n\t            backgroundColor: null,\n\t            starting: 0,\n\t            ending: 0,\n\t            stack: false, //test\n\t            // rotateTicks: false,\n\t            itemHeight: 25,\n\t            itemMargin: 20,\n\t            labelMargin: 20,\n\t            striped: null\n\t        };\n\t\n\t        self.body.type = \"timeline\";\n\t        self._stack = options.stack || config.stack;\n\t        self._starting = options.starting || config.starting;\n\t        self._ending = options.ending || config.ending;\n\t        self._rowSeparator = options.rowSeparator || config.rowSeparator;\n\t        self._backgroundColor = options.backgroundColor || config.backgroundColor;\n\t        self._itemHeight = options.itemHeight || config.itemHeight;\n\t        self._itemMargin = options.itemMargin || config.itemMargin;\n\t        self._labelMargin = options.labelMargin || config.labelMargin;\n\t        self._maxStack = 1;\n\t        self._striped = options.striped || config.striped;\n\t\n\t        var dataOption = self.dataOption;\n\t        dataOption.colorRange = self.colorRange;\n\t\n\t        var da = new _C12.default(dataOption);\n\t        self.dataTarget = da.getDataTarget(\"timeline\");\n\t\n\t        self.initTimelineConfig();\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(TimeLine, [{\n\t        key: 'initTimelineConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        value: function initTimelineConfig() {\n\t            var self = this;\n\t            var color = self.colorRange;\n\t            var stackList = {},\n\t                maxStack = 0,\n\t                minTime = 0,\n\t                maxTime = 0,\n\t                width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t            // count number of stack and calculate min time, max time from data\n\t            if (self.stack || self.ending === 0 || self.starting === 0) {\n\t\n\t                self.dataTarget.forEach(function (datum, index) {\n\t\n\t                    if (self.stack && Object.keys(stackList).indexOf(index) == -1) {\n\t                        stackList[index] = maxStack;\n\t                        maxStack++;\n\t                    }\n\t\n\t                    datum.value.forEach(function (time, i) {\n\t                        if (self.starting === 0) if (time.start < minTime || minTime === 0) minTime = time.start;\n\t                        if (self.ending === 0) {\n\t                            if (time.start > maxTime) maxTime = time.start;\n\t                            if (time.end > maxTime) maxTime = time.end;\n\t                        }\n\t                    });\n\t                });\n\t\n\t                if (self.ending === 0) {\n\t                    self.ending = maxTime;\n\t                }\n\t                if (self.starting === 0) {\n\t                    self.starting = minTime;\n\t                }\n\t            }\n\t\n\t            self.maxStack = maxStack;\n\t            var scale = width / (self.ending - self.starting);\n\t\n\t            //draw border\n\t            self.body.append(\"rect\").attr(\"class\", \"timeline-border-bar\").attr(\"x\", 0).attr(\"width\", width).attr(\"y\", 0 - self.itemMargin / 2).attr(\"height\", (self.itemHeight + self.itemMargin) * self.dataTarget.length).attr(\"stroke\", \"rgb(154, 154, 154)\").attr(\"stroke-width\", 2).attr(\"fill\", \"none\");\n\t\n\t            self.dataTarget.forEach(function (datum, index) {\n\t                var data = datum.value;\n\t\n\t                //draw background\n\t                if (self.backgroundColor) {\n\t                    var barYAxis = (self.itemHeight + self.itemMargin) * stackList[index];\n\t                    self.body.selectAll(\"g\").data(data).enter().insert(\"rect\").attr(\"class\", \"timeline-background-bar\").attr(\"x\", 0).attr(\"width\", width).attr(\"y\", barYAxis - self.itemMargin / 2).attr(\"height\", self.itemHeight + self.itemMargin).attr(\"fill\", _C10.default.isArray(self.backgroundColor) ? self.backgroundColor[index % (self.maxStack - 1)] : self.backgroundColor);\n\t                }\n\t\n\t                if (self.striped) {\n\t                    var barYAxis = (self.itemHeight + self.itemMargin) * stackList[index];\n\t                    self.body.selectAll(\"g\").data(data).enter().insert(\"rect\").attr(\"class\", \"timeline-background-bar\").attr(\"x\", 0).attr(\"width\", width).attr(\"y\", barYAxis - self.itemMargin / 2).attr(\"height\", self.itemHeight + self.itemMargin).attr(\"fill\", index % 2 ? \"rgb(255, 255, 255)\" : \"rgb(230, 230, 230)\");\n\t                }\n\t\n\t                //draw item\n\t                self.body.selectAll(\"g\").data(data).enter().append(function (d, i) {\n\t                    return document.createElementNS(d3.ns.prefix.svg, d.end ? \"rect\" : \"circle\");\n\t                }).attr(\"x\", getXPos).attr(\"y\", getStackPosition).attr(\"width\", function (d, i) {\n\t                    return (d.end - d.start) * scale;\n\t                }).attr(\"cy\", function (d, i) {\n\t                    return getStackPosition(d, i) + self.itemHeight / 2;\n\t                }).attr(\"cx\", getXPos).attr(\"r\", self.itemHeight / 2).attr(\"height\", self.itemHeight).style(\"fill\", color(index));\n\t\n\t                //draw label inside item\n\t                // self.body.selectAll(\"g\")\n\t                //     .data(data).enter()\n\t                //     .append(\"text\")\n\t                //     .attr(\"x\", getXTextPos)\n\t                //     .attr(\"y\", getStackTextPosition)\n\t                //     .text(function(d) {\n\t                //       return d.name;\n\t                //     });\n\t\n\t                if (self.rowSeparator && index < self.maxStack - 1) {\n\t                    var lineYAxis = self.itemHeight + self.itemMargin / 2 + (self.itemHeight + self.itemMargin) * stackList[index];\n\t                    self.body.append(\"svg:line\").attr(\"class\", \"timeline-row-separator\").attr(\"x1\", 0).attr(\"x2\", width).attr(\"y1\", lineYAxis).attr(\"y2\", lineYAxis).attr(\"stroke-width\", 3).attr(\"stroke\", _C10.default.isArray(self.rowSeparator) ? self.rowSeparator[index % (self.maxStack - 1)] : self.rowSeparator);\n\t                }\n\t\n\t                //draw the label left side item\n\t                if (!_C10.default.isEmpty(datum.name) && datum.name != \"\") {\n\t                    var rowsDown = self.margin.top + (self.itemHeight + self.itemMargin) * (stackList[index] === undefined ? 0 : stackList[index]) + self.itemHeight * 0.75;\n\t\n\t                    d3.select(self.body[0][0].parentNode).append(\"text\").attr(\"class\", \"timeline-label\").attr(\"transform\", \"translate(\" + self.labelMargin + \",\" + rowsDown + \")\").text(datum.name);\n\t                }\n\t                //draw icon\n\t                else if (!_C10.default.isEmpty(datum.icon) && datum.icon != \"\") {\n\t                        d3.select(self.body[0][0].parentNode).append(\"image\").attr(\"class\", \"timeline-label\").attr(\"transform\", \"translate(\" + self.labelMargin + \",\" + (self.margin.top + (self.itemHeight + self.itemMargin) * stackList[index]) + \")\").attr(\"xlink:href\", datum.icon).attr(\"width\", self.itemHeight).attr(\"height\", self.itemHeight);\n\t                    }\n\t\n\t                function getStackPosition(d, i) {\n\t                    if (self.stack) {\n\t                        return (self.itemHeight + self.itemMargin) * stackList[index];\n\t                    }\n\t                    return 0;\n\t                }\n\t                function getStackTextPosition(d, i) {\n\t                    if (self.stack) {\n\t                        return (self.itemHeight + self.itemMargin) * stackList[index] + self.itemHeight * 0.75;\n\t                    }\n\t                    return self.itemHeight * 0.75;\n\t                }\n\t            });\n\t\n\t            function getXPos(d, i) {\n\t                return (d.start - self.starting) * scale;\n\t            }\n\t\n\t            function getXTextPos(d, i) {\n\t                return (d.start - self.starting) * scale + 5;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            this.options.starting = this.starting;\n\t            this.options.ending = this.ending;\n\t            // var axis    = new Axis(this.options, this.body, this.dataTarget, this.width - this.margin.left - this.margin.right, (this.itemHeight + this.itemMargin) * this.maxStack, null, null);\n\t            var title = new _C6.default(this.options, this.body, this.width, this.height, this.margin);\n\t            var legend = new _C8.default(this.options, this.body, this.colorRange, this.dataTarget);\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'stack',\n\t        get: function get() {\n\t            return this._stack;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(newStack) {\n\t            if (newStack) {\n\t                this._stacked = newStack;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'backgroundColor',\n\t        get: function get() {\n\t            return this._backgroundColor;\n\t        },\n\t        set: function set(newBackgroundColor) {\n\t            if (newBackgroundColor) {\n\t                this._backgroundColor = newBackgroundColor;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'rowSeparator',\n\t        get: function get() {\n\t            return this._rowSeparator;\n\t        },\n\t        set: function set(newRowSeparator) {\n\t            if (newRowSeparator) {\n\t                this._rowSeparator = newRowSeparator;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'starting',\n\t        get: function get() {\n\t            return this._starting;\n\t        },\n\t        set: function set(newStarting) {\n\t            if (newStarting) {\n\t                this._starting = newStarting;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'ending',\n\t        get: function get() {\n\t            return this._ending;\n\t        },\n\t        set: function set(newEnding) {\n\t            if (newEnding) {\n\t                this._ending = newEnding;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'itemHeight',\n\t        get: function get() {\n\t            return this._itemHeight;\n\t        },\n\t        set: function set(newItemHeight) {\n\t            if (newItemHeight) {\n\t                this._itemHeight = newItemHeight;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'itemMargin',\n\t        get: function get() {\n\t            return this._itemMargin;\n\t        },\n\t        set: function set(newItemMargin) {\n\t            if (newItemMargin) {\n\t                this._itemMargin = newItemMargin;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'labelMargin',\n\t        get: function get() {\n\t            return this._labelMargin;\n\t        },\n\t        set: function set(newLabelMargin) {\n\t            if (newLabelMargin) {\n\t                this._labelMargin = newLabelMargin;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'maxStack',\n\t        get: function get() {\n\t            return this._maxStack;\n\t        },\n\t        set: function set(newMaxStack) {\n\t            if (newMaxStack) {\n\t                this._maxStack = newMaxStack;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'striped',\n\t        get: function get() {\n\t            return this._striped;\n\t        },\n\t        set: function set(newStriped) {\n\t            if (newStriped) {\n\t                this._striped = newStriped;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return TimeLine;\n\t}(_C2.default);\n\t\n\texports.default = TimeLine;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Tooltip = function () {\n\t    function Tooltip(options, body, data) {\n\t        _classCallCheck(this, Tooltip);\n\t\n\t        var config = {\n\t            show: true,\n\t            position: top,\n\t            offset: [-10, 0],\n\t            class: 'd3-tip'\n\t        };\n\t\n\t        this._show = options.show || config.show;\n\t        this._position = options.position || config.position;\n\t        this._offset = options.offset || config.offset;\n\t        this._class = options.class || config.class;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Tooltip, [{\n\t        key: 'show',\n\t        get: function get() {\n\t            return this._show;\n\t        }\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        ,\n\t        set: function set(newShow) {\n\t            if (newShow) {\n\t                this._show = newShow;\n\t            }\n\t        }\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }]);\n\t\n\t    return Tooltip;\n\t}();\n\t\n\texports.default = Tooltip;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Map = function () {\n\t    function Map(options) {\n\t        _classCallCheck(this, Map);\n\t\n\t        var self = this;\n\t        var config = {\n\t            // container\n\t            id: \"body\",\n\t\n\t            // Layers:\n\t            // BingMaps, OSM, Raster, Tile, TileImage, Vector, VectorTile,...\n\t            // REF: http://openlayers.org/en/latest/apidoc/ol.source.html?stableonly=true\n\t            layers: {\n\t                type: \"Tile\",\n\t                source: {\n\t                    name: \"OSM\"\n\t                }\n\t            },\n\t            view: {\n\t                lat: 0,\n\t                lon: 0,\n\t                zoom: 2\n\t            }\n\t        };\n\t\n\t        self._id = options.id || config.id;\n\t        self._data = options.data || config.data;\n\t        self._view = options.view || config.view;\n\t        self._markers = options.markers || [];\n\t        self._options = options;\n\t        self._layers = options.layers || config.layers;\n\t        self.initMapConfig();\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t    _createClass(Map, [{\n\t        key: \"initMapConfig\",\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        value: function initMapConfig() {\n\t            var self = this;\n\t\n\t            //c9Layers contain all layers\n\t            self.c9Layers = [];\n\t            //c9Markers contain all markers\n\t            self.c9Markers = new ol.source.Vector({});\n\t\n\t            //init all thing relating to user's data\n\t\n\t            //layer\n\t            self.initLayer();\n\t\n\t            //quick markers\n\t            self.initMarker();\n\t        }\n\t    }, {\n\t        key: \"draw\",\n\t        value: function draw() {\n\t            var self = this;\n\t            self.c9View = new ol.View({\n\t                center: ol.proj.fromLonLat([self.view.lon, self.view.lat]),\n\t                zoom: self.view.zoom > 2 ? self.view.zoom : 2,\n\t                minZoom: 2\n\t            });\n\t            self.c9Map = new ol.Map({\n\t                target: self.id,\n\t                layers: self.c9Layers,\n\t                view: self.c9View,\n\t                interactions: ol.interaction.defaults({ doubleClickZoom: false })\n\t            });\n\t\n\t            //TODO - Create a function to gather all these event function\n\t            self.updateInteraction();\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /**\r\n\t         * Create layer\r\n\t         * @param  {String} type of layer\r\n\t         * @param  {source} source data defined by C9\r\n\t         */\n\t\n\t    }, {\n\t        key: \"createLayer\",\n\t        value: function createLayer(type) {\n\t            var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\t\n\t            var self = this;\n\t            var layer = new ol.layer[type]();\n\t            layer.setSource(self.setupSource(source));\n\t            self.c9Layers.push(layer);\n\t        }\n\t\n\t        /**\r\n\t         * Init Layer base on first user's data\r\n\t         */\n\t\n\t    }, {\n\t        key: \"initLayer\",\n\t        value: function initLayer() {\n\t            var self = this;\n\t            var layers = self.layers;\n\t\n\t            if (layers instanceof Array) {\n\t                layers.forEach(function (l, i) {\n\t                    self.createLayer(l.type, l.source);\n\t                });\n\t            } else {\n\t                self.createLayer(layers.type, layers.source);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Create marker style\r\n\t         * @param  {String} image source\r\n\t         * @param  {Number} scale\r\n\t         * @return {ol.style.Style} return marker style\r\n\t         */\n\t\n\t    }, {\n\t        key: \"createMarkerStyle\",\n\t        value: function createMarkerStyle(imgSrc, scale) {\n\t            return new ol.style.Style({\n\t                image: new ol.style.Icon({\n\t                    anchor: [0.5, 1], //middle-width and bottom-height of image\n\t                    src: imgSrc,\n\t                    scale: scale\n\t                })\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Create marker\r\n\t         * @param  {Number} latitude of marker\r\n\t         * @param  {Number} longitude of marker\r\n\t         * @param  {String} image source (support for both local and net)\r\n\t         * @param  {Number} scale image if its size is too large - default = 1\r\n\t         */\n\t\n\t    }, {\n\t        key: \"createMarker\",\n\t        value: function createMarker(lat, lon) {\n\t            var imgSrc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'http://s21.postimg.org/blklb8scn/marker_icon.png';\n\t            var scale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\t\n\t            var self = this;\n\t\n\t            var marker = new ol.Feature({\n\t                type: 'c9GeoMarker',\n\t                geometry: new ol.geom.Point(ol.proj.fromLonLat([lon, lat]))\n\t            });\n\t            marker.setStyle(self.createMarkerStyle(imgSrc, scale));\n\t\n\t            //add this marker to marker list (c9Markers)\n\t            self.c9Markers.addFeature(marker);\n\t        }\n\t\n\t        /**\r\n\t         * marker first set up\r\n\t         */\n\t\n\t    }, {\n\t        key: \"initMarker\",\n\t        value: function initMarker() {\n\t            var self = this;\n\t            //data\n\t            var markers = self.markers;\n\t            //add marker layer to layer list (c9Layers)\n\t            self.c9Layers.push(new ol.layer.Vector({\n\t                source: self.c9Markers\n\t            }));\n\t\n\t            if (markers.length === 0) return;\n\t\n\t            if (markers instanceof Array) {\n\t                markers.forEach(function (m, i) {\n\t                    self.createMarker(m.lat, m.lon, m.img, m.scale);\n\t                });\n\t            } else {\n\t                self.createMarker(markers.lat, markers.lon, markers.img, markers.scale);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Setup source for layer\r\n\t         * @param  {Object} source data style defined by c9\r\n\t         * @return {String} return source (ol.source)\r\n\t         */\n\t\n\t    }, {\n\t        key: \"setupSource\",\n\t        value: function setupSource(s) {\n\t            var source = undefined;\n\t            switch (s.name) {\n\t                case 'BingMaps':\n\t                    source = new ol.source.BingMaps({\n\t                        key: s.key,\n\t                        imagerySet: s.imagerySet || 'Road'\n\t                    });\n\t                    break;\n\t                case 'Stamen':\n\t                    source = new ol.source.Stamen({\n\t                        layer: s.layer || 'watercolor'\n\t                    });\n\t                    break;\n\t                /********** TileJSON require ol >= v3.8.2 **********/\n\t                case 'TileJSON':\n\t                    source = new ol.source.TileJSON({\n\t                        url: s.url,\n\t                        crossOrigin: s.crossOrigin || 'anonymous'\n\t                    });\n\t                    break;\n\t                case 'TileArcGISRest':\n\t                    source = new ol.source.TileArcGISRest({\n\t                        url: s.url\n\t                    });\n\t                    break;\n\t                case 'Vector':\n\t                    source = new ol.source.Vector({\n\t                        url: s.url,\n\t                        format: s.format === undefined ? null : new ol.format[s.format]({\n\t                            extractStyles: s.extractStyles || false\n\t                        })\n\t                    });\n\t                    break;\n\t                case 'Cluster':\n\t                    source = new ol.source.Cluster({\n\t                        distance: s.distance || 20,\n\t                        source: this.setupSource(s.source)\n\t                    });\n\t                    break;\n\t                case 'ImageVector':\n\t                    source = new ol.source.ImageVector({\n\t                        source: this.setupSource(s.source)\n\t                    });\n\t                    break;\n\t                default:\n\t                    source = new ol.source.OSM();\n\t                    break;\n\t\n\t            }\n\t            return source;\n\t        }\n\t\n\t        /**\r\n\t         * Create marker's flash effect\r\n\t         * @param  {ol.Feature}\r\n\t         */\n\t\n\t    }, {\n\t        key: \"createMarkerEffect\",\n\t        value: function createMarkerEffect(feature) {\n\t            var self = this;\n\t            var duration = 3000;\n\t            var start = new Date().getTime();\n\t            var listenerKey;\n\t\n\t            function animate(event) {\n\t                var vectorContext = event.vectorContext;\n\t                var frameState = event.frameState;\n\t                var flashGeom = feature.getGeometry().clone();\n\t                var elapsed = frameState.time - start;\n\t                var elapsedRatio = elapsed / duration;\n\t                // radius will be 5 at start and 30 at end.\n\t                var radius = ol.easing.easeOut(elapsedRatio) * 25 + 5;\n\t                var opacity = ol.easing.easeOut(1 - elapsedRatio);\n\t\n\t                var style = new ol.style.Style({\n\t                    image: new ol.style.Circle({\n\t                        radius: radius,\n\t                        snapToPixel: false,\n\t                        stroke: new ol.style.Stroke({\n\t                            color: 'rgba(255, 0, 0, ' + opacity + ')',\n\t                            width: 0.25 + opacity\n\t                        })\n\t                    })\n\t                });\n\t\n\t                vectorContext.setStyle(style);\n\t                vectorContext.drawGeometry(flashGeom);\n\t                if (elapsed > duration) {\n\t                    ol.Observable.unByKey(listenerKey);\n\t                    return;\n\t                }\n\t                // tell OL3 to continue postcompose animation\n\t                self.c9Map.render();\n\t            }\n\t            listenerKey = self.c9Map.on('postcompose', animate);\n\t        }\n\t    }, {\n\t        key: \"updateInteraction\",\n\t        value: function updateInteraction() {\n\t            var self = this;\n\t            var LEFT_KEY = 37,\n\t                RIGHT_KEY = 39,\n\t                DURATION = 1000,\n\t                LOAD_MAP_DELAY = 500;\n\t\n\t            var getCoordinatesLonLat = function getCoordinatesLonLat(f) {\n\t                return ol.proj.transform(f.getGeometry().getCoordinates(), 'EPSG:3857', 'EPSG:4326');\n\t            };\n\t            var getCoordinates = function getCoordinates(f) {\n\t                return f.getGeometry().getCoordinates();\n\t            };\n\t            var transformCoordinates = function transformCoordinates(c) {\n\t                return ol.proj.transform(c, 'EPSG:3857', 'EPSG:4326');\n\t            };\n\t            var panAnimation = function panAnimation(f) {\n\t                var pan = ol.animation.pan({\n\t                    duration: DURATION,\n\t                    source: self.c9View.getCenter()\n\t                });\n\t                self.c9Map.beforeRender(pan);\n\t                self.c9View.setCenter(getCoordinates(f));\n\t            };\n\t            /**\r\n\t             * Caculate distance between marker and center view, plus direction compare with center\r\n\t             * @param  {ol.Feature}\r\n\t             * @return {[Number, Boolean]} Array of distance value and direction value (left if true, right if false)\r\n\t             */\n\t            var distanceAndDirection = function distanceAndDirection(f) {\n\t                var center = transformCoordinates(self.c9View.getCenter());\n\t                var fCoordinates = getCoordinatesLonLat(f);\n\t                return [Math.sqrt(Math.pow(fCoordinates[0] - center[0], 2) + Math.pow(fCoordinates[1] - center[1], 2)), fCoordinates[0] - center[0] <= 0];\n\t            };\n\t            //register pointer move event to show cursor as pointer if user hover on markers\n\t            self.c9Map.on('pointermove', function (evt) {\n\t                self.c9Map.getTargetElement().style.cursor = self.c9Map.hasFeatureAtPixel(evt.pixel) ? 'pointer' : '';\n\t            });\n\t\n\t            //register map first render's event to show marker's effect\n\t            self.c9Map.once('postrender', function (evt) {\n\t                setTimeout(function () {\n\t                    self.c9Markers.getFeatures().forEach(function (f, i) {\n\t                        self.createMarkerEffect(f);\n\t                    });\n\t                }, LOAD_MAP_DELAY);\n\t            });\n\t\n\t            //register click event to show effect on markers\n\t            self.c9Map.on('click', function (evt) {\n\t                var f = self.c9Map.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {\n\t                    return feature;\n\t                });\n\t                if (f && f.get('type') == 'c9GeoMarker') {\n\t                    // self.createMarkerEffect(f);\n\t                    //test\n\t                    panAnimation(f);\n\t                }\n\t            });\n\t\n\t            //register keydown event to change center view\n\t            $(document).keydown(function (e) {\n\t                var keydownAnimate = function keydownAnimate(k) {\n\t                    var selectedFeature = undefined;\n\t                    var minDistance = Infinity;\n\t                    self.c9Markers.getFeatures().forEach(function (f, i) {\n\t                        var checkAnimate = distanceAndDirection(f);\n\t\n\t                        if ((checkAnimate[1] && k == LEFT_KEY || !checkAnimate[1] && k == RIGHT_KEY) && checkAnimate[0] < minDistance && checkAnimate[0] != 0) {\n\t                            minDistance = checkAnimate[0];\n\t                            selectedFeature = f;\n\t                        }\n\t                    });\n\t                    if (selectedFeature) {\n\t                        setTimeout(self.createMarkerEffect(selectedFeature), LOAD_MAP_DELAY);\n\t                        panAnimation(selectedFeature);\n\t                    }\n\t                };\n\t                switch (e.keyCode) {\n\t                    case LEFT_KEY:\n\t                        keydownAnimate(LEFT_KEY);\n\t                        break;\n\t                    case RIGHT_KEY:\n\t                        keydownAnimate(RIGHT_KEY);\n\t                        break;\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: \"id\",\n\t        get: function get() {\n\t            return this._id;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t\n\t        set: function set(newId) {\n\t            if (newId) {\n\t                this._id = newId;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"height\",\n\t        get: function get() {\n\t            return this._height;\n\t        },\n\t        set: function set(newHeight) {\n\t            if (newHeight) {\n\t                this._height = newHeight;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"width\",\n\t        get: function get() {\n\t            return this._width;\n\t        },\n\t        set: function set(newWidth) {\n\t            if (newWidth) {\n\t                this._width = newWidth;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"view\",\n\t        get: function get() {\n\t            return this._view;\n\t        },\n\t        set: function set(newView) {\n\t            if (newView) {\n\t                this._view = newView;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"markers\",\n\t        get: function get() {\n\t            return this._markers;\n\t        },\n\t        set: function set(newMarkers) {\n\t            if (newMarkers) {\n\t                this._markers = newMarkers;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"layers\",\n\t        get: function get() {\n\t            return this._layers;\n\t        },\n\t        set: function set(newLayers) {\n\t            if (newLayers) {\n\t                this._layers = newLayers;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"data\",\n\t        get: function get() {\n\t            return this._data;\n\t        },\n\t        set: function set(newData) {\n\t            if (newData) {\n\t                this._data = newData;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Map;\n\t}();\n\t\n\texports.default = Map;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** C9.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 091a70226f9c9b72d6c8\n **/","// Chart Importer\r\nimport BarChart from './charts/C9.BarChart';\r\nimport DonutChart from './charts/C9.DonutChart';\r\nimport LineChart from './charts/C9.LineChart';\r\nimport PieChart from './charts/C9.PieChart';\r\nimport TimeLine from './charts/C9.TimeLine';\r\n\r\n// Map Importer\r\nimport Map from './map/C9.Map';\r\n\r\n// Helper Importer\r\nimport Helper from './helper/C9.Helper';\r\nimport DataAdapter from './helper/C9.DataAdapter';\r\n\r\nmodule.exports = {\r\n\tBarChart,\r\n\tDonutChart,\r\n\tLineChart,\r\n\tPieChart,\r\n\tTimeLine,\r\n\r\n\tMap,\r\n\t\r\n\tDataAdapter,\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import Helper from '../helper/C9.Helper';\r\n\r\nexport default class Chart {\r\n    constructor(options) {\r\n        var self    = this;\r\n        var config  = {\r\n            // container\r\n            id: \"body\",\r\n            // size (width, height), margin, padding\r\n            width: 960,\r\n            height: 480,\r\n            margin: {\r\n                top: 20,\r\n                right: 20,\r\n                bottom: 70,\r\n                left: 40,\r\n            },\r\n            // interaction in chart\r\n            hover: {\r\n                enable: true,\r\n                options: {\r\n                    template: '',\r\n                    onMouseOver: {\r\n                        fadeIn: 200,\r\n                        // callback: function(data) {\r\n                        //     console.dir(data);\r\n                        // },\r\n                    },\r\n                    onMouseOut: {\r\n                        fadeOut: 500,\r\n                        // callback: function(data) {\r\n                        //     console.dir(data);\r\n                        // },\r\n                    }\r\n                }\r\n            },\r\n\r\n            // legend\r\n            legendShow: true,\r\n            legendPosition: \"bottom\",\r\n            legendInsetAnchor: \"top-left\",\r\n            legendPadding: 0,\r\n            // tooltip - show when mouseover on each data\r\n            tooltipShow: true,\r\n            tooltipPosition: undefined,\r\n            // color range\r\n            colorRange: \"category20\",\r\n            // data\r\n            data: {\r\n                // ALL OPTIONS AVAILABLE IN DATA CONFIG\r\n                plain: [],\r\n                file: {\r\n                    type: null,\r\n                    url: null,\r\n                },\r\n                keys: {\r\n                    name: \"name\",\r\n                    value: \"value\"\r\n                },\r\n                groups: [],\r\n                stacks: [],\r\n            }\r\n        };\r\n\r\n        self._id        = options.id        || config.id;\r\n        self._width     = options.width     || config.width;\r\n        self._height    = options.height    || config.height;\r\n        self._colorRange= options.colorRange|| config.colorRange;\r\n        self._hover     = options.hover     || config.hover;\r\n        \r\n        self._dataOption= Helper.merge(options.data, config.data);\r\n        self._dataTarget= null;\r\n        self._margin    = Helper.merge(options.margin, config.margin);\r\n\r\n        // Skeleton: \r\n        // SVG\r\n        // ---BODY (g)\r\n        // -------BlaBla\r\n        self._svg       = null;\r\n        self._body      = null;\r\n        self._options   = options;\r\n\r\n        self.initConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    \r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * If colorRange is Array of color then scale range according to it\r\n     * If colorRange is a String like \"category20\", \"category20b\", etc. then scale using d3.scale.category\r\n     */\r\n    get colorRange() {\r\n        if (typeof this._colorRange == 'string') {\r\n            return d3.scale[this._colorRange]();\r\n        } else if (typeof this._colorRange == 'object') {\r\n            return d3.scale.ordinal().range(this._colorRange);\r\n        }\r\n    }\r\n\r\n    get margin() {\r\n        return this._margin;\r\n    }\r\n\r\n    get dataOption() {\r\n        return this._dataOption;\r\n    }\r\n\r\n    get svg() {\r\n        return this._svg;\r\n    }\r\n\r\n    get body() {\r\n        return this._body;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    get hover() {\r\n        return this._hover;\r\n    }\r\n\r\n    get dataTarget() {\r\n        return this._dataTarget;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n    \r\n    \r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set container(newContainer) {\r\n        if (newContainer) {\r\n            this._container = newContainer;\r\n        }\r\n    }\r\n    \r\n    set id(newId) {\r\n        if (newId) {\r\n            this._id = newId;\r\n        }\r\n    }\r\n\r\n    set width(newWidth) {\r\n        if (newWidth) {\r\n            this._width = newWidth;\r\n        }\r\n    }\r\n\r\n    set height(newHeight) {\r\n        if (newHeight) {\r\n            this._height = newHeight;\r\n        }\r\n    }\r\n\r\n    set colorRange(newColorRange) {\r\n        if (newColorRange) {\r\n            this._colorRange = newColorRange;\r\n        }\r\n    }\r\n\r\n    set margin(newMargin) {\r\n        if (newMargin) {\r\n            this._margin = newMargin;\r\n        }\r\n    }\r\n\r\n    set dataOption(arg) {\r\n        if (arg) {\r\n            this._dataOption = arg;\r\n        }\r\n    }\r\n\r\n    set svg(newSvg) {\r\n        if (newSvg) {\r\n            this._svg = newSvg;\r\n        }\r\n    }\r\n\r\n    set body(newBody) {\r\n        if (newBody) {\r\n            this._body = newBody;\r\n        }\r\n    }\r\n\r\n    set options(newOptions) {\r\n        if (newOptions) {\r\n            this._options = newOptions;\r\n        }\r\n    }\r\n\r\n    set hover(newHover) {\r\n        if (newHover) {\r\n            this._hover = newHover;\r\n        }\r\n    }\r\n\r\n    set dataTarget(arg) {\r\n        if (arg) {\r\n            this._dataTarget = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Init & Update Parent Chart Config\r\n     */\r\n    initConfig() {\r\n        var margin  = this.margin,\r\n            id      = this.id,\r\n            width   = this.width - margin.left - margin.right,\r\n            height  = this.height - margin.top - margin.bottom;\r\n\r\n        this.container = d3.select(id);\r\n\r\n        this.svg = d3.select(id)\r\n            .append(\"svg\")\r\n            .style('overflow', 'visible') // to overwrite overflow: hidden by Boostrap as default\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom);\r\n\r\n        this.body = this.svg\r\n                    .append(\"g\")\r\n                    .attr('class', 'c9-chart c9-custom-container')\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n                  \r\n    }\r\n\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.Chart.js\n **/","'use strict';\r\n\r\nexport default class Axis {\r\n    constructor(options, body, data, width, height, xAxe, yAxe) {\r\n        var config = {\r\n            xAxisShow     : true,\r\n            xAxisPadding  : {},   // TODO\r\n            xAxisText     : 'Name',\r\n            yAxisShow     : true,\r\n            yAxisPadding  : {},   // TODO\r\n            yAxisText     : 'Value',\r\n            numOfTickY   : 5,\r\n            tickFormat     : \"s\",   // refer: https://github.com/d3/d3-format\r\n            isLogaric: false, // TODO: Add isPower, isNormal(default), isLogaric\r\n            y2AxisShow    : true,\r\n            y2AxisPadding : {},   // TODO\r\n            y2AxisText    : 'Value',\r\n            gridXShow: false,\r\n            gridYShow: false\r\n        };\r\n\r\n        this._xAxisShow     = options.xAxisShow      || config.xAxisShow;\r\n        this._xAxisPadding  = options.xAxisPadding   || config.xAxisPadding;\r\n        this._xAxisText     = options.xAxisText      || config.xAxisText;\r\n        this._yAxisShow     = options.yAxisShow      || (body.type == \"timeline\" ? false : config.yAxisShow);\r\n        this._yAxisPadding  = options.yAxisPadding   || config.yAxisPadding;\r\n        this._yAxisText     = options.yAxisText      || config.yAxisText;\r\n        this._isLogaricVariant     = options.isLogaric      || config.isLogaric;\r\n        this._tickFormat    = options.tickFormat      || config.tickFormat;\r\n        this._numOfTickY    = options.numOfTickY    || config.numOfTickY;\r\n        this._y2AxisShow    = options.y2AxisShow     || config.y2AxisShow;\r\n        this._y2AxisPadding = options.y2AxisPadding  || config.y2AxisPadding;\r\n        this._y2AxisText    = options.y2AxisText     || config.y2AxisText;\r\n        this._gridXShow     = options.gridXShow      || config.gridXShow;\r\n        this._gridYShow     = options.gridYShow      || config.gridYShow;\r\n\r\n\r\n        var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\r\n        var y;\r\n\r\n        if (this._isLogaricVariant) {\r\n            y = d3.scale.log().range([height, 0]);\r\n        } else {\r\n            y = d3.scale.linear().range([height, 0]);\r\n        }\r\n        \r\n        x.domain(data.map(function(d) {\r\n            return d.name || d.stack[0].name;\r\n        }));\r\n\r\n        if (body.type == \"bar\") {\r\n            y.domain([\r\n                d3.min(data, function(d) {\r\n                    return d.max;\r\n                }), \r\n                d3.max(data, function(d) {\r\n                    return d.max;\r\n                })\r\n            ]);\r\n        }\r\n        else\r\n            y.domain([\r\n                d3.min(data, function(d) {\r\n                    return d.value;\r\n                }), \r\n                d3.max(data, function(d) {\r\n                    return d.value;\r\n                })\r\n            ]);\r\n\r\n        if (body.type == \"timeline\") {\r\n\r\n            var xScale = d3.time.scale()\r\n                .domain([options.starting, options.ending])\r\n                .range([0, width]);\r\n            this._xAxis = d3.svg.axis()\r\n                .scale(xScale)\r\n                .orient(\"bottom\")\r\n                .tickFormat(options.tickFormat === undefined ? d3.time.format(\"%I %p\") : options.tickFormat.format)\r\n                .tickSize(options.tickFormat === undefined ? 6 : options.tickFormat.tickSize)\r\n                .ticks(options.tickFormat === undefined ? d3.time.hours : options.tickFormat.tickTime, options.tickFormat === undefined ? 1 : options.tickFormat.tickInterval);\r\n            delete options.starting;\r\n            delete options.ending;\r\n\r\n        } else if (body.type == \"line\") {\r\n\r\n            this._xAxis = xAxe;\r\n            this._yAxis = yAxe;\r\n\r\n        } else {\r\n            // Currently, support logaric axis only for y-axis on bar-chart\r\n            // TODO: add for line-chart too\r\n            var _tickFormat = d3.format(this._tickFormat);\r\n            var _numOfTickY = this._numOfTickY;\r\n\r\n            this._xAxis = d3.svg.axis()\r\n                .scale(x)\r\n                .orient(\"bottom\")\r\n                .ticks(10);\r\n\r\n            // In LOG scale, can't specify default number of ticks\r\n            // must be filter with tickFormat instead\r\n            // refer: https://github.com/d3/d3/wiki/Quantitative-Scales#log_ticks\r\n            if (this._isLogaricVariant) {\r\n                this._yAxis = d3.svg.axis()\r\n                    .scale(y)\r\n                    .orient(\"left\")\r\n                    .ticks(_numOfTickY, _tickFormat)\r\n                    .tickSize(10, 0);\r\n            } else {\r\n                this._yAxis = d3.svg.axis()\r\n                    .scale(y)\r\n                    .orient(\"left\")\r\n                    .ticks(_numOfTickY)\r\n                    .tickSize(10, 0)\r\n                    .tickFormat(_tickFormat);\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        // Grid\r\n        if (this._gridXShow) {\r\n            // Select CURRENT svg container, to make this axis outside\r\n            // as a SEPARATED component, just like AXIS, of CHART\r\n            // d3.select(this._svg[0][0].parentNode)\r\n            this._xAxis.innerTickSize(-height)\r\n                .outerTickSize(0);\r\n        }\r\n\r\n        if (this._gridYShow) {\r\n            // Select CURRENT svg container, to make this axis outside\r\n            // as a SEPARATED component, just like AXIS, of CHART\r\n            // d3.select(this._svg[0][0].parentNode)\r\n            this._yAxis.innerTickSize(-width)\r\n                .outerTickSize(0);\r\n        }\r\n\r\n        this._body    = body;\r\n        this._data   = data;\r\n        this._width  = width;   // TODO : ADD Getter/setter\r\n        this._height  = height;\r\n\r\n        if (this._xAxisShow) {\r\n            this._body.append(\"g\")\r\n                .attr(\"class\", \"x axis\")\r\n                .attr(\"transform\", \"translate(0,\" + (height) + \")\")\r\n                .call(this._xAxis)\r\n                .append(\"text\")\r\n                .attr(\"dx\", \"-.8em\")\r\n                .attr(\"dy\", \"-.55em\")\r\n                .attr(\"x\", width)\r\n                .attr(\"y\", \"20\")\r\n                .style(\"text-anchor\", \"start\")\r\n                .text(this._xAxisText);\r\n                // .attr(\"transform\", \"rotate(-90)\" );\r\n        }\r\n\r\n        if (this._yAxisShow) {\r\n            this._body.append(\"g\")\r\n                .attr(\"class\", \"y axis\")\r\n                .call(this._yAxis)\r\n                .append(\"text\")\r\n                // .attr(\"transform\", \"rotate(-90)\")\r\n                .attr(\"y\", -10)\r\n                .attr(\"dy\", \".10\")\r\n                .style(\"text-anchor\", \"end\")\r\n                .text(this._yAxisText);\r\n        }\r\n\r\n\r\n        /**\r\n            TODO:\r\n            - Add y2-axis\r\n        **/\r\n            \r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    \r\n    get xAxis() {\r\n        return this._xAxis;\r\n    }\r\n\r\n    get yAxis() {\r\n        return this._yAxis;\r\n    }\r\n\r\n    get xAxisShow() {\r\n        return this._xAxisShow;\r\n    }\r\n\r\n    get xAxisPadding() {\r\n        return this._xAxisPadding;\r\n    }\r\n\r\n    get yAxisShow() {\r\n        return this._yAxisShow;\r\n    }\r\n\r\n    get yAxisPadding() {\r\n        return this._yAxisPadding;\r\n    }\r\n\r\n    get isLogaricVariant() {\r\n        return this._isLogaricVariant;\r\n    }\r\n\r\n    get y2AxisShow() {\r\n        return this._y2AxisShow;\r\n    }\r\n\r\n    get y2AxisPadding() {\r\n        return this._y2AxisPadding;\r\n    }\r\n    \r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    \r\n    set xAxis(newXAxis) {\r\n        if (newXAxis) {\r\n            this._xAxis = newXAxis;\r\n        }\r\n    }\r\n\r\n    set yAxis(newYAxis) {\r\n        if (newYAxis) {\r\n            this._yAxis = newYAxis;\r\n        }\r\n    }\r\n\r\n    set xAxisShow(newXAxisShow) {\r\n        if (newXAxisShow) {\r\n            this._xAxisShow = newXAxisShow;\r\n        }\r\n    }\r\n\r\n    set xAxisPadding(newXAxisPadding) {\r\n        if (newXAxisPadding) {\r\n            this._xAxisPadding = newXAxisPadding;\r\n        }\r\n    }\r\n\r\n    set yAxisShow(newYAxisShow) {\r\n        if (newYAxisShow) {\r\n            this._yAxisShow = newYAxisShow;\r\n        }\r\n    }\r\n\r\n    set yAxisPadding(newYAxisPadding) {\r\n        if (newYAxisPadding) {\r\n            this._yAxisPadding = newYAxisPadding;\r\n        }\r\n    }\r\n\r\n    set isLogaricVariant(newIsLogaricVariant) {\r\n        if (newIsLogaricVariant) {\r\n            this._isLogaricVariant = newIsLogaricVariant;\r\n        }\r\n    }\r\n\r\n    set y2AxisShow(newY2AxisShow) {\r\n        if (newY2AxisShow) {\r\n            this._y2AxisShow = newY2AxisShow;\r\n        }\r\n    }\r\n\r\n    set y2AxisPadding(newY2AxisPadding) {\r\n        if (newY2AxisPadding) {\r\n            this._y2AxisPadding = newY2AxisPadding;\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Axis.js\n **/","'use strict';\r\n\r\nexport default class Legend {\r\n    constructor(options, body, data) {\r\n        var config = {\r\n            legendShow      : false,\r\n            legendPosition  : [0, 0],\r\n            legendBox       : false,\r\n            legendSize      : 18,\r\n            legendTextSize : \"14px\",\r\n            legendMargin   : [50, 5, 5, 5],\r\n            legendSpace     : 150,\r\n            // legendStyle     : \"rect\" // TODO: Allow user to choose type of legend (circle, rect, etc.)\r\n        };\r\n\r\n        var self = this;\r\n\r\n        self._legendShow         = options.legendShow       || config.legendShow;\r\n        self._legendTextSize     = options.legendTextSize   || config.legendTextSize;\r\n        self._legendPosition     = options.legendPosition   || config.legendPosition;\r\n        self._legendSize         = options.legendSize       || config.legendSize;\r\n        self._legendBox          = options.legendBox        || config.legendBox;\r\n        self._legendMargin       = options.legendMargin     || config.legendMargin;\r\n        self._legendSpace        = options.legendSpace      || config.legendSpace;\r\n        // self._legendStyle        = options.legendStyle      || config.legendStyle;\r\n\r\n        self._options   = options;\r\n        self._body      = body;\r\n        // self._color     = color;\r\n        self._data      = data;\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get body() {\r\n        return this._body;\r\n    }\r\n\r\n    get color() {\r\n        return this._color;\r\n    }\r\n    \r\n    get legendShow() {\r\n        return this._legendShow;\r\n    }\r\n\r\n    get legendText() {\r\n        return this._legendText ;\r\n    }\r\n\r\n    get legendPosition() {\r\n        return this._legendPosition;\r\n    }\r\n\r\n    get legendSize() {\r\n        return this._legendSize;\r\n    }\r\n\r\n    get legendMargin() {\r\n        return this._legendMargin;\r\n    }\r\n\r\n    get legendSpace() {\r\n        return this._legendSpace;\r\n    }\r\n\r\n    get legendItem() {\r\n        return this._legendItem;\r\n    }\r\n\r\n    get legendDomain() {\r\n        return this._legendDomain;\r\n    }\r\n\r\n    get legendItemEventFactory() {\r\n        return this._legendItemEventFactory;\r\n    }\r\n    \r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set data(arg) {\r\n        if (arg) {\r\n            this._data = arg;\r\n        }\r\n    }\r\n\r\n    set legendShow(newlegendShow) {\r\n        if (newlegendShow) {\r\n            this._legendShow = newlegendShow;\r\n        }\r\n    }\r\n\r\n    set legendText(newlegendText) {\r\n        if (newlegendText) {\r\n            this._legendText = newlegendText;\r\n        }\r\n    }\r\n\r\n    set legendPosition(newlegendPosition) {\r\n        if (newlegendPosition) {\r\n            this._legendPosition = newlegendPosition;\r\n        }\r\n    }\r\n\r\n    set legendSize(newlegendSize) {\r\n        if (newlegendSize) {\r\n            this._legendSize = newlegendSize;\r\n        }\r\n    }\r\n\r\n    set legendMargin(arg) {\r\n        if (arg) {\r\n            this._legendMargin = arg;\r\n        }\r\n    }\r\n\r\n    set legendSpace(arg) {\r\n        if (arg) {\r\n            this._legendSpace = arg;\r\n        }\r\n    }\r\n\r\n    set legendItem(newLegendItem) {\r\n        if (newLegendItem) {\r\n            this._legendItem = newLegendItem;\r\n        }\r\n    }\r\n\r\n    set legendDomain(newLegendDomain) {\r\n        if (newLegendDomain) {\r\n            this._legendDomain = newLegendDomain;\r\n        }\r\n    }\r\n\r\n    set legendItemEventFactory(newLegendItemEventFactory) {\r\n        if (newLegendItemEventFactory) {\r\n            this._legendItemEventFactory = newLegendItemEventFactory;\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    draw () {\r\n        var self = this;\r\n\r\n        // var color = self.color;\r\n\r\n        if (self._legendShow) {\r\n            // TODO: Remove these conditional checks by getData for general purposes\r\n            var legendDomain = [];\r\n\r\n            // var setEnableData = function(_data, _flag) {\r\n            //     return {\r\n            //         'data': _data,\r\n            //         'enable': _flag\r\n            //     };\r\n            // };\r\n\r\n            // if (self._body.type == \"line\") {\r\n\r\n            //     var dataGroup = d3.nest()\r\n            //         .key(function(d) { return d.Client; })\r\n            //         .entries(self._data);\r\n\r\n            //     dataGroup.forEach(function(d, i) {\r\n            //         legendDomain.push(d.key);\r\n            //     });\r\n\r\n            // } else if (self._body.type == \"bar\") {\r\n\r\n            //     legendDomain = self._data;\r\n\r\n\r\n\r\n            // } else if (self._body.type == \"pie\" || self._body.type == \"donut\" || self._body.type == \"timeline\") {\r\n\r\n            //     self._data.forEach(function(d) {\r\n            //         d.name ? legendDomain.push(d.name) : legendDomain.push(\"\");\r\n            //     });\r\n\r\n            // }\r\n\r\n\r\n\r\n            // Store for backup, and add enable flag to each data\r\n            // self.legendDomain = [];\r\n            // self._data.forEach(function(d) {\r\n            //     if (d) {\r\n            //         self.legendDomain.push(setEnableData(d, true));\r\n            //     }\r\n            // });\r\n\r\n            // var i;\r\n            // for (i = 0; i < legendDomain.length; i++) {\r\n            //     if (legendDomain[i] != \"\")\r\n            //         break;\r\n            // };\r\n\r\n            // if (i == legendDomain.length)\r\n            //     legendDomain = [];\r\n\r\n            // Calculate domain for color to draw\r\n            // color.domain(legendDomain);\r\n\r\n            if (self._body.type == \"bar\") {\r\n                self.data = self.data[self.data.reduce((p, c, i, a) => a[p].stack.length > c.stack.length ? p : i, 0)].stack;\r\n            }\r\n\r\n            // Legend will be appended in main SVG container\r\n            var legendContainer = d3.select(self._body[0][0].parentNode)\r\n                .append(\"g\")\r\n                .attr(\"class\", \"c9-custom-legend c9-custom-legend-container\")\r\n                .attr(\"transform\", \"translate(\" + self._legendPosition[0] + \",\" + self._legendPosition[1] + \")\");\r\n            \r\n            // var legendBox = legendContainer.selectAll(\".c9-custom-legend.c9-custom-legend-box\").data([true]).enter();\r\n\r\n            self.legendItem = legendContainer.selectAll(\"g.c9-custom-legend.c9-custom-legend-item\")\r\n                // .data(color.domain())\r\n                .data(self.data)\r\n                .enter().append(\"g\")\r\n                .attr(\"class\", \"c9-custom-legend c9-custom-legend-item\")\r\n                .attr('data-ref', function(d) { return d['data-ref']; })\r\n                .attr(\"transform\", function(d, i) {\r\n                    return \"translate(\" + (i * (self.legendSize + self.legendSpace) + self.legendMargin[0]) + \",\" + self.legendMargin[3] + \")\"\r\n                });\r\n\r\n            self.legendItem.append('rect')\r\n                .attr('class', 'c9-custom-legend c9-custom-legend-rect')\r\n                .attr('width', self.legendSize * 2)\r\n                .attr('height', self.legendSize)\r\n                .attr('r', self.legendSize)\r\n                .attr('fill', function(d){ return d.color; })\r\n                .attr('stroke', function(d){ return d.color; });\r\n\r\n            self.legendItem.append('text')\r\n                .attr('class', 'c9-custom-legend c9-custom-legend-text')\r\n                .attr('x', self._legendSize * 2 + 20)\r\n                .attr('y', 15)\r\n                // .attr('text-anchor', 'middle')\r\n                .text(function(d) { return self._body.type == \"bar\" ? d.group : d.name; });\r\n\r\n\r\n            // if (self._legendBox && legendDomain.length > 0) {\r\n            //     var box = legendContainer[0][0].getBBox();\r\n            //     legendBox.attr(\"class\", \".c9-custom-legend.c9-custom-legend-box\")\r\n            //         .attr(\"x\", 0)\r\n            //         .attr(\"y\", 0)\r\n            //         .attr(\"width\", box.width + self._legendMargin[1] + self._legendMargin[3])\r\n            //         .attr(\"height\", box.height + self._legendMargin[2] + self._legendMargin[0])\r\n            //         .style(\"fill\", \"none\")\r\n            //         .style(\"stroke\", color);\r\n            // }\r\n        \r\n        }\r\n    \r\n    }\r\n\r\n    /**\r\n     * Update interaction event dispatchers for legend\r\n     * For: Donut Chart, Pie Chart\r\n     */\r\n    updateInteractionForDonutPieChart(chart, path, pie, currentData, arc) {\r\n\r\n        var self = this;\r\n\r\n        var chartType = chart.chartType;\r\n\r\n        var chartInnerBefore    = chartType == 'pie' ?  0 : chart.innerRadius,\r\n            chartOuterBefore    = chartType == 'pie' ?  chart.radius : chart.outerRadius,\r\n            chartInnerAfter     = chartType == 'pie' ?  0 : chart.innerRadius,\r\n            chartOuterAfter     = chartType == 'pie' ?  chart.radius * 1.2 : chart.outerRadius * 1.2;\r\n\r\n        self.legendItemEventFactory = {\r\n\r\n            'click': function(item) {\r\n\r\n                var selector = d3.select(this);\r\n                var enable = true,\r\n                    dataSet = self.data;\r\n                var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                    return (d.enable) ? 1 : 0;\r\n                }));\r\n\r\n                // Add pointer to cursor\r\n                selector.style('cursor', 'pointer');\r\n\r\n                // If current selector is disabled, then turn it on back\r\n                // Else, set enable to false\r\n                if (selector.style('opacity') == '0.1') {\r\n                    selector.style('opacity', '1.0');\r\n                } else {\r\n                    if (totalEnable < 2) return;\r\n                    selector.style('opacity', '0.1');\r\n                    enable = false;\r\n                }\r\n\r\n                chart.pie.value(function(d) {\r\n                    if (d.name == item.name) d.enable = enable;\r\n                    return (d.enable) ? d.value : 0;\r\n                });\r\n\r\n                path = path.data(chart.pie(dataSet));\r\n\r\n                path.transition()\r\n                    .duration(500)\r\n                    .attrTween('d', function(d) {\r\n                        var interpolate = d3.interpolate(chart.currentData, d);\r\n                        // Returns an interpolator between the two arbitrary values a and b. \r\n                        // The interpolator implementation is based on the type of the end value b.\r\n                        chart.currentData = interpolate(0);\r\n                        return function(t) {\r\n                            return arc(interpolate(t));\r\n                        };\r\n                    })\r\n                    // Remove stroke when re-draw arcs to avoid duplicate strokes\r\n                    .attr('stroke', 'none');;\r\n                \r\n            },\r\n\r\n            'mouseover': function(item) {\r\n                var legendSelector = d3.select(this);\r\n                // Add pointer to cursor\r\n                legendSelector.style('cursor', 'pointer');\r\n\r\n                var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\r\n\r\n                selector\r\n                    .transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerAfter)\r\n                            .outerRadius(chartOuterAfter)\r\n                        )\r\n                        .attr('fill-opacity', '1.0');\r\n                // var enable = true,\r\n                //     dataSet = self.legendDomain,\r\n                //     isCurrentEnable = true;\r\n\r\n                // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n                //     return (d.enable) ? 1 : 0;\r\n                // }));\r\n\r\n                // // Add pointer to cursor\r\n                // selector.style('cursor', 'pointer');\r\n\r\n                // // If current selector is disabled, then remains it\r\n                // // Else, turn enabled to disabled\r\n                // if (!isCurrentEnable) {\r\n                //     return false;\r\n                // } else {\r\n                //     if (totalEnable < 2) return;\r\n                //     selector.style('opacity', '0.5');\r\n                //     enable = false;\r\n                // }\r\n\r\n                // chart.pie.value(function(d) {\r\n                //     if (d.data.name == item) d.tempEnable = enable;\r\n                //     else d.tempEnable = d.enable;\r\n\r\n                //     return (d.tempEnable) ? d.data.value : 0;\r\n                // });\r\n\r\n                // path = path.data(chart.pie(dataSet));\r\n\r\n                // path.transition()\r\n                //     .duration(200)\r\n                //     .attrTween('d', function(d) {\r\n                //         var interpolate = d3.interpolate(chart.currentData, d);\r\n                //         // Returns an interpolator between the two arbitrary values a and b. \r\n                //         // The interpolator implementation is based on the type of the end value b.\r\n                //         chart.currentData = interpolate(0);\r\n                //         return function(t) {\r\n                //             return arc(interpolate(t));\r\n                //         };\r\n                //     });\r\n\r\n            },\r\n\r\n            'mouseout': function(item) {\r\n\r\n                var legendSelector = d3.select(this);\r\n                // Add pointer to cursor\r\n                legendSelector.style('cursor', 'pointer');\r\n\r\n                var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\r\n\r\n                selector\r\n                    .transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        )\r\n                        .attr('fill-opacity', '0.5');\r\n                // var dataSet = self.legendDomain,\r\n                //     isCurrentEnable = true;\r\n\r\n                // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n                //     return (d.enable) ? 1 : 0;\r\n                // }));\r\n\r\n                // // Add pointer to cursor\r\n                // selector.style('cursor', 'pointer');\r\n\r\n                // chart.pie.value(function(d) {\r\n                //     if (d.data.name == item && !d.enable) d.enable = enable;\r\n                //     return (d.enable) ? d.data.value : 0;\r\n                // });\r\n\r\n                // if (!isCurrentEnable) {\r\n                //     return;\r\n                // } else {\r\n                //     if (totalEnable < 2 || selector.style('opacity') == '1') return;\r\n                //     selector.style('opacity', '1.0');\r\n                // }\r\n\r\n                // path = path.data(chart.pie(dataSet));\r\n\r\n                // path.transition()\r\n                //     .duration(200)\r\n                //     .attrTween('d', function(d) {\r\n                //         var interpolate = d3.interpolate(chart.currentData, d);\r\n                //         // Returns an interpolator between the two arbitrary values a and b. \r\n                //         // The interpolator implementation is based on the type of the end value b.\r\n                //         chart.currentData = interpolate(0);\r\n                //         return function(t) {\r\n                //             return arc(interpolate(t));\r\n                //         };\r\n                //     });\r\n\r\n            }\r\n        \r\n        };\r\n\r\n        if (self.legendShow) {\r\n            \r\n            self.legendItem.on(self.legendItemEventFactory);\r\n\r\n        }\r\n    \r\n    }\r\n\r\n    /**\r\n     * Update interaction for barchart\r\n     * @param  {[type]} chart       [description]\r\n     * @param  {[type]} path        [description]\r\n     * @param  {[type]} pie         [description]\r\n     * @param  {[type]} currentData [description]\r\n     * @param  {[type]} arc         [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    updateInteractionForBarChart(chart) {\r\n\r\n        var self = this;\r\n\r\n        self.legendItemEventFactory = {\r\n\r\n            'click': function(item) {\r\n                var selector = d3.select(this);\r\n                var enable = true,\r\n                    dataBackup = chart.dataTarget,\r\n                    dataSet = self.data;\r\n                var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                    return (d.enable) ? 1 : 0;\r\n                }));\r\n\r\n                var enableSet = [];\r\n                var enableSetOld = [];\r\n                var data = [];\r\n                // Add pointer to cursor\r\n                selector.style('cursor', 'pointer');\r\n\r\n                // If current selector is disabled, then turn it on back\r\n                // Else, set enable to false\r\n                if (selector.style('opacity') == '0.1') {\r\n                    selector.style('opacity', '1.0');\r\n                } else {\r\n                    if (totalEnable < 2) return;\r\n                    selector.style('opacity', '0.1');\r\n                    enable = false;\r\n                }\r\n\r\n                //set current data for legend\r\n                self.data.forEach(function(d, i) {\r\n                    if (d.enable)\r\n                        enableSetOld.push(d.group);\r\n                    if (d.group == item.group)\r\n                        d.enable = enable;\r\n                    if (d.enable)\r\n                        enableSet.push(d.group);\r\n                });\r\n\r\n                //TODO - handle total - use for axis\r\n                dataBackup.forEach(function(d, i) {\r\n                    var element = {stack: [], max: d.max};\r\n                    d.stack.forEach(function(s, j) {\r\n                        enableSet.forEach(function(e) {\r\n                            if (e == s.group) {\r\n                                element.stack.push(s);\r\n                            }\r\n                        })\r\n                    })\r\n                    data.push(element);\r\n                });\r\n\r\n                chart.updateLegendInteraction(data, enableSet, enableSetOld, item.group);\r\n                \r\n            },\r\n\r\n            // 'mouseover': function(item) {\r\n            //     var legendSelector = d3.select(this);\r\n            //     // Add pointer to cursor\r\n            //     legendSelector.style('cursor', 'pointer');\r\n\r\n            //     var selector = d3.select('.c9-custom-path.' + item);\r\n\r\n            //     selector\r\n            //         .transition()\r\n            //             .duration(500)\r\n            //             .ease('bounce')\r\n            //             .attr('d', d3.svg.arc()\r\n            //                 .innerRadius(chartInnerAfter)\r\n            //                 .outerRadius(chartOuterAfter)\r\n            //             )\r\n            //             .style('stroke', '#FFFFF3')\r\n            //             .style('fill-opacity', '1.0');\r\n            //     // var enable = true,\r\n            //     //     dataSet = self.legendDomain,\r\n            //     //     isCurrentEnable = true;\r\n\r\n            //     // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n            //     //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n            //     //     return (d.enable) ? 1 : 0;\r\n            //     // }));\r\n\r\n            //     // // Add pointer to cursor\r\n            //     // selector.style('cursor', 'pointer');\r\n\r\n            //     // // If current selector is disabled, then remains it\r\n            //     // // Else, turn enabled to disabled\r\n            //     // if (!isCurrentEnable) {\r\n            //     //     return false;\r\n            //     // } else {\r\n            //     //     if (totalEnable < 2) return;\r\n            //     //     selector.style('opacity', '0.5');\r\n            //     //     enable = false;\r\n            //     // }\r\n\r\n            //     // chart.pie.value(function(d) {\r\n            //     //     if (d.data.name == item) d.tempEnable = enable;\r\n            //     //     else d.tempEnable = d.enable;\r\n\r\n            //     //     return (d.tempEnable) ? d.data.value : 0;\r\n            //     // });\r\n\r\n            //     // path = path.data(chart.pie(dataSet));\r\n\r\n            //     // path.transition()\r\n            //     //     .duration(200)\r\n            //     //     .attrTween('d', function(d) {\r\n            //     //         var interpolate = d3.interpolate(chart.currentData, d);\r\n            //     //         // Returns an interpolator between the two arbitrary values a and b. \r\n            //     //         // The interpolator implementation is based on the type of the end value b.\r\n            //     //         chart.currentData = interpolate(0);\r\n            //     //         return function(t) {\r\n            //     //             return arc(interpolate(t));\r\n            //     //         };\r\n            //     //     });\r\n\r\n            // },\r\n\r\n            // 'mouseout': function(item) {\r\n\r\n            //     var legendSelector = d3.select(this);\r\n            //     // Add pointer to cursor\r\n            //     legendSelector.style('cursor', 'pointer');\r\n\r\n            //     var selector = d3.select('.c9-custom-path.' + item);\r\n\r\n            //     selector\r\n            //         .transition()\r\n            //             .duration(500)\r\n            //             .ease('bounce')\r\n            //             .attr('d', d3.svg.arc()\r\n            //                 .innerRadius(chartInnerBefore)\r\n            //                 .outerRadius(chartOuterBefore)\r\n            //             )\r\n            //             .style('stroke', '#ffffff')\r\n            //             .style('fill-opacity', '0.5');\r\n            //     // var dataSet = self.legendDomain,\r\n            //     //     isCurrentEnable = true;\r\n\r\n            //     // var totalEnable = d3.sum(dataSet.map(function(d) {\r\n            //     //     if (d.data.name == item && !d.enable) isCurrentEnable = false;\r\n            //     //     return (d.enable) ? 1 : 0;\r\n            //     // }));\r\n\r\n            //     // // Add pointer to cursor\r\n            //     // selector.style('cursor', 'pointer');\r\n\r\n            //     // chart.pie.value(function(d) {\r\n            //     //     if (d.data.name == item && !d.enable) d.enable = enable;\r\n            //     //     return (d.enable) ? d.data.value : 0;\r\n            //     // });\r\n\r\n            //     // if (!isCurrentEnable) {\r\n            //     //     return;\r\n            //     // } else {\r\n            //     //     if (totalEnable < 2 || selector.style('opacity') == '1') return;\r\n            //     //     selector.style('opacity', '1.0');\r\n            //     // }\r\n\r\n            //     // path = path.data(chart.pie(dataSet));\r\n\r\n            //     // path.transition()\r\n            //     //     .duration(200)\r\n            //     //     .attrTween('d', function(d) {\r\n            //     //         var interpolate = d3.interpolate(chart.currentData, d);\r\n            //     //         // Returns an interpolator between the two arbitrary values a and b. \r\n            //     //         // The interpolator implementation is based on the type of the end value b.\r\n            //     //         chart.currentData = interpolate(0);\r\n            //     //         return function(t) {\r\n            //     //             return arc(interpolate(t));\r\n            //     //         };\r\n            //     //     });\r\n\r\n            // }\r\n        \r\n        };\r\n\r\n        if (self.legendShow) {\r\n            \r\n            self.legendItem.on(self.legendItemEventFactory);\r\n\r\n        }\r\n    \r\n    }\r\n\r\n    setYLocation (height, margin) {\r\n        if (this.legendPosition === 'top') {\r\n            return (margin.top / 2);\r\n        } else if (this.legendPosition === 'bottom') {\r\n            return (height - margin.bottom / 2);\r\n        }\r\n    \r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Legend.js\n **/","'use strict';\r\n\r\nexport default class Title {\r\n    constructor(options, body, width, height, margin) {\r\n        var config = {\r\n            titleShow      : true,\r\n            titleText      : \"Sample Chart\",\r\n            titlePosition  : 'top',\r\n            titleSize      : \"14px\"\r\n        };\r\n\r\n        this._titleShow     = options.titleShow       || config.titleShow;\r\n        this._titleText     = options.titleText       || config.titleText;\r\n        this._titlePosition = options.titlePosition   || config.titlePosition;\r\n        this._titleSize     = options.titleSize       || config.titleSize;\r\n\r\n        this._body    = body;\r\n\r\n        if (this._titleShow) {\r\n            var self = this;\r\n            // Select CURRENT body container, to make this axis outside\r\n            // as a SEPARATED component, just like AXIS, of CHART\r\n            var text = d3.select(self._body[0][0].parentNode)\r\n                .append(\"g\")\r\n                    .attr('class', 'c9-custom-title c9-custom-title-container')\r\n                    .append(\"text\")\r\n                        .attr(\"class\", \"c9-custom-title c9-custom-title-text\");\r\n\r\n                // Get title width: text.node().getComputedTextLength()           \r\n                text.attr(\"x\", (((width - text.node().getComputedTextLength()) / 2)))           \r\n                    .attr(\"y\", this.setYLocation(height, margin))\r\n                    .attr(\"text-anchor\", \"middle\")  \r\n                    .style(\"font-size\", this._titleSize)  \r\n                    .text(this._titleText);\r\n        }\r\n            \r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    \r\n    get titleShow() {\r\n        return this._titleShow;\r\n    }\r\n\r\n    get titleText() {\r\n        return this._titleText ;\r\n    }\r\n\r\n    get titlePosition() {\r\n        return this._titlePosition;\r\n    }\r\n\r\n    get titleSize() {\r\n        return this._titleSize;\r\n    }\r\n    \r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    \r\n    set titleShow(newTitleShow) {\r\n        if (newTitleShow) {\r\n            this._titleShow = newTitleShow;\r\n        }\r\n    }\r\n\r\n    set titleText(newTitleText) {\r\n        if (newTitleText) {\r\n            this._titleText = newTitleText;\r\n        }\r\n    }\r\n\r\n    set titlePosition(newTitlePosition) {\r\n        if (newTitlePosition) {\r\n            this._titlePosition = newTitlePosition;\r\n        }\r\n    }\r\n\r\n    set titleSize(newTitleSize) {\r\n        if (newTitleSize) {\r\n            this._titleSize = newtitleSize;\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    setYLocation(height, margin) {\r\n        if (this.titlePosition === 'top') {\r\n            return (margin.top / 2);\r\n        } else if (this.titlePosition === 'bottom') {\r\n            return (height - margin.bottom / 2);\r\n        }\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Title.js\n **/","import Helper from './C9.Helper';\r\n\r\nexport default class DataAdapter {\r\n\r\n    constructor(options) {\r\n\r\n        var self = this;\r\n\r\n        var config = {\r\n            // ALL OPTIONS AVAILABLE IN DATA CONFIG\r\n            keys: {\r\n                name: \"name\",\r\n                value: \"value\"\r\n            },\r\n            groups: [],\r\n            stacks: [],\r\n\r\n            // NO NEED TO ADD TO DATA OPTIONS\r\n            // Just use to define default parameters\r\n            colorRange: null,\r\n        };\r\n\r\n        self._keys      = Helper.merge(options.keys, config.keys);\r\n        self._groups    = options.groups    || config.groups;\r\n        self._stacks    = options.stacks    || config.stacks;\r\n        self._colorRange= options.colorRange|| config.colorRange;\r\n\r\n        self._dataSource = null;\r\n        self._dataTarget = []; // Initialize new Array to use Array methods\r\n        self.initDataSource(options);\r\n\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get keys() {\r\n        return this._keys;\r\n    }\r\n\r\n    get dataSource() {\r\n        return this._dataSource;\r\n    }\r\n\r\n    get dataTarget() {\r\n        return this._dataTarget;\r\n    }\r\n\r\n    get groups() {\r\n        return this._groups;\r\n    }\r\n\r\n    get stacks() {\r\n        return this._stacks;\r\n    }\r\n\r\n    get colorRange() {\r\n        return this._colorRange;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set keys(arg) {\r\n        if (arg) {\r\n            this._keys = arg;\r\n        }\r\n    }\r\n\r\n    set dataSource(arg) {\r\n        if (arg) {\r\n            this._dataSource = arg;\r\n        }\r\n    }\r\n\r\n    set dataTarget(arg) {\r\n        if (arg) {\r\n            this._dataTarget = arg;\r\n        }\r\n    }\r\n\r\n    set groups(arg) {\r\n        if (arg) {\r\n            this._groups = arg;\r\n        }\r\n    }\r\n\r\n    set stacks(arg) {\r\n        if (arg) {\r\n            this._stacks = arg;\r\n        }\r\n    }\r\n\r\n    set colorRange(arg) {\r\n        if (arg) {\r\n            this._colorRange = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n\r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    initDataSource(options) {\r\n        var self = this;\r\n\r\n        if (self.hasPlainData(options)) {\r\n            self.executePlainData(options);\r\n        } else if (self.hasFile(options)) {\r\n            self.executeFile(options);\r\n        }\r\n    }\r\n\r\n    hasPlainData(options) {\r\n        return options.plain && Helper.isArray(options.plain);\r\n    }\r\n\r\n    hasFile(options) {\r\n        return options.file && Helper.isObject(options.file);\r\n    }\r\n\r\n    executePlainData(options) {\r\n        var self = this;\r\n\r\n        self._dataSource = options.plain;\r\n    }\r\n\r\n    executeFile(options) {\r\n        var self = this;\r\n\r\n        self._file  = Helper.merge(options.file, config.file);\r\n\r\n        if (self._file && self._file.type) {\r\n\r\n            switch(self._file.type) {\r\n                case \"csv\":\r\n                    self._dataSource = self.getCsv();\r\n                    break;\r\n                case \"tsv\":\r\n                    self._dataSource = self.getTsv();\r\n                    break;\r\n                case \"text\":\r\n                    self._dataSource = self.getText();\r\n                    break;\r\n                case \"json\":\r\n                    self._dataSource = self.getJson();\r\n                    break;\r\n                case \"xml\":\r\n                    self._dataSource = self.getXml();\r\n                    break;\r\n                case \"xhr\":\r\n                    self._dataSource = self.getJson();\r\n                    break;\r\n                default:\r\n                    self._dataSource = self.getJson();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDataTypeForBarChart() {\r\n        var self = this;\r\n\r\n        if (!Helper.isEmpty(self.groups) && Helper.isArray(self.groups)) {\r\n            return \"group\";\r\n        } else if (!Helper.isEmpty(self.stacks) && Helper.isArray(self.stacks)) {\r\n            return \"stack\";\r\n        }\r\n\r\n        return \"single\";\r\n    }\r\n\r\n    getDataTarget(chartType) {\r\n        var self = this;\r\n\r\n        switch(chartType) {\r\n            case \"bar\":\r\n                return self.getDataTargetForBarChart();\r\n                break;\r\n\r\n            case \"line\":\r\n                \r\n                break;\r\n\r\n            case \"pie\":\r\n                return self.getDataTargetForPieChart();\r\n                break;\r\n\r\n            case \"donut\":\r\n                return self.getDataTargetForDonutChart();\r\n                break;\r\n\r\n            case \"timeline\":\r\n                return self.getDataTargetForTimelineChart();\r\n                break;\r\n            default:\r\n                return self.dataSource;\r\n                break;\r\n        }\r\n    }\r\n\r\n    getName(v) {\r\n        return v.name; \r\n    }\r\n\r\n    getValue(v) {\r\n        var self = this;\r\n\r\n        return Helper.get(self.keys, v);\r\n    }\r\n\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /*=================================================\r\n    =            Normalize Data For Charts            =\r\n    =================================================*/\r\n    getDataTargetForBarChart() {\r\n        var self = this;\r\n\r\n        switch(self.getDataTypeForBarChart()) {\r\n            case \"single\":\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _stack = [];\r\n                    let _data = {\r\n                        \"max\": Helper.get(self.keys.value, data),\r\n                        \"stack\": [{\r\n                            \"name\" : Helper.get(self.keys.name, data),\r\n                            \"y0\" : 0,\r\n                            \"y1\" : Helper.get(self.keys.value, data),\r\n                            \"enable\" : true,\r\n                        }]\r\n                    };\r\n                    self.dataTarget.push(_data);\r\n                });\r\n\r\n                return self.dataTarget;\r\n                break;\r\n\r\n            case \"group\":\r\n                var groups = self.groups;\r\n\r\n                // Iterate over each group\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _group      = {\r\n                            \"max\"   : null,\r\n                            \"stack\" : []\r\n                        },\r\n                        _dsArray    = Helper.get(self.keys.value, data);\r\n\r\n                    // If Group has only 1 value, so MAX = this.value\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        _group.max = Helper.max(_dsArray);\r\n                    } else {\r\n                        _group.max = _dsArray;\r\n                    }\r\n\r\n                    let _stack      = [],\r\n                        _stackItem = {\r\n                            \"color\": \"#ffffff\",\r\n                            \"y0\": 0,\r\n                            \"y1\": 1,\r\n                            \"group\": \"\",\r\n                            \"name\": \"\",\r\n                            \"data-ref\": \"\",\r\n                            \"enable\"    : true,\r\n                        },\r\n                        color = self.colorRange;\r\n\r\n                    // Iterate each single bar in a group\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        _dsArray.forEach(function(d, i) {\r\n                            _stackItem = {\r\n                                \"color\": color(i),\r\n                                \"y0\": 0,\r\n                                \"y1\": d,\r\n                                \"group\": groups[i] || i,\r\n                                \"name\": Helper.get(self.keys.name, data),\r\n                                \"data-ref\": Helper.guid(),\r\n                                \"enable\"    : true,\r\n                            };\r\n                            _stack.push(_stackItem);\r\n                        });\r\n                    } else {\r\n                        _stackItem = {\r\n                            \"color\": color(0),\r\n                            \"y0\": 0,\r\n                            \"y1\": _dsArray,\r\n                            \"group\": groups[0] || 0,\r\n                            \"name\": Helper.get(self.keys.name, data),\r\n                            \"data-ref\": Helper.guid(),\r\n                            \"enable\"    : true,\r\n                        };\r\n                        _stack.push(_stackItem);\r\n                    }\r\n                    _group.stack = _stack;\r\n\r\n                    self.dataTarget.push(_group);\r\n                });\r\n\r\n                return self.dataTarget;\r\n                break;\r\n\r\n            case \"stack\":\r\n                var stacks = self.stacks;\r\n\r\n                // Iterate over each group\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _group      = {\r\n                            \"max\"   : null,\r\n                            \"stack\" : []\r\n                        },\r\n                        _dsArray    = Helper.get(self.keys.value, data);\r\n\r\n                    // If Group has only 1 value, so MAX = this.value\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        _group.max = Helper.sum(_dsArray);\r\n                    } else {\r\n                        _group.max = _dsArray;\r\n                    }\r\n\r\n                    let _stack      = [],\r\n                        _stackItem = {\r\n                            \"color\": \"#ffffff\",\r\n                            \"y0\": 0,\r\n                            \"y1\": 1,\r\n                            \"group\": \"\",\r\n                            \"name\": \"\",\r\n                            \"data-ref\": \"\",\r\n                            \"enable\"    : true,\r\n                        },\r\n                        color = self.colorRange;\r\n\r\n                    // Iterate each single bar in a group\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        let _tempY0     = 0;\r\n                        _dsArray.forEach(function(d, i) {\r\n                            _stackItem = {\r\n                                \"color\": color(i),\r\n                                \"y0\": _tempY0,\r\n                                \"y1\": _tempY0 + d,\r\n                                \"group\": stacks[i] || i,\r\n                                \"name\": Helper.get(self.keys.name, data),\r\n                                \"data-ref\": Helper.guid(),\r\n                                \"enable\"    : true,\r\n                            };\r\n                            _stack.push(_stackItem);\r\n                            // Increase tempY0 by d to restore previous y0\r\n                            _tempY0 += d;\r\n                        });\r\n                    } else {\r\n                        _stackItem = {\r\n                            \"color\": color(0),\r\n                            \"y0\": 0,\r\n                            \"y1\": _dsArray,\r\n                            \"group\": stacks[0] || 0,\r\n                            \"name\": Helper.get(self.keys.name, data),\r\n                            \"data-ref\": Helper.guid(),\r\n                            \"enable\"    : true,\r\n                        };\r\n                        _stack.push(_stackItem);\r\n                    }\r\n                    _group.stack = _stack;\r\n\r\n                    self.dataTarget.push(_group);\r\n                });\r\n\r\n                return self.dataTarget;\r\n                break;\r\n\r\n            default:\r\n                return self.dataSource;\r\n                break;\r\n        }\r\n    \r\n    }\r\n\r\n    getDataTargetForPieChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n        self.dataSource.forEach(function(data, index) {\r\n            let _data = {\r\n                \"color\"     : color(index),\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : Helper.get(self.keys.value, data),\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n            self.dataTarget.push(_data);\r\n        });\r\n\r\n        return self.dataTarget;\r\n\r\n    }\r\n\r\n    getDataTargetForDonutChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n        self.dataSource.forEach(function(data, index) {\r\n            let _data = {\r\n                \"color\"     : color(index),\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : Helper.get(self.keys.value, data),\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n            self.dataTarget.push(_data);\r\n        });\r\n\r\n        return self.dataTarget;\r\n\r\n    }\r\n\r\n    getDataTargetForTimelineChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n\r\n        self.dataSource.forEach(function(data, index) {\r\n\r\n            let _data = {\r\n                // \"color\"     : color(index),\r\n                \"icon\"      : data.icon,\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : [],\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n\r\n            let _dsArray    = Helper.get(self.keys.value, data),\r\n                _valueArray = [],\r\n                _valueItem  = {\r\n                    \"start\": null ,\r\n                    \"end\": null ,\r\n                    \"color\": \"#fff\",\r\n                    \"data-ref\": null,\r\n                    \"enable\": true\r\n                };\r\n\r\n            if (Helper.isArray(_dsArray)) {\r\n                _dsArray.forEach(function(d, i) {\r\n                    _valueItem = {\r\n                        \"start\": d.start,\r\n                        \"end\": d.end ,\r\n                        \"color\": color(index),\r\n                        \"data-ref\": Helper.guid(),\r\n                        \"enable\": true,\r\n                    };\r\n                    _valueArray.push(_valueItem);\r\n                });\r\n            } else {\r\n                _valueItem = {\r\n                    \"start\": d.start,\r\n                    \"end\": d.end ,\r\n                    \"color\": color(index),\r\n                    \"data-ref\": Helper.guid(),\r\n                    \"enable\": true,\r\n                };\r\n                _valueArray.push(_valueItem);\r\n            }\r\n            _data.value = _valueArray;\r\n\r\n            self.dataTarget.push(_data);\r\n        });\r\n        return self.dataTarget;\r\n\r\n    }\r\n    \r\n    \r\n    /*=====  End of Normalize Data For Charts  ======*/\r\n    \r\n    /*=============================\r\n    =            Utils            =\r\n    =============================*/\r\n    // getBarColorForBarChart() {\r\n    //     var self = this;\r\n\r\n    //     var color = self.colorRange;\r\n    //     if (typeof color == 'string') {\r\n    //         try {\r\n    //             return d3.scale[color]();    \r\n    //         }\r\n    //         catch(err) {\r\n    //             return function(i) {\r\n    //                 return color;\r\n    //             };\r\n    //         }\r\n    //     } else if (typeof color == 'object') {\r\n    //         return d3.scale.ordinal().range(color);\r\n    //     }\r\n    // }\r\n    \r\n    \r\n    /*=====  End of Utils  ======*/\r\n    \r\n\r\n    /*=============================================\r\n    =            Data Input From Files            =\r\n    =============================================*/\r\n    \r\n    getCsv() {\r\n\r\n        var self = this;\r\n\r\n        d3.csv(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return data;\r\n        });\r\n\r\n    }\r\n\r\n    getTsv() {\r\n\r\n        var self = this;\r\n\r\n        d3.tsv(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return data;\r\n        });\r\n\r\n    }\r\n\r\n    getText() {\r\n\r\n        var self = this;\r\n\r\n        d3.text(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return JSON.parse(data);\r\n        });\r\n\r\n    }\r\n\r\n    getJson() {\r\n        var self = this;\r\n\r\n        d3.json(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            return data;\r\n        });\r\n    }\r\n\r\n    getXml() {\r\n        var self = this;\r\n\r\n        d3.xml(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            // Convert the XML document to an array of objects.\r\n            // Note that querySelectorAll returns a NodeList, not a proper Array,\r\n            // so we must use map.call to invoke array methods.\r\n            data = [].map.call(data.querySelectorAll(\"data\"), function(d) {\r\n                return {\r\n                    name: d.querySelector(\"name\").textContent,\r\n                    value: d.querySelector(\"value\").textContent\r\n                };\r\n            });\r\n\r\n            return data;\r\n        });\r\n    }\r\n    \r\n    /*=====  End of Data Input From Files  ======*/\r\n    \r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/C9.DataAdapter.js\n **/","var Helper = {\r\n    \r\n    each: function(loopable, callback, self, reverse) {\r\n        // Check to see if null or undefined firstly.\r\n        var i, len;\r\n        if (self.isArray(loopable)) {\r\n            len = loopable.length;\r\n            if (reverse) {\r\n                for (i = len - 1; i >= 0; i--) {\r\n                    callback.call(self, loopable[i], i);\r\n                }\r\n            } else {\r\n                for (i = 0; i < len; i++) {\r\n                    callback.call(self, loopable[i], i);\r\n                }\r\n            }\r\n        } else if (typeof loopable === 'object') {\r\n            var keys = Object.keys(loopable);\r\n            len = keys.length;\r\n            for (i = 0; i < len; i++) {\r\n                callback.call(self, loopable[keys[i]], keys[i]);\r\n            }\r\n        }\r\n    },\r\n\r\n    // setDefaultConfig: function() {\r\n    //     var self = this;\r\n\r\n    //     if (self.defaultConfig == null || self.defaultConfig === undefined) {\r\n    //         return;\r\n    //     } else {\r\n    //         self.lastConfig = self.merge(Chart._options, Chart);\r\n    //         self.each(self.lastConfig, function(value, index) {\r\n    //             // var prefixCfg = self.setPrefix(index);\r\n    //             self.setValue(self.lastConfig[index], index);\r\n    //         }, self);\r\n    //     }\r\n    // }\r\n\r\n    setValue: function(value, key) {\r\n        var self = this;\r\n        self[key] = value;\r\n    },\r\n\r\n    setPrefix: function(config) {\r\n        var constPrefix = '_';\r\n        if (config) {\r\n            return constPrefix + config;\r\n        }\r\n    },\r\n\r\n    isEmpty: function(value) {\r\n        return value === null || value === undefined || (Util.isArray(value) && value.length === 0);\r\n    },\r\n\r\n    isObject: function(object) {\r\n        return !Util.isEmpty(object) && typeof(object) === 'object';\r\n    },\r\n\r\n    isArray: function(array) {\r\n        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\r\n    },\r\n\r\n    isFunction: function(func) {\r\n        return !Util.isEmpty(func) && typeof(func) === 'function';\r\n    },\r\n\r\n    merge: function(obj1,obj2){\r\n        var obj3 = {};\r\n        for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }\r\n        for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }\r\n        return obj3;\r\n    },\r\n\r\n    get: function(_key, _data){\r\n        var _keys = _key.split(\".\");\r\n        var _current = _data;\r\n        var self = this;\r\n        \r\n        for(var i=0, len=_keys.length; i<len; i++){\r\n            var _fun = _keys[i].split(\"|\");\r\n            \r\n            if(_fun && _fun.length == 2){\r\n                _keys[i] = _fun[0];\r\n                _fun = _fun[1];\r\n            }\r\n            else{\r\n                _fun = null;\r\n            }\r\n            \r\n            if('undefined' == typeof(_current[_keys[i]])){\r\n                return '';\r\n            }\r\n            else{\r\n                _current = _current[_keys[i]];\r\n            }\r\n            \r\n            if(null !== _fun){\r\n                _current = self.filter[_fun].call(this, _current);\r\n            }\r\n        }\r\n        \r\n        return _current;\r\n    },\r\n\r\n    max: function(arr) {\r\n        return Math.max(...arr);\r\n    }, \r\n\r\n    sum: function(arr) {\r\n        return arr.reduce(function(a, b) { return a + b; }, 0);\r\n    },\r\n\r\n    guid: function() {\r\n        return 'c9-xxxxxx-4xxx-yxxx'.replace(/[xy]/g, function(c) {\r\n            let r = Math.random()*16|0, \r\n                v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    },\r\n\r\n};\r\n\r\nvar Util = {\r\n    isEmpty: function(value) {\r\n        return value === null || value === undefined;\r\n    },\r\n\r\n    isArray: function(array) {\r\n        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\r\n    },\r\n};\r\n\r\nmodule.exports = Helper;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/C9.Helper.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Tooltip from './utils/C9.Tooltip';\r\nimport Helper from '../helper/C9.Helper';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class BarChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self = this;\r\n        var config = {\r\n            barWidth: undefined,\r\n            // groupType: \"stack\"\r\n        };\r\n\r\n        var width        = self.width - self.margin.left - self.margin.right;\r\n        var height       = self.height - self.margin.top - self.margin.bottom;\r\n        // var groupCount   = 0; // use to count how many element in group\r\n        // var groupStart   = 0; // calculate the number of those first element that just have only 1 value\r\n\r\n        self.body.type      = \"bar\";\r\n        // self._groupType     = options.groupType     ||  config.groupType;\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget = da.getDataTarget(\"bar\");\r\n        var barChartType = da.getDataTypeForBarChart()\r\n        if (barChartType != \"single\") {\r\n            self._groupNames    = da.groups || da.stacks;  //define group names use for showing legend\r\n            self._isGroup       = barChartType == \"group\"\r\n        }\r\n            \r\n        \r\n        // self.data.forEach(function(d, i) {\r\n        //     var y0 = 0; // calculate stacked data (top of each bar)\r\n        //     var count = 0; // count number of group\r\n        //     groupStart = i; \r\n        //     if (typeof d.value === \"object\") {\r\n        //         if (self.groupType == \"stack\") {\r\n        //             d.stack = d.value.map(function(v) {\r\n        //                 count++;\r\n        //                 return {name: d.name, y0: y0, y1: y0 += v, group: self._groupNames.length > 0 ? self._groupNames[count - 1] : \"Group \" + count};\r\n        //             });\r\n        //             d.total = d.stack[d.stack.length - 1].y1;\r\n        //         }\r\n        //         else if (self.groupType == \"group\") {\r\n        //             var total = -Infinity;\r\n        //             d.stack = d.value.map(function(v) {\r\n        //                 count++;\r\n        //                 total = v > total ? v : total;\r\n        //                 return {name: d.name, y0: y0, y1: v, group: self._groupNames.length > 0 ? self._groupNames[count - 1] : \"Group \" + count};\r\n        //             });\r\n        //             d.total = total;\r\n        //         }\r\n        //     }\r\n        //     else {\r\n        //         d.stack = [{name: d.name, y0: y0, y1: d.value, group: count > 0 ? self._groupNames.length > 0 ? self._groupNames[count] : \"Group \" + ++count : undefined}];\r\n        //         d.total = d.stack[d.stack.length - 1].y1;\r\n        //     }\r\n        //     if (count > groupCount)\r\n        //         groupCount = count;\r\n        // });\r\n\r\n        // // assign group to those first elements in data if they don't have\r\n        // for (var i = 0; i < groupStart - 1; i++) {\r\n        //     self.data[i].stack[0].group = self._groupNames.length > 0 ? self._groupNames[0] : \"Group 1\";\r\n        // };\r\n\r\n        // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\r\n        var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);\r\n        var y = d3.scale.linear().range([height, 0]);\r\n\r\n\r\n        x.domain(self.dataTarget.map(function(d) {\r\n            return d.stack[0].name;\r\n        }));\r\n\r\n        y.domain([0, d3.max(self.dataTarget, function(d) {\r\n            return d.max;\r\n        })]);\r\n\r\n        /******** Handle for grouped, stacked bar chart ********/\r\n        if (self._groupNames) {\r\n            self._xGroup = d3.scale.ordinal();\r\n            self._xGroup.domain(self._groupNames).rangeRoundBands([0, x.rangeBand()]);\r\n        }\r\n        \r\n        //self-define group names if user do not define\r\n        // if (self._groupNames.length == 0)\r\n        //     for (var i = 1; i <= groupCount; i++) {\r\n        //         self._groupNames.push(\"Group \" + i);\r\n        //     };\r\n        \r\n        /**********************************************/\r\n\r\n        // Make flexible width according to barWidth\r\n        config.barWidth      = x.rangeBand();\r\n        self._barWidth       = options.barWidth  ||  config.barWidth;\r\n        self._x              = x;\r\n        self._y              = y;\r\n        self.updateConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get barWidth() {\r\n        return this._barWidth;\r\n    }\r\n\r\n    get colorRange() {\r\n        var color = this._colorRange;\r\n        if (typeof color == 'string') {\r\n            try {\r\n                return d3.scale[color]();    \r\n            }\r\n            catch(err) {\r\n                return function(i) {\r\n                    return color;\r\n                };\r\n            }\r\n        } else if (typeof color == 'object') {\r\n            return d3.scale.ordinal().range(color);\r\n        }\r\n    }\r\n\r\n    get groupType() {\r\n        return this._groupType;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    \r\n    get xGroup() {\r\n        return this._xGroup;\r\n    }\r\n\r\n    get groupNames() {\r\n        return this._groupNames;\r\n    }\r\n\r\n    get chartType() {\r\n        return this._body.type;\r\n    }\r\n\r\n    get isGroup() {\r\n        return this._isGroup;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set barWidth(newBarWidth) {\r\n        if (newBarWidth) {\r\n            this._barWidth = newBarWidth;\r\n        }\r\n    }\r\n    \r\n    set colorRange(newBarColor) {\r\n        if (newBarColor) {\r\n            this._colorRange = newBarColor;\r\n        }\r\n    }\r\n\r\n    set groupType(newGroupType) {\r\n        if (newGroupType) {\r\n            this._groupType = newGroupType;\r\n        }\r\n    }\r\n\r\n    set x(newX) {\r\n        if (newX) {\r\n            this._x = newX;\r\n        }\r\n    }\r\n\r\n    set y(newY) {\r\n        if (newY) {\r\n            this._y = newY;\r\n        }\r\n    }\r\n\r\n    set xGroup(newXGroup) {\r\n        if (newXGroup) {\r\n            this._xGroup = newXGroup;\r\n        }\r\n    }\r\n\r\n    set groupNames(newGroupNames) {\r\n        if (newGroupNames) {\r\n            this._groupNames = newGroupNames;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n\r\n\r\n    /**\r\n     * Init Bar Chart Config\r\n     */\r\n    updateConfig(){\r\n        var self  = this,\r\n            color = self.colorRange,\r\n            x     = self._x,\r\n            y     = self._y,\r\n            xGroup= self._xGroup;\r\n\r\n        var bar = self.body\r\n                    .selectAll(\".bar\")\r\n                    .data(self.dataTarget)\r\n                    .enter()\r\n                        .append(\"g\")\r\n                        .attr(\"class\", \"c9-chart-bar c9-custom-bar\")\r\n                        .attr(\"transform\", function(d) { return \"translate(\" + x(d.stack[0].name) + \",0)\"; });\r\n\r\n        var bars = bar.selectAll(\".c9-custom-rect\")\r\n            .data(function(d) { return d.stack; });\r\n\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"c9-custom-rect\")\r\n            .style(\"fill\", function (d, i) { return d.color || color(i); })\r\n            .attr(\"x\", function(d) { return self.isGroup ? xGroup(d.group) : undefined; })\r\n            .attr(\"y\", function(d) { return y(d.y1); })\r\n            .attr(\"width\", function(d) { return self.isGroup ? xGroup.rangeBand() : x.rangeBand(); })\r\n            .attr(\"height\", function(d) { return y(d.y0) - y(d.y1); });\r\n    }\r\n\r\n    /**\r\n     * [updateLegendInteraction description]\r\n     * @param  {[type]} data          [description]\r\n     * @param  {[type]} groupNames    [description]\r\n     * @param  {[type]} groupNamesOld [description]\r\n     * @param  {[type]} newLabel      [description]\r\n     * @return {[type]}               [description]\r\n     */\r\n    updateLegendInteraction(data, groupNames, groupNamesOld, newLabel){\r\n        var self = this;\r\n        var type = self.groupType;\r\n\r\n        var xGroup = d3.scale.ordinal();\r\n        xGroup.domain(groupNames).rangeRoundBands([0, self.x.rangeBand()]);\r\n\r\n        var xGroupOld = d3.scale.ordinal();\r\n        xGroupOld.domain(groupNamesOld).rangeRoundBands([0, self.x.rangeBand()]);\r\n\r\n        var midGroup = undefined;\r\n        //check add new label in the middle\r\n        if (groupNames.length > groupNamesOld.length && 0 < groupNames.indexOf(newLabel) && groupNames.indexOf(newLabel) < groupNames.length - 1 )\r\n            midGroup = groupNamesOld[groupNames.indexOf(newLabel)];\r\n\r\n        // self.body.selectAll(\".c9-custom-rect\").transition().duration(750).attr(\"height\", 0).remove();\r\n        self.body.selectAll(\".c9-custom-rect\").data([]).exit().remove();\r\n\r\n        var bar = self.body\r\n                    .selectAll(\".bar\")\r\n                    .data(data)\r\n                    .enter()\r\n                    .append(\"g\")\r\n                    .attr(\"class\", \"c9-chart-bar c9-custom-bar\")\r\n                    .attr(\"transform\", function (d, i) { return \"translate(\" + self.x(self.dataTarget[i].stack[0].name) + \",0)\"; });\r\n\r\n        var bars = bar.selectAll(\".c9-custom-rect\")\r\n            .data(function(d) { return d.stack; });\r\n\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"c9-custom-rect\")\r\n            .style(\"fill\", function(d) { return d.color; })\r\n            .attr(\"x\", function(d) {\r\n                // use for stack\r\n                if (!self.isGroup) return undefined;\r\n                // use for group\r\n                // group member positioning at the end of groups, so its x is the position of right edge of bar\r\n                if (groupNames.length > groupNamesOld.length && d.group == newLabel && groupNames.indexOf(newLabel) == groupNames.length - 1)\r\n                    return self.x.rangeBand();\r\n                return midGroup ? d.group == newLabel ? xGroupOld(midGroup) : xGroupOld(d.group) : xGroupOld(d.group);\r\n            })\r\n            .attr(\"y\", function(d) { return self.y(d.y1); })\r\n            .attr(\"width\", function(d) {\r\n                return !self.isGroup ? self.x.rangeBand() : d.group == newLabel ? 0 : xGroupOld.rangeBand();\r\n            })\r\n            .attr(\"height\", function(d) { return self.y(d.y0) - self.y(d.y1); });\r\n\r\n        bars.transition().duration(750)\r\n            .attr(\"x\", function(d) { return !self.isGroup ? undefined : xGroup(d.group); })\r\n            .attr(\"width\", function(d) { return !self.isGroup ? self.x.rangeBand() : xGroup.rangeBand(); })\r\n\r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * [Main draw function of Bar Chart]\r\n     * @return {[type]} [description]\r\n     */\r\n    draw() {\r\n        var self = this;\r\n        var axis    = new Axis(self.options, self.body, self.dataTarget, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom, null, null);\r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.dataTarget);\r\n        \r\n        legend.draw();\r\n        legend.updateInteractionForBarChart(self);\r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * Retrieve value from upper and lower bounds of each stack\r\n     * @param  {String} lower Lower bound of value\r\n     * @param  {String} upper Upper bound of value\r\n     * @return {String}       Value to return\r\n     */\r\n    retrieveValue(lower, upper) {\r\n        var d1 = Math.floor(lower) === lower ? 0 : lower.toString().split(\".\")[1].length;\r\n        var d2 = Math.floor(upper) === upper ? 0 : upper.toString().split(\".\")[1].length;\r\n        return d1 > d2 ? (upper - lower).toFixed(d1) : (upper - lower).toFixed(d2);\r\n    }\r\n    \r\n    /**\r\n     * Select all bars as type RECT in Bar Chart via its CLASS\r\n     */\r\n    selectAllBar() {\r\n        var self = this;\r\n\r\n        return self.body.selectAll('.c9-custom-rect');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllBar(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            // Define the div for the tooltip\r\n            // TODO: Allow user to add custom DIV, CLASS\r\n            // Make sure that: \r\n            // - Rect not overflow the bar, if not, hover effect will be messed\r\n            // -> So, just align the rect to right/left (x: 25) to avoid it\r\n            // -> And, the text will be align also\r\n            var div = self.body\r\n                        .append('g')   \r\n                        .style('display', 'none');\r\n                // Rect Container\r\n                div.append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .style('fill', '#FEE5E2')\r\n                    .style('stroke', '#FDCCC6')\r\n                    .style('stroke-width', 2);\r\n                // First line\r\n                var text_1 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 10)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n                // Second line\r\n                var text_2 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 20)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n\r\n            selector\r\n                .on(\"mouseover\", function(d) {\r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block')\r\n                        .attr(\"transform\", \"translate(\" + self.x(d.name) + \",\" + self.y(self.retrieveValue(d.y0, d.y1)) + \")\");\r\n\r\n                    text_1.text('Name: ' + d.name);\r\n                    text_2.text('Value: ' + self.retrieveValue(d.y0, d.y1));\r\n                })\r\n                .on(\"mouseout\", function(d) { \r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style('display', 'none');\r\n                });\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.BarChart.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class DonutChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self = this;\r\n        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\r\n        var config = {\r\n            outerRadius: R,\r\n            innerRadius: R > 80 ? R - 80 : R - 40,\r\n            showText: true // show/hide text on middle or each donut\r\n        };\r\n\r\n        self._outerRadius   = options.outerRadius || config.outerRadius;\r\n        self._innerRadius   = options.innerRadius || config.innerRadius;\r\n        self._showText      = options.showText || config.showText;\r\n        self.body.type      = 'donut';\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget     = da.getDataTarget(\"donut\");\r\n\r\n        self.updateConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get outerRadius() {\r\n        return this._outerRadius;\r\n    }\r\n\r\n    get innerRadius() {\r\n        return this._innerRadius;\r\n    }\r\n\r\n    get showText() {\r\n        return this._showText;\r\n    }\r\n\r\n    get eventFactory() {\r\n        return this._eventFactory;\r\n    }\r\n\r\n    get pathAnim() {\r\n        return this._pathAnim;\r\n    }\r\n\r\n    get tooltip() {\r\n        return this._tooltip;\r\n    }\r\n\r\n    get pie() {\r\n        return this._pie;\r\n    }\r\n\r\n    get arc() {\r\n        return this._arc;\r\n    }\r\n\r\n    get currentData() {\r\n        return this._currentData;\r\n    }\r\n\r\n    get chartType() {\r\n        return this._body.type;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set outerRadius(newOuterRadius) {\r\n        if (newOuterRadius) {\r\n            this._outerRadius = newOuterRadius;\r\n        }\r\n    }\r\n\r\n    set innerRadius(newInnerRadius) {\r\n        if (newInnerRadius) {\r\n            this._innerRadius = newInnerRadius;\r\n        }\r\n    }\r\n\r\n    set showText(newShowText) {\r\n        if (newShowText) {\r\n            this._showText = newShowText;\r\n        }\r\n    }\r\n\r\n    set eventFactory(newEventFactory) {\r\n        if (newEventFactory) {\r\n            this._eventFactory = newEventFactory;\r\n        }\r\n    }\r\n\r\n    set pathAnim(newPathAnim) {\r\n        if (newPathAnim) {\r\n            this._pathAnim = newPathAnim;\r\n        }\r\n    }\r\n\r\n    set tooltip(newTooltip) {\r\n        if (newTooltip) {\r\n            this._tooltip = newTooltip;\r\n        }\r\n    }\r\n\r\n    set pie(newPie) {\r\n        if (newPie) {\r\n            this._pie = newPie;\r\n        }\r\n    }\r\n\r\n    set arc(newArc) {\r\n        if (newArc) {\r\n            this._arc = newArc;\r\n        }\r\n    }\r\n\r\n    set currentData(newCurrentData) {\r\n        if (newCurrentData) {\r\n            this._currentData = newCurrentData;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Update Donut Chart Config\r\n     */\r\n    updateConfig() {\r\n        var self = this;\r\n\r\n        // chartInnerAfter, chartOuterAfter define easing radius of donut chart during animation\r\n        // TODO: Add configs allow users to define these radius\r\n        var width   = self.width - self.margin.left - self.margin.right,\r\n            height  = self.height - self.margin.top - self.margin.bottom,\r\n            color   = self.colorRange,\r\n            chartInnerBefore = self.innerRadius,\r\n            chartOuterBefore = self.outerRadius,\r\n            chartInnerAfter = self.innerRadius,\r\n            chartOuterAfter = self.outerRadius * 1.2;\r\n\r\n        var hoverOptions        = self.hover.options,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        // Define Animations for paths\r\n        self.pathAnim = function(path, dir) {\r\n            switch(dir) {\r\n                \r\n                case 'mouseover':\r\n                    path.transition()\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerAfter)\r\n                            .outerRadius(chartOuterAfter)\r\n                        )\r\n                        // .style('stroke', '#000')\r\n                        .attr('fill-opacity', '1.0');\r\n                    break;\r\n\r\n                case 'mouseout':\r\n                    path.transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        )\r\n                        // .style('stroke', '#000')\r\n                        .attr('fill-opacity', '0.5');\r\n                    break;\r\n                \r\n            }\r\n        \r\n        };\r\n\r\n        // Main Event Dispatch for paths in donut chart\r\n        self.eventFactory = {\r\n\r\n            'mouseover': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseover');\r\n                self.tooltip().mouseover(d);\r\n\r\n                // var thisDonut = self.body..select('.type' + j);\r\n                // thisDonut.select('.value').text(function(donut_d) {\r\n                //     return d.data.val.toFixed(1) + donut_d.unit;\r\n                // });\r\n                // thisDonut.select('.percentage').text(function(donut_d) {\r\n                //     return (d.data.val/donut_d.total*100).toFixed(2) + '%';\r\n                // });\r\n            },\r\n            \r\n            'mouseout': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseout');\r\n                self.tooltip().mouseout(d);\r\n\r\n                // var thisDonut = charts.select('.type' + j);\r\n                // setCenterText(thisDonut);\r\n            }\r\n\r\n        };\r\n\r\n        // Define the tooltip\r\n        // TODO: Define it as a individual CLASS, in C9.Tooltip\r\n        self.tooltip = function() {\r\n            // First, remove all before hover div\r\n            self.body.selectAll('g.c9-custom-tooltip-container').remove();\r\n\r\n            // TODO: Add margin to tooltip configs\r\n            // Default: (100, 100) relative to mouse coordinate and chart margin transformation\r\n            var divOnHover = self.body.append('g')\r\n                                .attr('class', 'c9-custom-tooltip-container')\r\n                                .attr(\"transform\", function() { return 'translate(' + (d3.mouse(this)[0] - 100) +\",\"+ (d3.mouse(this)[1]- 100) + ')'; })\r\n                                .style('display', 'none')\r\n\r\n            var arc = d3.svg.arc()\r\n                    .outerRadius(self.outerRadius)\r\n                    .innerRadius(self.innerRadius);\r\n\r\n            // Rect Container\r\n            divOnHover\r\n                .append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .attr('fill', '#FEE5E2')\r\n                    .attr('stroke', '#FDCCC6')\r\n                    .attr('stroke-width', 2);\r\n            // First line\r\n            var text_1 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 10)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n            // Second line\r\n            var text_2 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 20)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n\r\n            var tooltipEventFactory = {\r\n\r\n                'mouseover': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block');\r\n                        \r\n                   let name = d.data.name || d.data.data.name,\r\n                       value = d.data.value || d.data.data.value;\r\n\r\n                    text_1.text('Name: ' + name);\r\n                    text_2.text('Value: ' + value);\r\n                },\r\n\r\n                'mouseout': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style('display', 'none');\r\n\r\n                }\r\n\r\n            };\r\n\r\n            return tooltipEventFactory;\r\n\r\n        };\r\n\r\n        self.arc = d3.svg.arc()\r\n                    .outerRadius(self.outerRadius)\r\n                    .innerRadius(self.innerRadius);\r\n\r\n        //we can sort data here\r\n        self.pie = d3.layout.pie()\r\n                    .sort(null)\r\n                    .value(function(d) { return d.value; });\r\n\r\n        //draw chart\r\n        var arcs = self.body\r\n                    .append('g')\r\n                        .attr('class', 'c9-chart c9-custom-arc-container')\r\n                        .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\r\n                        .selectAll('.c9-chart-donut.c9-custom-arc')\r\n                        .data(self.pie(self.dataTarget)).enter()\r\n                        .append('g')\r\n                            .attr('class', 'c9-chart-donut c9-custom-arc');\r\n\r\n        // Append main path contains donut\r\n        // TODO: add a unique class to allow Legend could find selected donut/pie\r\n        arcs.append('path')\r\n                .attr('class', 'c9-chart-donut c9-custom-path')\r\n                .attr('data-ref', function(d) { return d.data['data-ref']; })\r\n                .attr('d', self.arc)\r\n                .attr('fill', function(d, i) { return color(i); })\r\n                .attr('stroke', '#ffffff')\r\n                .attr('fill-opacity', '0.5')\r\n                .each(function(d) { self._currentData = d; }); \r\n                // Current data used for calculate interpolation \r\n                // between current arc vs disabled arc\r\n\r\n\r\n        // Append middle text display name\r\n        // if (self.showText) {\r\n        //     arcs.append('text')\r\n        //             .attr('class', 'c9-chart-donut c9-custom-text')\r\n        //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\r\n        //             .attr('dy', '.35em')\r\n        //             .attr('text-anchor', 'middle')\r\n        //             .text(function(d) { return d.data.name; });\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Donut Chart\r\n     */\r\n    draw() {\r\n\r\n        var self = this;\r\n        \r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.dataTarget);\r\n\r\n        // Draw legend\r\n        legend.draw();\r\n        legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\r\n\r\n        // Update interaction of this own chart\r\n        self.updateInteraction();\r\n\r\n    }\r\n\r\n    /**\r\n     * Select all path as type PATH in Donut Chart via its CLASS\r\n     */\r\n    selectAllPath() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                // .selectAll('g')\r\n                    .selectAll('path.c9-chart-donut.c9-custom-path');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllPath(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            selector.on(self._eventFactory);\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.DonutChart.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\n\r\nexport default class LineChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self    = this;\r\n        var config  = {\r\n            pointShow: false,\r\n            pointFill: \"#fb8072\",\r\n            pointStroke: \"#d26b5f\",\r\n            pointOpacity: 1.0,\r\n            pointRadius: 5,\r\n            pointHoverEnable: false,\r\n            interpolate: \"linear\" // refer: https://www.dashingd3js.com/svg-paths-and-d3js\r\n        };\r\n\r\n        self._pointShow         = options.pointShow            ||  config.pointShow;\r\n        self._pointRadius       = options.pointRadius          ||  config.pointRadius;\r\n        self._pointFill         = options.pointFill            ||  config.pointFill;\r\n        self._pointStroke       = options.pointStroke          ||  config.pointStroke;\r\n        self._pointOpacity      = options.pointOpacity         ||  config.pointOpacity;\r\n        self._pointHoverEnable  = options.pointHoverEnable    ||  config.pointHoverEnable;\r\n        self._interpolate       = options.interpolate           ||  config.interpolate;\r\n        self.body.type = \"line\";\r\n\r\n        var width   = self.width - self.margin.left - self.margin.right;\r\n        var height  = self.height - self.margin.top - self.margin.bottom;\r\n\r\n        var x = d3.scale.linear().range([0, width]);\r\n        var y = d3.scale.linear().range([height, 0]);\r\n\r\n        self._x = x;\r\n        self._y = y;\r\n\r\n        self.updateConfig();\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n\r\n    get pointShow() {\r\n        return this._pointShow;\r\n    }\r\n\r\n    get pointFill() {\r\n        return this._pointFill;\r\n    }\r\n\r\n    get pointStroke() {\r\n        return this._pointStroke;\r\n    }\r\n\r\n    get pointOpacity() {\r\n        return this._pointOpacity;\r\n    }\r\n\r\n    get pointRadius() {\r\n        return this._pointRadius;\r\n    }\r\n\r\n    get pointHoverEnable() {\r\n        return this._pointHoverEnable;\r\n    }\r\n\r\n    get interpolate() {\r\n        return this._interpolate;\r\n    }\r\n    \r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    get dataGroup() {\r\n        return this._dataGroup;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n\r\n    set pointShow(newPointShow) {\r\n        if (newPointShow) {\r\n            this._pointShow = newPointShow;\r\n        }\r\n    }\r\n\r\n    set pointFill(newPointFill) {\r\n        if (newPointFill) {\r\n            this._pointFill = newPointFill;\r\n        }\r\n    }\r\n\r\n    set pointStroke(newPointStroke) {\r\n        if (newPointStroke) {\r\n            this._pointStroke = newPointStroke;\r\n        }\r\n    }\r\n\r\n    set pointOpacity(newPointOpacity) {\r\n        if (newPointOpacity) {\r\n            this._pointOpacity = newPointOpacity;\r\n        }\r\n    }\r\n\r\n    set pointRadius(newPointRadius) {\r\n        if (newPointRadius) {\r\n            this._pointRadius = newPointRadius;\r\n        }\r\n    }\r\n\r\n    set pointHoverEnable(newPointHoverEnable) {\r\n        if (newPointHoverEnable) {\r\n            this._pointHoverEnable = newPointHoverEnable;\r\n        }\r\n    }\r\n\r\n    set interpolate(newInterpolate) {\r\n        if (newInterpolate) {\r\n            this._interpolate = newInterpolate;\r\n        }\r\n    }\r\n\r\n    set x(newX) {\r\n        if (newX) {\r\n            this._x = newX;\r\n        }\r\n    }\r\n\r\n    set y(newY) {\r\n        if (newY) {\r\n            this._y = newY;\r\n        }\r\n    }\r\n\r\n    set dataGroup(newDataGroup) {\r\n        if (newDataGroup) {\r\n            this._dataGroup = newDataGroup;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n    /**\r\n     * First init Line Chart\r\n     */\r\n    updateConfig() {\r\n        var self = this,\r\n            x = self._x,\r\n            y = self._y;\r\n\r\n        self._dataGroup = d3.nest()\r\n                        .key(function(d) { return d.Client; })\r\n                        .entries(self.data);\r\n\r\n        var dataGroup = self._dataGroup;\r\n\r\n        x.domain([d3.min(self.data, function(d) {\r\n                    return d.year;\r\n                }), d3.max(self.data, function(d) {\r\n                    return d.year;\r\n                })]);\r\n        y.domain([d3.min(self.data, function(d) {\r\n                    return d.sale;\r\n                }), d3.max(self.data, function(d) {\r\n                    return d.sale;\r\n                })]);\r\n\r\n        self.xAxis = d3.svg.axis()\r\n                        .scale(x);\r\n        self.yAxis = d3.svg.axis()\r\n                        .scale(y)\r\n                        .orient(\"left\");\r\n\r\n        var lineGen = d3.svg.line()\r\n                        .x(function(d) { return x(d.year); })\r\n                        .y(function(d) { return y(d.sale); })\r\n                        .interpolate(self.interpolate);\r\n\r\n        var _body        = self.body,\r\n            _colorRange = self.colorRange,\r\n            _pointShow  = self.pointShow,\r\n            _pointRadius= self.pointRadius,\r\n            _pointFill  = self.pointFill,\r\n            _pointStroke= self.pointStroke,\r\n            _pointOpacity= self.pointOpacity;\r\n\r\n        dataGroup.forEach(function(d,i) {\r\n            _body.append('path')\r\n                .attr('d', lineGen(d.values))\r\n                .attr('stroke', _colorRange(i))\r\n                .attr('stroke-width', 2)\r\n                .attr('id', 'line_'+d.key)\r\n                .attr('fill', 'none');\r\n\r\n            if (_pointShow) {\r\n                _body.selectAll(\"dot\")\r\n                    .data(d.values)\r\n                    .enter()\r\n                    .append(\"circle\")\r\n                    .attr('class', 'c9-chart-line c9-circle-custom')\r\n                    .attr(\"r\", _pointRadius)\r\n                    .attr(\"cx\", function(_d) { return x(_d.year); })\r\n                    .attr(\"cy\", function(_d) { return y(_d.sale); })\r\n                    .style(\"fill\", _pointFill) \r\n                    .style(\"stroke\", _pointStroke)\r\n                    .style(\"opacity\", _pointOpacity);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Line Chart\r\n     */\r\n    draw() {\r\n        var self = this;\r\n\r\n        var axis    = new Axis(self.options, self.body, self.data, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom, self.xAxis, self.yAxis);\r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.colorRange, self.data);\r\n\r\n        // Draw legend\r\n        legend.draw();\r\n\r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * Select all circle as type CIRCLE in Line Chart via its CLASS\r\n     */\r\n    selectAllCircle() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                .selectAll('circle.c9-chart-line.c9-circle-custom');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllCircle(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            // Define the div for the tooltip\r\n            // TODO: Allow user to add custom DIV, CLASS\r\n            // Make sure that: \r\n            // - Rect not overflow the bar, if not, hover effect will be messed\r\n            // -> So, just align the rect to right/left (x: 25) to avoid it\r\n            // -> And, the text will be align also\r\n            var div = self.body\r\n                        .append('g')\r\n                        .style('display', 'none');\r\n                        // .style('opacity', 0);\r\n                // Rect Container\r\n                div.append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .style('fill', '#FEE5E2')\r\n                    .style('stroke', '#FDCCC6')\r\n                    .style('stroke-width', 2);\r\n                // First line\r\n                var text_1 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 10)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n                // Second line\r\n                var text_2 = div.append('text')\r\n                    .attr('class', 'c9-custom-tooltip-label')\r\n                    .attr('x', 30)\r\n                    .attr('y', 20)\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('font-size', '10px');\r\n\r\n            selector\r\n                .on(\"mouseover\", function(d) {\r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block')\r\n                        .attr(\"transform\", \"translate(\" + self.x(d.year) + \",\" + self.y(d.sale) + \")\");\r\n\r\n                    text_1.text('Name: ' + d.year);\r\n                    text_2.text('Value: ' + d.sale);\r\n                })\r\n                .on(\"mouseout\", function(d) { \r\n                    div.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style(\"display\", 'none');\r\n                });\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\r\n// Backup - LOL\r\n// var _currentDataY = this.data;\r\n//         _currentDataY.forEach(function(_currentValue,_index,_arr) {\r\n//                                     _currentDataY[_index].coordinate.sort(function(a,b) {\r\n//                                         return (a.y > b.y) ? 1 : ((b.y > a.y) ? -1 : 0);\r\n//                                     });\r\n//                                 });\r\n//         this.sortedDataY         = _currentDataY;\r\n\r\n//         // Get maximum value of coordinate {x, y}\r\n//         var tempMaxY = [];\r\n\r\n//         for (var i=0; i<this.sortedDataY.length; i++) {\r\n//             tempMaxY[i] = this.sortedDataY[i].coordinate[this.sortedDataY[i].coordinate.length - 1].y;\r\n//         }\r\n\r\n//         var _maxY = Math.max(...tempMaxY);\r\n\r\n\r\n//         var _currentDataX = this.data;\r\n//         _currentDataX.forEach(function(currentValue,index,arr) {\r\n//                                     _currentDataX[index].coordinate.sort(function(a,b) {\r\n//                                         return (a.x > b.x) ? 1 : ((b.x > a.x) ? -1 : 0);\r\n//                                     });\r\n//                                 });\r\n//         this.sortedDataX         = _currentDataX;\r\n//         var tempMaxX = [];\r\n//         for (var i=0; i<this.sortedDataX.length; i++) {\r\n//             tempMaxX[i] = this.sortedDataX[i].coordinate[this.sortedDataX[i].coordinate.length - 1].x;\r\n//         }\r\n//         var _maxX = Math.max(...tempMaxX);\r\n\r\n//         // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\r\n//         var width   = this.width - this.margin.left - this.margin.right;\r\n//         var height  = this.height - this.margin.top - this.margin.bottom;\r\n\r\n//         var x = d3.scale.linear().range([0, width]);\r\n//         var y = d3.scale.linear().range([height, 0]);\r\n\r\n//         x.domain([_maxX, 0]);\r\n//         y.domain([_maxY, 0]);\r\n\r\n//         var lineFunc = d3.svg.line()\r\n//             .x(function(d, i) { return x(d.x); })\r\n//             .y(function(d, i) { return y(d.y); })\r\n//             .interpolate(\"linear\");\r\n\r\n//         // this.body.selectAll('g')\r\n//         //         .data(this.sortedDataX)\r\n//         //         .enter()\r\n//         //         .append('path')\r\n//         //         .attr('class', 'line')\r\n//         //         .attr('d', function(d){\r\n//         //             return lineFunc(d.coordinate);\r\n//         //         });\r\n//         this.body.selectAll('dot')\r\n//                 .data(this.sortedDataX)\r\n//                 .selectAll('dot')\r\n//                 .data(function(d,i) {return d;})\r\n//                 .enter()\r\n//                 .append(\"circle\")\r\n//                 .attr(\"r\", 3.5)\r\n//                 .attr(\"cx\", function(d, i) { console.log(d, i); return x(d.coordinate[i].x); })\r\n//                 .attr(\"cy\", function(d, i) { console.log(d, i); return y(d.coordinate[i].y); });\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.LineChart.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class PieChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self = this;\r\n        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\r\n        var config = {\r\n            radius: R,\r\n            // innerRadius: R > 80 ? R - 80 : R - 40,\r\n            showText: true // show/hide text on middle or each pie\r\n        };\r\n\r\n        self._radius    = options.radius || config.radius;\r\n        // self._innerRadius    = options.innerRadius || config.innerRadius;\r\n        self._showText  = options.showText || config.showText;\r\n        self.body.type  = 'pie';\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget     = da.getDataTarget(\"pie\");\r\n\r\n        self.updateConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n\r\n    // get innerRadius() {\r\n    //     return this._innerRadius;\r\n    // }\r\n\r\n    get showText() {\r\n        return this._showText;\r\n    }\r\n\r\n    get eventFactory() {\r\n        return this._eventFactory;\r\n    }\r\n\r\n    get pathAnim() {\r\n        return this._pathAnim;\r\n    }\r\n\r\n    get tooltip() {\r\n        return this._tooltip;\r\n    }\r\n\r\n    get pie() {\r\n        return this._pie;\r\n    }\r\n\r\n    get arc() {\r\n        return this._arc;\r\n    }\r\n\r\n    get currentData() {\r\n        return this._currentData;\r\n    }\r\n\r\n    get chartType() {\r\n        return this._body.type;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set radius(newradius) {\r\n        if (newradius) {\r\n            this._radius = newradius;\r\n        }\r\n    }\r\n\r\n    // set innerRadius(newInnerRadius) {\r\n    //     if (newInnerRadius) {\r\n    //         this._innerRadius = newInnerRadius;\r\n    //     }\r\n    // }\r\n\r\n    set showText(newShowText) {\r\n        if (newShowText) {\r\n            this._showText = newShowText;\r\n        }\r\n    }\r\n\r\n    set eventFactory(newEventFactory) {\r\n        if (newEventFactory) {\r\n            this._eventFactory = newEventFactory;\r\n        }\r\n    }\r\n\r\n    set pathAnim(newPathAnim) {\r\n        if (newPathAnim) {\r\n            this._pathAnim = newPathAnim;\r\n        }\r\n    }\r\n\r\n    set tooltip(newTooltip) {\r\n        if (newTooltip) {\r\n            this._tooltip = newTooltip;\r\n        }\r\n    }\r\n\r\n    set pie(newPie) {\r\n        if (newPie) {\r\n            this._pie = newPie;\r\n        }\r\n    }\r\n\r\n    set arc(newArc) {\r\n        if (newArc) {\r\n            this._arc = newArc;\r\n        }\r\n    }\r\n\r\n    set currentData(newCurrentData) {\r\n        if (newCurrentData) {\r\n            this._currentData = newCurrentData;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Update Donut Chart Config\r\n     */\r\n    updateConfig() {\r\n        var self = this;\r\n\r\n        // chartInnerAfter, chartOuterAfter define easing radius of pie chart during animation\r\n        // TODO: Add configs allow users to define these radius\r\n        var width   = self.width - self.margin.left - self.margin.right,\r\n            height  = self.height - self.margin.top - self.margin.bottom,\r\n            color   = self.colorRange,\r\n            chartInnerBefore = 0,\r\n            chartOuterBefore = self.radius,\r\n            chartInnerAfter = 0,\r\n            chartOuterAfter = self.radius * 1.2;\r\n\r\n        var hoverOptions        = self.hover.options,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        // Define Animations for paths\r\n        self.pathAnim = function(path, dir) {\r\n            switch(dir) {\r\n\r\n                case 'mouseover':\r\n                    path.transition()\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerAfter)\r\n                            .outerRadius(chartOuterAfter)\r\n                        )\r\n                        // .style('stroke', '#FFFFF3')\r\n                        .attr('fill-opacity', '1.0');\r\n                    break;\r\n                    \r\n                case 'mouseout':\r\n                    path.transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        )\r\n                        // .style('stroke', '#ffffff')\r\n                        .attr('fill-opacity', '0.5');\r\n                    break;\r\n            }\r\n        };\r\n\r\n        // Main Event Dispatch for paths in pie chart\r\n        self.eventFactory = {\r\n\r\n            'mouseover': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseover');\r\n                self.tooltip().mouseover(d);\r\n\r\n                // var thisDonut = self.body..select('.type' + j);\r\n                // thisDonut.select('.value').text(function(pie_d) {\r\n                //     return d.data.val.toFixed(1) + pie_d.unit;\r\n                // });\r\n                // thisDonut.select('.percentage').text(function(pie_d) {\r\n                //     return (d.data.val/pie_d.total*100).toFixed(2) + '%';\r\n                // });\r\n            },\r\n            \r\n            'mouseout': function(d, i, j) {\r\n                self.pathAnim(d3.select(this), 'mouseout');\r\n                self.tooltip().mouseout(d);\r\n\r\n                // var thisDonut = charts.select('.type' + j);\r\n                // setCenterText(thisDonut);\r\n            }\r\n\r\n        };\r\n\r\n        // Define the tooltip\r\n        // TODO: Define it as a individual CLASS, in C9.Tooltip\r\n        self.tooltip = function() {\r\n            // First, remove all before hover div\r\n            self.body.selectAll('g.c9-custom-tooltip-container').remove();\r\n\r\n            // TODO: Add margin to tooltip configs\r\n            // Default: (100, 100) relative to mouse coordinate and chart margin transformation\r\n            var divOnHover = self.body.append('g')\r\n                                .attr('class', 'c9-custom-tooltip-container')\r\n                                .attr(\"transform\", function() { return 'translate(' + (d3.mouse(this)[0] - 100) +\",\"+ (d3.mouse(this)[1]- 100) + ')'; })\r\n                                .style('display', 'none')\r\n\r\n            var arc = d3.svg.arc()\r\n                    .innerRadius(0)\r\n                    .outerRadius(self.radius);\r\n\r\n            // Rect Container\r\n            divOnHover\r\n                .append('rect')\r\n                    .attr('class', 'c9-custom-tooltip-box')\r\n                    .attr('x', 25)\r\n                    .attr('rx', 5)\r\n                    .attr('ry', 5)\r\n                    .style('position', 'absolute')\r\n                    .style('width', '100px')\r\n                    .style('height', '50px')\r\n                    .style('fill', '#FEE5E2')\r\n                    .style('stroke', '#FDCCC6')\r\n                    .style('stroke-width', 2);\r\n            // First line\r\n            var text_1 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 10)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n            // Second line\r\n            var text_2 = divOnHover\r\n                            .append('text')\r\n                                .attr('class', 'c9-custom-tooltip-label')\r\n                                .attr('x', 30)\r\n                                .attr('y', 20)\r\n                                .style('font-family', 'sans-serif')\r\n                                .style('font-size', '10px');\r\n\r\n            var tooltipEventFactory = {\r\n\r\n                'mouseover': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOver.fadeIn)\r\n                        .style(\"display\", 'block');\r\n\r\n                    let name = d.data.name || d.data.data.name,\r\n                        value = d.data.value || d.data.data.value;\r\n                        \r\n                    text_1.text('Name: ' + name);\r\n                    text_2.text('Value: ' + value);\r\n                },\r\n\r\n                'mouseout': function(d) {\r\n                    divOnHover.transition()\r\n                        .duration(hoverOptions.onMouseOut.fadeOut)      \r\n                        .style('display', 'none');\r\n\r\n                }\r\n\r\n            };\r\n\r\n            return tooltipEventFactory;\r\n\r\n        };\r\n\r\n        self.arc = d3.svg.arc()\r\n                    .innerRadius(0)\r\n                    .outerRadius(self.radius);\r\n\r\n        //we can sort data here\r\n        self.pie = d3.layout.pie()\r\n                    .sort(null)\r\n                    .value(function(d) { return d.value; });\r\n\r\n        //draw chart\r\n        var arcs = self.body\r\n                    .append('g')\r\n                        .attr('class', 'c9-chart c9-custom-arc-container')\r\n                        .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\r\n                        .selectAll('.c9-chart-pie.c9-custom-arc')\r\n                        .data(self.pie(self.dataTarget)).enter()\r\n                        .append('g')\r\n                            .attr('class', 'c9-chart-pie c9-custom-arc');\r\n\r\n        // Append main path contains pie\r\n        arcs.append('path')\r\n                .attr('class', 'c9-chart-pie c9-custom-path')\r\n                .attr('data-ref', function(d) { return d.data['data-ref']; })\r\n                .attr('d', self.arc)\r\n                .attr('fill', function(d, i) { return color(i); })\r\n                .attr('stroke', '#ffffff')\r\n                .attr('fill-opacity', '0.5')\r\n                .each(function(d) { self._currentData = d; }); \r\n                // Current data used for calculate interpolation \r\n                // between current arc vs disabled arc\r\n\r\n\r\n        // Append middle text display name\r\n        // if (self.showText) {\r\n        //     arcs.append('text')\r\n        //             .attr('class', 'c9-chart-pie c9-custom-text')\r\n        //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\r\n        //             .attr('dy', '.35em')\r\n        //             .attr('text-anchor', 'middle')\r\n        //             .text(function(d) { return d.data.name; });\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Donut Chart\r\n     */\r\n    draw() {\r\n\r\n        var self = this;\r\n        \r\n        var title   = new Title(self.options, self.body, self.width, self.height, self.margin);\r\n        var legend  = new Legend(self.options, self.body, self.dataTarget);\r\n\r\n        // Draw legend\r\n        legend.draw();\r\n        legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\r\n\r\n        // Update interaction of this own chart\r\n        self.updateInteraction();\r\n\r\n    }\r\n\r\n    /**\r\n     * Select all path as type PATH in Donut Chart via its CLASS\r\n     */\r\n    selectAllPath() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                // .selectAll('g')\r\n                    .selectAll('path.c9-chart-pie.c9-custom-path');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllPath(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback;\r\n\r\n        if (hoverEnable) {\r\n            selector.on(self.eventFactory);\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.PieChart.js\n **/","import Chart from './C9.Chart';\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Helper from '../helper/C9.Helper';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class TimeLine extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n        var self = this;\r\n\r\n        var config = {\r\n            rowSeparator: \"rgb(154, 154, 154)\",\r\n            backgroundColor: null,\r\n            starting: 0,\r\n            ending: 0,\r\n            stack: false, //test\r\n            // rotateTicks: false,\r\n            itemHeight: 25,\r\n            itemMargin: 20,\r\n            labelMargin: 20,\r\n            striped: null\r\n        };\r\n\r\n        self.body.type        = \"timeline\";\r\n        self._stack             = options.stack || config.stack;\r\n        self._starting          = options.starting || config.starting;\r\n        self._ending            = options.ending || config.ending;\r\n        self._rowSeparator      = options.rowSeparator || config.rowSeparator;\r\n        self._backgroundColor   = options.backgroundColor || config.backgroundColor;\r\n        self._itemHeight        = options.itemHeight || config.itemHeight;\r\n        self._itemMargin        = options.itemMargin || config.itemMargin;\r\n        self._labelMargin       = options.labelMargin || config.labelMargin;\r\n        self._maxStack          = 1;\r\n        self._striped           = options.striped || config.striped;\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption);\r\n        self.dataTarget = da.getDataTarget(\"timeline\");\r\n\r\n        self.initTimelineConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get stack() {\r\n        return this._stack;\r\n    }\r\n\r\n    get backgroundColor() {\r\n        return this._backgroundColor;\r\n    }\r\n\r\n    get rowSeparator() {\r\n        return this._rowSeparator;\r\n    }\r\n\r\n    get starting() {\r\n        return this._starting;\r\n    }\r\n\r\n    get ending() {\r\n        return this._ending;\r\n    }\r\n\r\n    get itemHeight() {\r\n        return this._itemHeight;\r\n    }\r\n\r\n    get itemMargin() {\r\n        return this._itemMargin;\r\n    }\r\n\r\n    get labelMargin() {\r\n        return this._labelMargin;\r\n    }\r\n\r\n    get maxStack() {\r\n        return this._maxStack;\r\n    }\r\n\r\n    get striped() {\r\n        return this._striped;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set stack(newStack) {\r\n        if (newStack) {\r\n            this._stacked = newStack;\r\n        }\r\n    }\r\n\r\n    set backgroundColor(newBackgroundColor) {\r\n        if (newBackgroundColor) {\r\n            this._backgroundColor = newBackgroundColor;\r\n        }\r\n    }\r\n\r\n    set rowSeparator(newRowSeparator) {\r\n        if (newRowSeparator) {\r\n            this._rowSeparator = newRowSeparator;\r\n        }\r\n    }\r\n\r\n    set starting(newStarting) {\r\n        if (newStarting) {\r\n            this._starting = newStarting;\r\n        }\r\n    }\r\n\r\n    set ending(newEnding) {\r\n        if (newEnding) {\r\n            this._ending = newEnding;\r\n        }\r\n    }\r\n\r\n    set itemHeight(newItemHeight) {\r\n        if (newItemHeight) {\r\n            this._itemHeight = newItemHeight;\r\n        }\r\n    }\r\n\r\n    set itemMargin(newItemMargin) {\r\n        if (newItemMargin) {\r\n            this._itemMargin = newItemMargin;\r\n        }\r\n    }\r\n\r\n    set labelMargin(newLabelMargin) {\r\n        if (newLabelMargin) {\r\n            this._labelMargin = newLabelMargin;\r\n        }\r\n    }\r\n\r\n    set maxStack(newMaxStack) {\r\n        if (newMaxStack) {\r\n            this._maxStack = newMaxStack;\r\n        }\r\n    }\r\n\r\n    set striped(newStriped) {\r\n        if (newStriped) {\r\n            this._striped = newStriped;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n    initTimelineConfig() {\r\n        var self = this;\r\n        var color = self.colorRange;\r\n        var stackList = {},\r\n            maxStack = 0,\r\n            minTime = 0,\r\n            maxTime = 0,\r\n            width = self.width - self.margin.left - self.margin.right,\r\n            height = self.height - self.margin.top - self.margin.bottom;\r\n\r\n        // count number of stack and calculate min time, max time from data\r\n        if (self.stack || self.ending === 0 || self.starting === 0) {\r\n            \r\n            self.dataTarget.forEach(function (datum, index) {\r\n\r\n                if (self.stack && Object.keys(stackList).indexOf(index) == -1) {\r\n                    stackList[index] = maxStack;\r\n                    maxStack++;\r\n                }\r\n\r\n                datum.value.forEach(function (time, i) {\r\n                    if(self.starting === 0)\r\n                        if (time.start < minTime || minTime === 0)\r\n                            minTime = time.start;\r\n                    if(self.ending === 0) {\r\n                        if (time.start > maxTime)\r\n                            maxTime = time.start;\r\n                        if (time.end > maxTime)\r\n                            maxTime = time.end;\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (self.ending === 0) {\r\n              self.ending = maxTime;\r\n            }\r\n            if (self.starting === 0) {\r\n              self.starting = minTime;\r\n            }\r\n        }\r\n\r\n        self.maxStack = maxStack;\r\n        var scale = width / (self.ending - self.starting);\r\n\r\n        //draw border\r\n        self.body.append(\"rect\")\r\n            .attr(\"class\", \"timeline-border-bar\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"width\", width)\r\n            .attr(\"y\", 0 - self.itemMargin / 2)\r\n            .attr(\"height\", (self.itemHeight + self.itemMargin) * self.dataTarget.length)\r\n            .attr(\"stroke\", \"rgb(154, 154, 154)\")\r\n            .attr(\"stroke-width\", 2)\r\n            .attr(\"fill\", \"none\");\r\n\r\n        self.dataTarget.forEach( function(datum, index){\r\n            var data = datum.value;\r\n\r\n            //draw background\r\n            if (self.backgroundColor) { \r\n                var barYAxis = ((self.itemHeight + self.itemMargin) * stackList[index]);\r\n                self.body.selectAll(\"g\")\r\n                    .data(data).enter()\r\n                    .insert(\"rect\")\r\n                    .attr(\"class\", \"timeline-background-bar\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"width\", width)\r\n                    .attr(\"y\", barYAxis - self.itemMargin / 2)\r\n                    .attr(\"height\", self.itemHeight + self.itemMargin)\r\n                    .attr(\"fill\", Helper.isArray(self.backgroundColor) ? self.backgroundColor[index % (self.maxStack - 1)] : self.backgroundColor);\r\n            }\r\n\r\n            if (self.striped) { \r\n                var barYAxis = ((self.itemHeight + self.itemMargin) * stackList[index]);\r\n                self.body.selectAll(\"g\")\r\n                    .data(data).enter()\r\n                    .insert(\"rect\")\r\n                    .attr(\"class\", \"timeline-background-bar\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"width\", width)\r\n                    .attr(\"y\", barYAxis - self.itemMargin / 2)\r\n                    .attr(\"height\", self.itemHeight + self.itemMargin)\r\n                    .attr(\"fill\", index % 2 ? \"rgb(255, 255, 255)\" : \"rgb(230, 230, 230)\");\r\n            }\r\n\r\n            //draw item\r\n            self.body.selectAll(\"g\")\r\n                .data(data).enter()\r\n                .append(function (d, i) {\r\n                    return document.createElementNS(d3.ns.prefix.svg, d.end ? \"rect\" : \"circle\");\r\n                })\r\n                .attr(\"x\", getXPos)\r\n                .attr(\"y\", getStackPosition)\r\n                .attr(\"width\", function (d, i) {\r\n                    return (d.end - d.start) * scale;\r\n                })\r\n                .attr(\"cy\", function (d, i) {\r\n                    return getStackPosition(d, i) + self.itemHeight / 2;\r\n                })\r\n                .attr(\"cx\", getXPos)\r\n                .attr(\"r\", self.itemHeight / 2)\r\n                .attr(\"height\", self.itemHeight)\r\n                .style(\"fill\", color(index));\r\n\r\n            //draw label inside item\r\n            // self.body.selectAll(\"g\")\r\n            //     .data(data).enter()\r\n            //     .append(\"text\")\r\n            //     .attr(\"x\", getXTextPos)\r\n            //     .attr(\"y\", getStackTextPosition)\r\n            //     .text(function(d) {\r\n            //       return d.name;\r\n            //     });\r\n\r\n            if (self.rowSeparator && index < self.maxStack - 1) {\r\n                var lineYAxis = ( self.itemHeight + self.itemMargin / 2 + (self.itemHeight + self.itemMargin) * stackList[index]);\r\n                self.body.append(\"svg:line\")\r\n                  .attr(\"class\", \"timeline-row-separator\")\r\n                  .attr(\"x1\", 0)\r\n                  .attr(\"x2\", width)\r\n                  .attr(\"y1\", lineYAxis)\r\n                  .attr(\"y2\", lineYAxis)\r\n                  .attr(\"stroke-width\", 3)\r\n                  .attr(\"stroke\", Helper.isArray(self.rowSeparator) ? self.rowSeparator[index % (self.maxStack - 1)] : self.rowSeparator);\r\n            }\r\n\r\n            //draw the label left side item\r\n            if (!Helper.isEmpty(datum.name) && datum.name != \"\") { \r\n                var rowsDown = self.margin.top + (self.itemHeight + self.itemMargin) * (stackList[index] === undefined ? 0 : stackList[index]) + self.itemHeight * 0.75;\r\n\r\n                d3.select(self.body[0][0].parentNode).append(\"text\")\r\n                    .attr(\"class\", \"timeline-label\")\r\n                    .attr(\"transform\", \"translate(\" + self.labelMargin + \",\" + rowsDown + \")\")\r\n                    .text(datum.name);\r\n            }\r\n            //draw icon\r\n            else if (!Helper.isEmpty(datum.icon) && datum.icon != \"\") {\r\n                d3.select(self.body[0][0].parentNode).append(\"image\")\r\n                    .attr(\"class\", \"timeline-label\")\r\n                    .attr(\"transform\", \"translate(\"+ self.labelMargin +\",\"+ (self.margin.top + (self.itemHeight + self.itemMargin) * stackList[index])+\")\")\r\n                    .attr(\"xlink:href\", datum.icon)\r\n                    .attr(\"width\", self.itemHeight)\r\n                    .attr(\"height\", self.itemHeight);\r\n            }\r\n\r\n            function getStackPosition(d, i) {\r\n                if (self.stack) {\r\n                    return (self.itemHeight + self.itemMargin) * stackList[index];\r\n                }\r\n                return 0;\r\n            }\r\n            function getStackTextPosition(d, i) {\r\n                if (self.stack) {\r\n                    return (self.itemHeight + self.itemMargin) * stackList[index] + self.itemHeight * 0.75;\r\n                }\r\n                return self.itemHeight * 0.75;\r\n            }\r\n        });\r\n\r\n        function getXPos(d, i) {\r\n            return (d.start - self.starting) * scale;\r\n        }\r\n\r\n        function getXTextPos(d, i) {\r\n            return (d.start - self.starting) * scale + 5;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.options.starting = this.starting;\r\n        this.options.ending = this.ending;\r\n        // var axis    = new Axis(this.options, this.body, this.dataTarget, this.width - this.margin.left - this.margin.right, (this.itemHeight + this.itemMargin) * this.maxStack, null, null);\r\n        var title   = new Title(this.options, this.body, this.width, this.height, this.margin);    \r\n        var legend  = new Legend(this.options, this.body, this.colorRange, this.dataTarget);\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    \r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.TimeLine.js\n **/","'use strict';\r\n\r\nexport default class Tooltip {\r\n    constructor(options, body, data) {\r\n        var config = {\r\n            show: true,\r\n            position: top,\r\n            offset: [-10, 0],\r\n            class: 'd3-tip',\r\n        };\r\n\r\n        this._show      = options.show || config.show;\r\n        this._position  = options.position || config.position;\r\n        this._offset    = options.offset || config.offset;\r\n        this._class     = options.class || config.class;\r\n\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get show() {\r\n        return this._show;\r\n    }\r\n\r\n\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set show(newShow) {\r\n        if (newShow) {\r\n            this._show = newShow;\r\n        }\r\n    }\r\n\r\n\r\n    /*=====  End of Setter  ======*/\r\n\r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Tooltip.js\n **/","export default class Map {\r\n    constructor(options) {\r\n        var self    = this;\r\n        var config  = {\r\n            // container\r\n            id: \"body\",\r\n            \r\n            // Layers:\r\n            // BingMaps, OSM, Raster, Tile, TileImage, Vector, VectorTile,...\r\n            // REF: http://openlayers.org/en/latest/apidoc/ol.source.html?stableonly=true\r\n            layers: {\r\n                type: \"Tile\",\r\n                source: {\r\n                    name: \"OSM\"\r\n                }\r\n            }, \r\n            view: {\r\n                lat: 0,\r\n                lon: 0,\r\n                zoom: 2\r\n            }\r\n        };\r\n\r\n        self._id        = options.id        || config.id;\r\n        self._data      = options.data      || config.data;\r\n        self._view      = options.view      || config.view;\r\n        self._markers   = options.markers   || [];\r\n        self._options   = options;\r\n        self._layers    = options.layers    || config.layers;\r\n        self.initMapConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get view() {\r\n        return this._view;\r\n    }\r\n\r\n    get markers() {\r\n        return this._markers;\r\n    }\r\n\r\n    get layers() {\r\n        return this._layers;\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n    \r\n    \r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n\r\n    set id(newId) {\r\n        if (newId) {\r\n            this._id = newId;\r\n        }\r\n    }\r\n\r\n    set height(newHeight) {\r\n        if (newHeight) {\r\n            this._height = newHeight;    \r\n        }\r\n    }\r\n\r\n    set width(newWidth) {\r\n        if (newWidth) {\r\n            this._width = newWidth;\r\n        }\r\n    }\r\n\r\n    set view(newView) {\r\n        if (newView) {\r\n            this._view = newView;\r\n        }\r\n    }\r\n\r\n    set markers(newMarkers) {\r\n        if (newMarkers) {\r\n            this._markers = newMarkers;\r\n        }\r\n    }\r\n\r\n    set layers(newLayers) {\r\n        if (newLayers) {\r\n            this._layers = newLayers;\r\n        }\r\n    }\r\n\r\n    set data(newData) {\r\n        if (newData) {\r\n            this._data = newData;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    \r\n    initMapConfig() {\r\n        var self = this;\r\n\r\n        //c9Layers contain all layers\r\n        self.c9Layers = [];\r\n        //c9Markers contain all markers\r\n        self.c9Markers = new ol.source.Vector({});\r\n\r\n        //init all thing relating to user's data\r\n\r\n        //layer\r\n        self.initLayer();\r\n        \r\n        //quick markers\r\n        self.initMarker();\r\n    }\r\n\r\n    draw() {\r\n        var self = this;\r\n        self.c9View = new ol.View({\r\n            center: ol.proj.fromLonLat([self.view.lon, self.view.lat]),\r\n            zoom: self.view.zoom > 2 ? self.view.zoom : 2,\r\n            minZoom: 2,\r\n        });\r\n        self.c9Map = new ol.Map({\r\n            target: self.id,\r\n            layers: self.c9Layers,\r\n            view: self.c9View,\r\n            interactions : ol.interaction.defaults({doubleClickZoom :false})\r\n        });\r\n\r\n        //TODO - Create a function to gather all these event function\r\n        self.updateInteraction();\r\n\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /**\r\n     * Create layer\r\n     * @param  {String} type of layer\r\n     * @param  {source} source data defined by C9\r\n     */\r\n    createLayer(type, source = undefined){\r\n        var self = this;\r\n        var layer = new ol.layer[type];\r\n        layer.setSource(self.setupSource(source));\r\n        self.c9Layers.push(layer);\r\n    }\r\n\r\n    /**\r\n     * Init Layer base on first user's data\r\n     */\r\n    initLayer() {\r\n        var self = this;\r\n        var layers = self.layers;\r\n\r\n        if (layers instanceof Array) {\r\n            layers.forEach(function(l, i) {\r\n                self.createLayer(l.type, l.source);\r\n            })\r\n        }\r\n        else {\r\n            self.createLayer(layers.type, layers.source);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create marker style\r\n     * @param  {String} image source\r\n     * @param  {Number} scale\r\n     * @return {ol.style.Style} return marker style\r\n     */\r\n    createMarkerStyle(imgSrc, scale){\r\n        return new ol.style.Style({\r\n            image: new ol.style.Icon({\r\n                anchor: [0.5, 1], //middle-width and bottom-height of image\r\n                src: imgSrc,\r\n                scale: scale\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create marker\r\n     * @param  {Number} latitude of marker\r\n     * @param  {Number} longitude of marker\r\n     * @param  {String} image source (support for both local and net)\r\n     * @param  {Number} scale image if its size is too large - default = 1\r\n     */\r\n    createMarker(lat, lon, imgSrc = 'http://s21.postimg.org/blklb8scn/marker_icon.png', scale = 1){\r\n        var self = this;\r\n\r\n        var marker = new ol.Feature({\r\n            type: 'c9GeoMarker',\r\n            geometry: new ol.geom.Point(ol.proj.fromLonLat([lon, lat]))\r\n        });\r\n        marker.setStyle(self.createMarkerStyle(imgSrc, scale));\r\n\r\n        //add this marker to marker list (c9Markers)\r\n        self.c9Markers.addFeature(marker);\r\n    }\r\n\r\n    /**\r\n     * marker first set up\r\n     */\r\n    initMarker() {\r\n        var self = this;\r\n        //data\r\n        var markers = self.markers;\r\n        //add marker layer to layer list (c9Layers)\r\n        self.c9Layers.push(new ol.layer.Vector({\r\n            source: self.c9Markers\r\n        }));\r\n\r\n        if (markers.length === 0) return;\r\n\r\n        if (markers instanceof Array) {\r\n            markers.forEach(function(m, i) {\r\n                self.createMarker(m.lat, m.lon, m.img, m.scale);\r\n            });\r\n        }\r\n        else {\r\n            self.createMarker(markers.lat, markers.lon, markers.img, markers.scale);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setup source for layer\r\n     * @param  {Object} source data style defined by c9\r\n     * @return {String} return source (ol.source)\r\n     */\r\n    setupSource(s){\r\n        var source = undefined;\r\n        switch (s.name) {\r\n            case 'BingMaps':\r\n                source = new ol.source.BingMaps({\r\n                    key: s.key,\r\n                    imagerySet: s.imagerySet || 'Road'\r\n                });\r\n                break;\r\n            case 'Stamen':\r\n                source = new ol.source.Stamen({\r\n                    layer: s.layer || 'watercolor'\r\n                });\r\n                break;\r\n            /********** TileJSON require ol >= v3.8.2 **********/\r\n            case 'TileJSON':\r\n                source = new ol.source.TileJSON({\r\n                    url: s.url,\r\n                    crossOrigin: s.crossOrigin || 'anonymous'\r\n                });\r\n                break;\r\n            case 'TileArcGISRest':\r\n                source = new ol.source.TileArcGISRest({\r\n                    url: s.url\r\n                });\r\n                break;\r\n            case 'Vector':\r\n                source = new ol.source.Vector({\r\n                    url: s.url,\r\n                    format: s.format === undefined ? null : new ol.format[s.format]({\r\n                        extractStyles: s.extractStyles || false\r\n                    })\r\n                });\r\n                break;\r\n            case 'Cluster':\r\n                source = new ol.source.Cluster({\r\n                    distance: s.distance || 20,\r\n                    source: this.setupSource(s.source)\r\n                });\r\n                break;\r\n            case 'ImageVector':\r\n                source = new ol.source.ImageVector({\r\n                    source: this.setupSource(s.source)\r\n                });\r\n                break;\r\n            default: \r\n                source = new ol.source.OSM();\r\n                break;\r\n\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Create marker's flash effect\r\n     * @param  {ol.Feature}\r\n     */\r\n    createMarkerEffect(feature){\r\n        var self = this;\r\n        var duration = 3000;\r\n        var start = new Date().getTime();\r\n        var listenerKey;\r\n\r\n        function animate(event) {\r\n            var vectorContext = event.vectorContext;\r\n            var frameState = event.frameState;\r\n            var flashGeom = feature.getGeometry().clone();\r\n            var elapsed = frameState.time - start;\r\n            var elapsedRatio = elapsed / duration;\r\n            // radius will be 5 at start and 30 at end.\r\n            var radius = ol.easing.easeOut(elapsedRatio) * 25 + 5;\r\n            var opacity = ol.easing.easeOut(1 - elapsedRatio);\r\n\r\n            var style = new ol.style.Style({\r\n                image: new ol.style.Circle({\r\n                    radius: radius,\r\n                    snapToPixel: false,\r\n                    stroke: new ol.style.Stroke({\r\n                        color: 'rgba(255, 0, 0, ' + opacity + ')',\r\n                        width: 0.25 + opacity\r\n                    })\r\n                })\r\n            });\r\n\r\n            vectorContext.setStyle(style);\r\n            vectorContext.drawGeometry(flashGeom);\r\n            if (elapsed > duration) {\r\n                ol.Observable.unByKey(listenerKey);\r\n                return;\r\n            }\r\n            // tell OL3 to continue postcompose animation\r\n            self.c9Map.render();\r\n        }\r\n        listenerKey = self.c9Map.on('postcompose', animate);\r\n    }\r\n\r\n    updateInteraction(){\r\n        var self = this;\r\n        const LEFT_KEY = 37, RIGHT_KEY = 39, DURATION = 1000, LOAD_MAP_DELAY = 500;\r\n\r\n        var getCoordinatesLonLat = function(f) {\r\n            return ol.proj.transform(f.getGeometry().getCoordinates(), 'EPSG:3857', 'EPSG:4326');\r\n        }\r\n        var getCoordinates = function(f) {\r\n            return f.getGeometry().getCoordinates();\r\n        }\r\n        var transformCoordinates = function(c) {\r\n            return ol.proj.transform(c, 'EPSG:3857', 'EPSG:4326');\r\n        }\r\n        var panAnimation = function(f){\r\n            var pan = ol.animation.pan({\r\n                duration: DURATION,\r\n                source: (self.c9View.getCenter())\r\n            });\r\n            self.c9Map.beforeRender(pan);\r\n            self.c9View.setCenter(getCoordinates(f));\r\n        }\r\n        /**\r\n         * Caculate distance between marker and center view, plus direction compare with center\r\n         * @param  {ol.Feature}\r\n         * @return {[Number, Boolean]} Array of distance value and direction value (left if true, right if false)\r\n         */\r\n        var distanceAndDirection = function(f) {\r\n            var center = transformCoordinates(self.c9View.getCenter());\r\n            var fCoordinates = getCoordinatesLonLat(f);\r\n            return [Math.sqrt(Math.pow(fCoordinates[0] - center[0], 2) + Math.pow(fCoordinates[1] - center[1], 2)), (fCoordinates[0] - center[0]) <= 0];\r\n        }\r\n        //register pointer move event to show cursor as pointer if user hover on markers\r\n        self.c9Map.on('pointermove', function(evt) {\r\n            self.c9Map.getTargetElement().style.cursor = self.c9Map.hasFeatureAtPixel(evt.pixel) ? 'pointer' : '';\r\n        });\r\n\r\n        //register map first render's event to show marker's effect\r\n        self.c9Map.once('postrender', function(evt) {\r\n            setTimeout(function(){\r\n                self.c9Markers.getFeatures().forEach(function(f, i){\r\n                    self.createMarkerEffect(f);\r\n                })\r\n            }, LOAD_MAP_DELAY);\r\n        });\r\n\r\n        //register click event to show effect on markers\r\n        self.c9Map.on('click', function(evt){\r\n            var f = self.c9Map.forEachFeatureAtPixel(evt.pixel, function(feature, layer){\r\n                return feature;\r\n            });\r\n            if (f && f.get('type') == 'c9GeoMarker') {\r\n                // self.createMarkerEffect(f);\r\n                //test\r\n                panAnimation(f)\r\n            }\r\n        });\r\n\r\n        //register keydown event to change center view\r\n        $(document).keydown(function(e) {\r\n            var keydownAnimate = function(k) {\r\n                var selectedFeature = undefined;\r\n                var minDistance = Infinity;\r\n                self.c9Markers.getFeatures().forEach(function(f, i) {\r\n                    var checkAnimate = distanceAndDirection(f);\r\n\r\n                    if (((checkAnimate[1] && k == LEFT_KEY) || (!checkAnimate[1] && k == RIGHT_KEY)) && checkAnimate[0] < minDistance && checkAnimate[0] != 0) {\r\n                        minDistance = checkAnimate[0];\r\n                        selectedFeature = f;\r\n                    }\r\n                });\r\n                if (selectedFeature) {\r\n                    setTimeout(self.createMarkerEffect(selectedFeature), LOAD_MAP_DELAY);\r\n                    panAnimation(selectedFeature);\r\n                }\r\n            }\r\n            switch(e.keyCode) {\r\n                case LEFT_KEY:\r\n                    keydownAnimate(LEFT_KEY);\r\n                    break;\r\n                case RIGHT_KEY:\r\n                    keydownAnimate(RIGHT_KEY);\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/map/C9.Map.js\n **/"],"sourceRoot":""}